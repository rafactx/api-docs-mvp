{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/codegen/code.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/codegen/scope.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/codegen/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/util.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/names.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/errors.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/boolSchema.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/rules.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/applicability.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/dataType.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/defaults.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/code.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/keyword.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/subschema.ts", "../../../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js", "../../../../node_modules/.pnpm/json-schema-traverse@1.0.0/node_modules/json-schema-traverse/index.js", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/resolve.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/validate/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/runtime/validation_error.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/ref_error.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/compile/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/data.json", "../../../../node_modules/.pnpm/fast-uri@3.0.6/node_modules/fast-uri/lib/scopedChars.js", "../../../../node_modules/.pnpm/fast-uri@3.0.6/node_modules/fast-uri/lib/utils.js", "../../../../node_modules/.pnpm/fast-uri@3.0.6/node_modules/fast-uri/lib/schemes.js", "../../../../node_modules/.pnpm/fast-uri@3.0.6/node_modules/fast-uri/index.js", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/runtime/uri.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/core.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/core/ref.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/vocabulary/core.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/vocabulary/validation/limitNumber.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/vocabulary/validation/limitNumberExclusive.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/runtime/ucs2length.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/limitLength.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/pattern.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/required.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/limitItems.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/runtime/equal.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/const.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/enum.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/vocabulary/validation/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/items.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/items2020.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/contains.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/properties.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/not.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/allOf.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/if.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/format/format.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/format/index.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/vocabulary/draft4.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/discriminator/types.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/discriminator/index.ts", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/dist/refs/json-schema-draft-04.json", "../../../../node_modules/.pnpm/ajv-draft-04@1.0.0_ajv@8.17.1/node_modules/ajv-draft-04/src/index.ts", "../../../../node_modules/.pnpm/ajv-formats@3.0.1_ajv@8.17.1/node_modules/ajv-formats/src/formats.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/core/id.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/core/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/metadata.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/draft7.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-draft-07.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/ajv.ts", "../../../../node_modules/.pnpm/ajv-formats@3.0.1_ajv@8.17.1/node_modules/ajv-formats/src/limit.ts", "../../../../node_modules/.pnpm/ajv-formats@3.0.1_ajv@8.17.1/node_modules/ajv-formats/src/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/dynamic/dynamicAnchor.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/dynamic/dynamicRef.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/dynamic/recursiveAnchor.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/dynamic/recursiveRef.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/dynamic/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/dependentRequired.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/applicator/dependentSchemas.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/validation/limitContains.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/next.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/unevaluated/unevaluatedProperties.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/unevaluated/unevaluatedItems.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/unevaluated/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/vocabularies/draft2020.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/schema.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/applicator.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/unevaluated.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/content.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/core.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/format-annotation.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/meta-data.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/dist/refs/json-schema-2020-12/meta/validation.json", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/refs/json-schema-2020-12/index.ts", "../../../../node_modules/.pnpm/ajv@8.17.1/node_modules/ajv/lib/2020.ts", "../../../../node_modules/.pnpm/jsonpointer@5.0.1/node_modules/jsonpointer/jsonpointer.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/_virtual/_plugin-vue_export-helper.js", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/legacy/reference-config.ts", "../../../../node_modules/.pnpm/@scalar+helpers@0.0.4/node_modules/@scalar/helpers/src/object/local-storage.ts", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/libs/errors.js", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/shared/utility.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/x-scalar-environments.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/x-scalar-secrets.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/utils/nanoid.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/entities/security-scheme.ts", "../../../../node_modules/.pnpm/@scalar+helpers@0.0.4/node_modules/@scalar/helpers/src/object/omit-undefined-values.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-additional-properties-name.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-code-samples.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-enum-descriptions.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-internal.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-icon.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-ignore.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-redirect-uri.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-sdk-installation.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-security-query.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-scalar-stability.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-tag-groups.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-use-pkce.ts", "../../../../node_modules/.pnpm/@scalar+openapi-types@0.3.3/node_modules/@scalar/openapi-types/src/schemas/extensions/x-post-response.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/spec-objects.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/collection.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/parameters.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/server.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/api-client/api-client-plugin.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/api-reference/api-reference-plugin.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/api-reference/api-reference-configuration.ts", "../../../../node_modules/.pnpm/@scalar+types@0.2.3/node_modules/@scalar/types/src/api-reference/html-rendering-configuration.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/spec-getters/get-server-variable-examples.ts", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/arrays/types.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/spec-getters/get-example-from-schema.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/spec-getters/get-parameters-from-operation.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/spec-getters/get-request-body-from-operation.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/request-examples.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/spec/requests.ts", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/nested/nested.ts", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/mutator-record/mutations.ts", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/mutator-record/local-storage.ts", "../../../../node_modules/.pnpm/flatted@3.3.3/node_modules/flatted/esm/index.js", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/mutator-record/debounce.ts", "../../../../node_modules/.pnpm/@scalar+object-utils@1.2.1/node_modules/@scalar/object-utils/src/mutator-record/handlers.ts", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/collections.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/cookies.js", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/environment/environment.ts", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/environment.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/libs/event-bus.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/events.js", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/schemas/v2.0/schema.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/schemas/v3.0/schema.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/schemas/v3.1/schema.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/configuration/index.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/is-object.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/details.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/get-entrypoint.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/traverse.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/get-list-of-references.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/is-filesystem.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/normalize.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/make-filesystem.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/unescape-json-pointer.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/get-segments-from-path.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/resolve-references.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/dereference.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/escape-json-pointer.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/is-json.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/is-yaml.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/load/load.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/to-json.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/to-yaml.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/upgrade-from-three-to-three-one.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/upgrade-from-two-to-three.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/upgrade.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/lib/Validator/Validator.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/betterAjvErrors/utils.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/betterAjvErrors/validation-errors/enum.js", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/polyfills/path.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/bundle/value-generator.ts", "../../../../node_modules/.pnpm/@scalar+openapi-parser@0.18.0/node_modules/@scalar/openapi-parser/src/utils/bundle/bundle.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/transforms/import-spec.ts", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/import-spec.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/request-example.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/requests.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/security-schemes.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/servers.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/tags.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/fonts/fonts.css2.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/alternate.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/bluePlanet.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/deepSpace.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/default.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/elysiajs.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/fastify.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/kepler.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/mars.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/moon.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/laserwave.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/purple.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/saturn.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/presets/solarized.css.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/utilities/has-obtrusive-scrollbars.js", "../../../../node_modules/.pnpm/@scalar+themes@0.13.3/node_modules/@scalar/themes/dist/index.js", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/hotkeys/hotkeys.ts", "../../../../node_modules/.pnpm/@scalar+oas-utils@0.4.6/node_modules/@scalar/oas-utils/src/entities/workspace/workspace.ts", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/workspace.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/store.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/routes.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/libs/string-template.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/router-params.js", "../../../../node_modules/.pnpm/@scalar+api-client@2.5.9_tailwindcss@4.1.10_typescript@5.8.3/node_modules/@scalar/api-client/dist/store/active-entities.js"],
  "sourcesContent": ["// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n", "import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n", "import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n", "import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n", "import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n", "import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n", "import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n", "import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n", "import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n", "import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n", "import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n", "import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n", "import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n", "import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponent} from \"fast-uri\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponent): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n", "import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n", "import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n", "import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n", "import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport {URIComponent} from \"fast-uri\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URIComponent,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n", "{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n", "'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n", "'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nconst IPV4_REG = /^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)$/u\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(IPV4_REG) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host)\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n", "'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n", "'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (_v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host)\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && parsed.query === undefined && !parsed.path) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n", "import * as uri from \"fast-uri\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n", "export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n", "import type {Vocabulary} from \"ajv/dist/core\"\nimport refKeyword from \"ajv/dist/vocabularies/core/ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"id\",\n  \"$defs\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  refKeyword,\n]\n\nexport default core\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordCxt,\n  KeywordErrorDefinition,\n} from \"ajv/dist/core\"\nimport type {KeywordErrorCxt} from \"ajv/dist/types\"\nimport {_, str, Code} from \"ajv/dist/core\"\nimport {operators} from \"ajv/dist/compile/codegen\"\n\nconst ops = operators\n\nexport type LimitKwd = \"maximum\" | \"minimum\"\n\nexport type ExclusiveLimitKwd = \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\ninterface KwdOp {\n  okStr: Comparison\n  ok: Code\n  fail: Code\n}\n\ninterface KwdDef {\n  exclusive: ExclusiveLimitKwd\n  ops: [KwdOp, KwdOp]\n}\n\nconst KWDs: {[K in LimitKwd]: KwdDef} = {\n  maximum: {\n    exclusive: \"exclusiveMaximum\",\n    ops: [\n      {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n      {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n    ],\n  },\n  minimum: {\n    exclusive: \"exclusiveMinimum\",\n    ops: [\n      {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n      {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n    ],\n  },\n}\n\nexport type LimitNumberError = ErrorObject<\n  LimitKwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: (cxt) => str`must be ${kwdOp(cxt).okStr} ${cxt.schemaCode}`,\n  params: (cxt) => _`{comparison: ${kwdOp(cxt).okStr}, limit: ${cxt.schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${kwdOp(cxt).fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nfunction kwdOp(cxt: KeywordErrorCxt): KwdOp {\n  const keyword = cxt.keyword as LimitKwd\n  const opsIdx = cxt.parentSchema?.[KWDs[keyword].exclusive] ? 1 : 0\n  return KWDs[keyword].ops[opsIdx]\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  // ErrorObject,\n  KeywordCxt,\n  // KeywordErrorDefinition,\n} from \"ajv/dist/core\"\nimport {LimitKwd, ExclusiveLimitKwd} from \"./limitNumber\"\n\nconst KWDs: {[K in ExclusiveLimitKwd]: LimitKwd} = {\n  exclusiveMaximum: \"maximum\",\n  exclusiveMinimum: \"minimum\",\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"boolean\",\n  code({keyword, parentSchema}: KeywordCxt) {\n    const limitKwd = KWDs[keyword as ExclusiveLimitKwd]\n    if (parentSchema[limitKwd] === undefined) {\n      throw new Error(`${keyword} can only be used with ${limitKwd}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n", "// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n", "// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"ajv/dist/core\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport limitNumberExclusive from \"./limitNumberExclusive\"\nimport multipleOf, {MultipleOfError} from \"ajv/dist/vocabularies/validation/multipleOf\"\nimport limitLength from \"ajv/dist/vocabularies/validation/limitLength\"\nimport pattern, {PatternError} from \"ajv/dist/vocabularies/validation/pattern\"\nimport limitProperties from \"ajv/dist/vocabularies/validation/limitProperties\"\nimport required, {RequiredError} from \"ajv/dist/vocabularies/validation/required\"\nimport limitItems from \"ajv/dist/vocabularies/validation/limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"ajv/dist/vocabularies/validation/uniqueItems\"\nimport constKeyword, {ConstError} from \"ajv/dist/vocabularies/validation/const\"\nimport enumKeyword, {EnumError} from \"ajv/dist/vocabularies/validation/enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  limitNumberExclusive,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n", "import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n", "import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n", "import type {Vocabulary} from \"ajv/dist/core\"\nimport coreVocabulary from \"./core\"\nimport validationDraft4 from \"./validation\"\nimport getApplicatorVocabulary from \"ajv/dist/vocabularies/applicator\"\nimport formatVocabulary from \"ajv/dist/vocabularies/format\"\n\nconst metadataVocabulary: Vocabulary = [\"title\", \"description\", \"default\"]\n\nconst draft4Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationDraft4,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n]\n\nexport default draft4Vocabularies\n", "import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n", "import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n", "{\n  \"id\": \"http://json-schema.org/draft-04/schema#\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"description\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"positiveInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"positiveIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/positiveInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    }\n  },\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": {},\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/positiveInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/positiveIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\n      \"anyOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#\"}],\n      \"default\": {}\n    },\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": {}\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/positiveInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/positiveIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"maxProperties\": {\"$ref\": \"#/definitions/positiveInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/positiveIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\n      \"anyOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#\"}],\n      \"default\": {}\n    },\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"enum\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"dependencies\": {\n    \"exclusiveMaximum\": [\"maximum\"],\n    \"exclusiveMinimum\": [\"minimum\"]\n  },\n  \"default\": {}\n}\n", "import type {AnySchemaObject, Options} from \"ajv/dist/core\"\nimport AjvCore from \"ajv/dist/core\"\nimport draft4Vocabularies from \"./vocabulary/draft4\"\nimport discriminator from \"ajv/dist/vocabularies/discriminator\"\nimport * as draft4MetaSchema from \"./refs/json-schema-draft-04.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-04/schema\"\n\nclass Ajv extends AjvCore {\n  constructor(opts: Options = {}) {\n    super({\n      ...opts,\n      schemaId: \"id\",\n    })\n  }\n\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft4Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft4MetaSchema, META_SUPPORT_DATA)\n      : draft4MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"ajv/dist/types\"\n\nexport {\n  Plugin,\n  Options,\n  CodeOptions,\n  InstanceOptions,\n  Logger,\n  ErrorsTextOptions,\n} from \"ajv/dist/core\"\nexport {SchemaCxt, SchemaObjCxt} from \"ajv/dist/core\"\nexport {KeywordCxt} from \"ajv/dist/core\"\nexport {DefinedError} from \"ajv/dist/core\"\nexport {JSONType} from \"ajv/dist/core\"\nexport {JSONSchemaType} from \"ajv/dist/core\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"ajv/dist/core\"\n", "import type {Format, FormatDefinition} from \"ajv\"\nimport type {FormatValidator, FormatCompare} from \"ajv/dist/types\"\n\nexport type FormatMode = \"fast\" | \"full\"\n\nexport type FormatName =\n  | \"date\"\n  | \"time\"\n  | \"date-time\"\n  | \"iso-time\"\n  | \"iso-date-time\"\n  | \"duration\"\n  | \"uri\"\n  | \"uri-reference\"\n  | \"uri-template\"\n  | \"url\"\n  | \"email\"\n  | \"hostname\"\n  | \"ipv4\"\n  | \"ipv6\"\n  | \"regex\"\n  | \"uuid\"\n  | \"json-pointer\"\n  | \"json-pointer-uri-fragment\"\n  | \"relative-json-pointer\"\n  | \"byte\"\n  | \"int32\"\n  | \"int64\"\n  | \"float\"\n  | \"double\"\n  | \"password\"\n  | \"binary\"\n\nexport type DefinedFormats = {\n  [key in FormatName]: Format\n}\n\nfunction fmtDef(\n  validate: RegExp | FormatValidator<string>,\n  compare: FormatCompare<string>\n): FormatDefinition<string> {\n  return {validate, compare}\n}\n\nexport const fullFormats: DefinedFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: fmtDef(date, compareDate),\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: fmtDef(getTime(true), compareTime),\n  \"date-time\": fmtDef(getDateTime(true), compareDateTime),\n  \"iso-time\": fmtDef(getTime(), compareIsoTime),\n  \"iso-date-time\": fmtDef(getDateTime(), compareIsoDateTime),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\":\n    /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\":\n    /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email:\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname:\n    /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: {type: \"number\", validate: validateInt32},\n  // signed 64 bit integer\n  int64: {type: \"number\", validate: validateInt64},\n  // C-type float\n  float: {type: \"number\", validate: validateNumber},\n  // C-type double\n  double: {type: \"number\", validate: validateNumber},\n  // hint to the UI to hide input strings\n  password: true,\n  // unchecked string payload\n  binary: true,\n}\n\nexport const fastFormats: DefinedFormats = {\n  ...fullFormats,\n  date: fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/, compareDate),\n  time: fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareTime\n  ),\n  \"date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareDateTime\n  ),\n  \"iso-time\": fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareIsoTime\n  ),\n  \"iso-date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareIsoDateTime\n  ),\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  \"uri-reference\": /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')\n  email:\n    /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n}\n\nexport const formatNames = Object.keys(fullFormats) as FormatName[]\n\nfunction isLeapYear(year: number): boolean {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n}\n\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction date(str: string): boolean {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  const matches: string[] | null = DATE.exec(str)\n  if (!matches) return false\n  const year: number = +matches[1]\n  const month: number = +matches[2]\n  const day: number = +matches[3]\n  return (\n    month >= 1 &&\n    month <= 12 &&\n    day >= 1 &&\n    day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month])\n  )\n}\n\nfunction compareDate(d1: string, d2: string): number | undefined {\n  if (!(d1 && d2)) return undefined\n  if (d1 > d2) return 1\n  if (d1 < d2) return -1\n  return 0\n}\n\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i\n\nfunction getTime(strictTimeZone?: boolean): (str: string) => boolean {\n  return function time(str: string): boolean {\n    const matches: string[] | null = TIME.exec(str)\n    if (!matches) return false\n    const hr: number = +matches[1]\n    const min: number = +matches[2]\n    const sec: number = +matches[3]\n    const tz: string | undefined = matches[4]\n    const tzSign: number = matches[5] === \"-\" ? -1 : 1\n    const tzH: number = +(matches[6] || 0)\n    const tzM: number = +(matches[7] || 0)\n    if (tzH > 23 || tzM > 59 || (strictTimeZone && !tz)) return false\n    if (hr <= 23 && min <= 59 && sec < 60) return true\n    // leap second\n    const utcMin = min - tzM * tzSign\n    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0)\n    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61\n  }\n}\n\nfunction compareTime(s1: string, s2: string): number | undefined {\n  if (!(s1 && s2)) return undefined\n  const t1 = new Date(\"2020-01-01T\" + s1).valueOf()\n  const t2 = new Date(\"2020-01-01T\" + s2).valueOf()\n  if (!(t1 && t2)) return undefined\n  return t1 - t2\n}\n\nfunction compareIsoTime(t1: string, t2: string): number | undefined {\n  if (!(t1 && t2)) return undefined\n  const a1 = TIME.exec(t1)\n  const a2 = TIME.exec(t2)\n  if (!(a1 && a2)) return undefined\n  t1 = a1[1] + a1[2] + a1[3]\n  t2 = a2[1] + a2[2] + a2[3]\n  if (t1 > t2) return 1\n  if (t1 < t2) return -1\n  return 0\n}\n\nconst DATE_TIME_SEPARATOR = /t|\\s/i\nfunction getDateTime(strictTimeZone?: boolean): (str: string) => boolean {\n  const time = getTime(strictTimeZone)\n\n  return function date_time(str: string): boolean {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime: string[] = str.split(DATE_TIME_SEPARATOR)\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1])\n  }\n}\n\nfunction compareDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const d1 = new Date(dt1).valueOf()\n  const d2 = new Date(dt2).valueOf()\n  if (!(d1 && d2)) return undefined\n  return d1 - d2\n}\n\nfunction compareIsoDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const [d1, t1] = dt1.split(DATE_TIME_SEPARATOR)\n  const [d2, t2] = dt2.split(DATE_TIME_SEPARATOR)\n  const res = compareDate(d1, d2)\n  if (res === undefined) return undefined\n  return res || compareTime(t1, t2)\n}\n\nconst NOT_URI_FRAGMENT = /\\/|:/\nconst URI =\n  /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i\n\nfunction uri(str: string): boolean {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str)\n}\n\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm\n\nfunction byte(str: string): boolean {\n  BYTE.lastIndex = 0\n  return BYTE.test(str)\n}\n\nconst MIN_INT32 = -(2 ** 31)\nconst MAX_INT32 = 2 ** 31 - 1\n\nfunction validateInt32(value: number): boolean {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32\n}\n\nfunction validateInt64(value: number): boolean {\n  // JSON and javascript max Int is 2**53, so any int that passes isInteger is valid for Int64\n  return Number.isInteger(value)\n}\n\nfunction validateNumber(): boolean {\n  return true\n}\n\nconst Z_ANCHOR = /[^\\\\]\\\\Z/\nfunction regex(str: string): boolean {\n  if (Z_ANCHOR.test(str)) return false\n  try {\n    new RegExp(str)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n", "import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n", "import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n", "import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n", "import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n", "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "import type Ajv from \"ajv\"\nimport type {\n  Plugin,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  Code,\n  Name,\n  ErrorObject,\n} from \"ajv\"\nimport type {AddedFormat} from \"ajv/dist/types\"\nimport type {Rule} from \"ajv/dist/compile/rules\"\nimport {KeywordCxt} from \"ajv\"\nimport {_, str, or, getProperty, operators} from \"ajv/dist/compile/codegen\"\n\ntype Kwd = \"formatMaximum\" | \"formatMinimum\" | \"formatExclusiveMaximum\" | \"formatExclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst ops = operators\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  formatMaximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  formatMinimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  formatExclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  formatExclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitFormatError = ErrorObject<Kwd, {limit: string; comparison: Comparison}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`should be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nexport const formatLimitDefinition: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {gen, data, schemaCode, keyword, it} = cxt\n    const {opts, self} = it\n    if (!opts.validateFormats) return\n\n    const fCxt = new KeywordCxt(it, (self.RULES.all.format as Rule).definition, \"format\")\n    if (fCxt.$data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fmt = gen.const(\"fmt\", _`${fmts}[${fCxt.schemaCode}]`)\n      cxt.fail$data(\n        or(\n          _`typeof ${fmt} != \"object\"`,\n          _`${fmt} instanceof RegExp`,\n          _`typeof ${fmt}.compare != \"function\"`,\n          compareCode(fmt)\n        )\n      )\n    }\n\n    function validateFormat(): void {\n      const format = fCxt.schema as string\n      const fmtDef: AddedFormat | undefined = self.formats[format]\n      if (!fmtDef || fmtDef === true) return\n      if (\n        typeof fmtDef != \"object\" ||\n        fmtDef instanceof RegExp ||\n        typeof fmtDef.compare != \"function\"\n      ) {\n        throw new Error(`\"${keyword}\": format \"${format}\" does not define \"compare\" function`)\n      }\n      const fmt = gen.scopeValue(\"formats\", {\n        key: format,\n        ref: fmtDef,\n        code: opts.code.formats ? _`${opts.code.formats}${getProperty(format)}` : undefined,\n      })\n\n      cxt.fail$data(compareCode(fmt))\n    }\n\n    function compareCode(fmt: Name): Code {\n      return _`${fmt}.compare(${data}, ${schemaCode}) ${KWDs[keyword as Kwd].fail} 0`\n    }\n  },\n  dependencies: [\"format\"],\n}\n\nconst formatLimitPlugin: Plugin<undefined> = (ajv: Ajv): Ajv => {\n  ajv.addKeyword(formatLimitDefinition)\n  return ajv\n}\n\nexport default formatLimitPlugin\n", "import {\n  DefinedFormats,\n  FormatMode,\n  FormatName,\n  formatNames,\n  fastFormats,\n  fullFormats,\n} from \"./formats\"\nimport formatLimit from \"./limit\"\nimport type Ajv from \"ajv\"\nimport type {Plugin, Format} from \"ajv\"\nimport {_, Name} from \"ajv/dist/compile/codegen\"\n\nexport {FormatMode, FormatName} from \"./formats\"\nexport {LimitFormatError} from \"./limit\"\nexport interface FormatOptions {\n  mode?: FormatMode\n  formats?: FormatName[]\n  keywords?: boolean\n}\n\nexport type FormatsPluginOptions = FormatName[] | FormatOptions\n\nexport interface FormatsPlugin extends Plugin<FormatsPluginOptions> {\n  get: (format: FormatName, mode?: FormatMode) => Format\n}\n\nconst fullName = new Name(\"fullFormats\")\nconst fastName = new Name(\"fastFormats\")\n\nconst formatsPlugin: FormatsPlugin = (\n  ajv: Ajv,\n  opts: FormatsPluginOptions = {keywords: true}\n): Ajv => {\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, fullFormats, fullName)\n    return ajv\n  }\n  const [formats, exportName] =\n    opts.mode === \"fast\" ? [fastFormats, fastName] : [fullFormats, fullName]\n  const list = opts.formats || formatNames\n  addFormats(ajv, list, formats, exportName)\n  if (opts.keywords) formatLimit(ajv)\n  return ajv\n}\n\nformatsPlugin.get = (name: FormatName, mode: FormatMode = \"full\"): Format => {\n  const formats = mode === \"fast\" ? fastFormats : fullFormats\n  const f = formats[name]\n  if (!f) throw new Error(`Unknown format \"${name}\"`)\n  return f\n}\n\nfunction addFormats(ajv: Ajv, list: FormatName[], fs: DefinedFormats, exportName: Name): void {\n  ajv.opts.code.formats ??= _`require(\"ajv-formats/dist/formats\").${exportName}`\n  for (const f of list) ajv.addFormat(f, fs[f])\n}\n\nmodule.exports = exports = formatsPlugin\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default formatsPlugin\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Code} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, compileSchema} from \"../../compile\"\nimport {getValidate} from \"../core/ref\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$dynamicAnchor\",\n  schemaType: \"string\",\n  code: (cxt) => dynamicAnchor(cxt, cxt.schema),\n}\n\nexport function dynamicAnchor(cxt: KeywordCxt, anchor: string): void {\n  const {gen, it} = cxt\n  it.schemaEnv.root.dynamicAnchors[anchor] = true\n  const v = _`${N.dynamicAnchors}${getProperty(anchor)}`\n  const validate = it.errSchemaPath === \"#\" ? it.validateName : _getValidate(cxt)\n  gen.if(_`!${v}`, () => gen.assign(v, validate))\n}\n\nfunction _getValidate(cxt: KeywordCxt): Code {\n  const {schemaEnv, schema, self} = cxt.it\n  const {root, baseId, localRefs, meta} = schemaEnv.root\n  const {schemaId} = self.opts\n  const sch = new SchemaEnv({schema, schemaId, root, baseId, localRefs, meta})\n  compileSchema.call(self, sch)\n  return getValidate(cxt, sch)\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {callRef} from \"../core/ref\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$dynamicRef\",\n  schemaType: \"string\",\n  code: (cxt) => dynamicRef(cxt, cxt.schema),\n}\n\nexport function dynamicRef(cxt: KeywordCxt, ref: string): void {\n  const {gen, keyword, it} = cxt\n  if (ref[0] !== \"#\") throw new Error(`\"${keyword}\" only supports hash fragment reference`)\n  const anchor = ref.slice(1)\n  if (it.allErrors) {\n    _dynamicRef()\n  } else {\n    const valid = gen.let(\"valid\", false)\n    _dynamicRef(valid)\n    cxt.ok(valid)\n  }\n\n  function _dynamicRef(valid?: Name): void {\n    // TODO the assumption here is that `recursiveRef: #` always points to the root\n    // of the schema object, which is not correct, because there may be $id that\n    // makes # point to it, and the target schema may not contain dynamic/recursiveAnchor.\n    // Because of that 2 tests in recursiveRef.json fail.\n    // This is a similar problem to #815 (`$id` doesn't alter resolution scope for `{ \"$ref\": \"#\" }`).\n    // (This problem is not tested in JSON-Schema-Test-Suite)\n    if (it.schemaEnv.root.dynamicAnchors[anchor]) {\n      const v = gen.let(\"_v\", _`${N.dynamicAnchors}${getProperty(anchor)}`)\n      gen.if(v, _callRef(v, valid), _callRef(it.validateName, valid))\n    } else {\n      _callRef(it.validateName, valid)()\n    }\n  }\n\n  function _callRef(validate: Code, valid?: Name): () => void {\n    return valid\n      ? () =>\n          gen.block(() => {\n            callRef(cxt, validate)\n            gen.let(valid, true)\n          })\n      : () => callRef(cxt, validate)\n  }\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {dynamicAnchor} from \"./dynamicAnchor\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$recursiveAnchor\",\n  schemaType: \"boolean\",\n  code(cxt) {\n    if (cxt.schema) dynamicAnchor(cxt, \"\")\n    else checkStrictMode(cxt.it, \"$recursiveAnchor: false is ignored\")\n  },\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {dynamicRef} from \"./dynamicRef\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$recursiveRef\",\n  schemaType: \"string\",\n  code: (cxt) => dynamicRef(cxt, cxt.schema),\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport dynamicAnchor from \"./dynamicAnchor\"\nimport dynamicRef from \"./dynamicRef\"\nimport recursiveAnchor from \"./recursiveAnchor\"\nimport recursiveRef from \"./recursiveRef\"\n\nconst dynamic: Vocabulary = [dynamicAnchor, dynamicRef, recursiveAnchor, recursiveRef]\n\nexport default dynamic\n", "import type {CodeKeywordDefinition, ErrorObject} from \"../../types\"\nimport {\n  validatePropertyDeps,\n  error,\n  DependenciesErrorParams,\n  PropertyDependencies,\n} from \"../applicator/dependencies\"\n\nexport type DependentRequiredError = ErrorObject<\n  \"dependentRequired\",\n  DependenciesErrorParams,\n  PropertyDependencies\n>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependentRequired\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code: (cxt) => validatePropertyDeps(cxt),\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateSchemaDeps} from \"./dependencies\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependentSchemas\",\n  type: \"object\",\n  schemaType: \"object\",\n  code: (cxt) => validateSchemaDeps(cxt),\n}\n\nexport default def\n", "import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxContains\", \"minContains\"],\n  type: \"array\",\n  schemaType: \"number\",\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.contains === undefined) {\n      checkStrictMode(it, `\"${keyword}\" without \"contains\" is ignored`)\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../types\"\nimport dependentRequired from \"./validation/dependentRequired\"\nimport dependentSchemas from \"./applicator/dependentSchemas\"\nimport limitContains from \"./validation/limitContains\"\n\nconst next: Vocabulary = [dependentRequired, dependentSchemas, limitContains]\n\nexport default next\n", "import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport {_, not, and, Name, Code} from \"../../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../../compile/util\"\nimport N from \"../../compile/names\"\n\nexport type UnevaluatedPropertiesError = ErrorObject<\n  \"unevaluatedProperties\",\n  {unevaluatedProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have unevaluated properties\",\n  params: ({params}) => _`{unevaluatedProperty: ${params.unevaluatedProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"unevaluatedProperties\",\n  type: \"object\",\n  schemaType: [\"boolean\", \"object\"],\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, props} = it\n    if (props instanceof Name) {\n      gen.if(_`${props} !== true`, () =>\n        gen.forIn(\"key\", data, (key: Name) =>\n          gen.if(unevaluatedDynamic(props, key), () => unevaluatedPropCode(key))\n        )\n      )\n    } else if (props !== true) {\n      gen.forIn(\"key\", data, (key: Name) =>\n        props === undefined\n          ? unevaluatedPropCode(key)\n          : gen.if(unevaluatedStatic(props, key), () => unevaluatedPropCode(key))\n      )\n    }\n    it.props = true\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function unevaluatedPropCode(key: Name): void {\n      if (schema === false) {\n        cxt.setParams({unevaluatedProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (!alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        cxt.subschema(\n          {\n            keyword: \"unevaluatedProperties\",\n            dataProp: key,\n            dataPropType: Type.Str,\n          },\n          valid\n        )\n        if (!allErrors) gen.if(not(valid), () => gen.break())\n      }\n    }\n\n    function unevaluatedDynamic(evaluatedProps: Name, key: Name): Code {\n      return _`!${evaluatedProps} || !${evaluatedProps}[${key}]`\n    }\n\n    function unevaluatedStatic(evaluatedProps: {[K in string]?: true}, key: Name): Code {\n      const ps: Code[] = []\n      for (const p in evaluatedProps) {\n        if (evaluatedProps[p] === true) ps.push(_`${key} !== ${p}`)\n      }\n      return and(...ps)\n    }\n  },\n}\n\nexport default def\n", "import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../../compile/util\"\n\nexport type UnevaluatedItemsError = ErrorObject<\"unevaluatedItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"unevaluatedItems\",\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    const items = it.items || 0\n    if (items === true) return\n    const len = gen.const(\"len\", _`${data}.length`)\n    if (schema === false) {\n      cxt.setParams({len: items})\n      cxt.fail(_`${len} > ${items}`)\n    } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n      const valid = gen.var(\"valid\", _`${len} <= ${items}`)\n      gen.if(not(valid), () => validateItems(valid, items))\n      cxt.ok(valid)\n    }\n    it.items = true\n\n    function validateItems(valid: Name, from: Name | number): void {\n      gen.forRange(\"i\", from, len, (i) => {\n        cxt.subschema({keyword: \"unevaluatedItems\", dataProp: i, dataPropType: Type.Num}, valid)\n        if (!it.allErrors) gen.if(not(valid), () => gen.break())\n      })\n    }\n  },\n}\n\nexport default def\n", "import type {Vocabulary} from \"../../types\"\nimport unevaluatedProperties from \"./unevaluatedProperties\"\nimport unevaluatedItems from \"./unevaluatedItems\"\n\nconst unevaluated: Vocabulary = [unevaluatedProperties, unevaluatedItems]\n\nexport default unevaluated\n", "import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport dynamicVocabulary from \"./dynamic\"\nimport nextVocabulary from \"./next\"\nimport unevaluatedVocabulary from \"./unevaluated\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft2020Vocabularies: Vocabulary[] = [\n  dynamicVocabulary,\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(true),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n  nextVocabulary,\n  unevaluatedVocabulary,\n]\n\nexport default draft2020Vocabularies\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/core\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/applicator\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/unevaluated\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/validation\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/meta-data\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/format-annotation\": true,\n    \"https://json-schema.org/draft/2020-12/vocab/content\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Core and Validation specifications meta-schema\",\n  \"allOf\": [\n    {\"$ref\": \"meta/core\"},\n    {\"$ref\": \"meta/applicator\"},\n    {\"$ref\": \"meta/unevaluated\"},\n    {\"$ref\": \"meta/validation\"},\n    {\"$ref\": \"meta/meta-data\"},\n    {\"$ref\": \"meta/format-annotation\"},\n    {\"$ref\": \"meta/content\"}\n  ],\n  \"type\": [\"object\", \"boolean\"],\n  \"$comment\": \"This meta-schema also defines keywords that have appeared in previous drafts in order to prevent incompatible extensions as they remain in common use.\",\n  \"properties\": {\n    \"definitions\": {\n      \"$comment\": \"\\\"definitions\\\" has been replaced by \\\"$defs\\\".\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$dynamicRef\": \"#meta\"},\n      \"deprecated\": true,\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"$comment\": \"\\\"dependencies\\\" has been split and replaced by \\\"dependentSchemas\\\" and \\\"dependentRequired\\\" in order to serve their differing semantics.\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$dynamicRef\": \"#meta\"}, {\"$ref\": \"meta/validation#/$defs/stringArray\"}]\n      },\n      \"deprecated\": true,\n      \"default\": {}\n    },\n    \"$recursiveAnchor\": {\n      \"$comment\": \"\\\"$recursiveAnchor\\\" has been replaced by \\\"$dynamicAnchor\\\".\",\n      \"$ref\": \"meta/core#/$defs/anchorString\",\n      \"deprecated\": true\n    },\n    \"$recursiveRef\": {\n      \"$comment\": \"\\\"$recursiveRef\\\" has been replaced by \\\"$dynamicRef\\\".\",\n      \"$ref\": \"meta/core#/$defs/uriReferenceString\",\n      \"deprecated\": true\n    }\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/applicator\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/applicator\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Applicator vocabulary meta-schema\",\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"prefixItems\": {\"$ref\": \"#/$defs/schemaArray\"},\n    \"items\": {\"$dynamicRef\": \"#meta\"},\n    \"contains\": {\"$dynamicRef\": \"#meta\"},\n    \"additionalProperties\": {\"$dynamicRef\": \"#meta\"},\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$dynamicRef\": \"#meta\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$dynamicRef\": \"#meta\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependentSchemas\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$dynamicRef\": \"#meta\"},\n      \"default\": {}\n    },\n    \"propertyNames\": {\"$dynamicRef\": \"#meta\"},\n    \"if\": {\"$dynamicRef\": \"#meta\"},\n    \"then\": {\"$dynamicRef\": \"#meta\"},\n    \"else\": {\"$dynamicRef\": \"#meta\"},\n    \"allOf\": {\"$ref\": \"#/$defs/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/$defs/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/$defs/schemaArray\"},\n    \"not\": {\"$dynamicRef\": \"#meta\"}\n  },\n  \"$defs\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$dynamicRef\": \"#meta\"}\n    }\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/unevaluated\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/unevaluated\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Unevaluated applicator vocabulary meta-schema\",\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"unevaluatedItems\": {\"$dynamicRef\": \"#meta\"},\n    \"unevaluatedProperties\": {\"$dynamicRef\": \"#meta\"}\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/content\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/content\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Content vocabulary meta-schema\",\n\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentSchema\": {\"$dynamicRef\": \"#meta\"}\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/core\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/core\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Core vocabulary meta-schema\",\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"$ref\": \"#/$defs/uriReferenceString\",\n      \"$comment\": \"Non-empty fragments not allowed.\",\n      \"pattern\": \"^[^#]*#?$\"\n    },\n    \"$schema\": {\"$ref\": \"#/$defs/uriString\"},\n    \"$ref\": {\"$ref\": \"#/$defs/uriReferenceString\"},\n    \"$anchor\": {\"$ref\": \"#/$defs/anchorString\"},\n    \"$dynamicRef\": {\"$ref\": \"#/$defs/uriReferenceString\"},\n    \"$dynamicAnchor\": {\"$ref\": \"#/$defs/anchorString\"},\n    \"$vocabulary\": {\n      \"type\": \"object\",\n      \"propertyNames\": {\"$ref\": \"#/$defs/uriString\"},\n      \"additionalProperties\": {\n        \"type\": \"boolean\"\n      }\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"$defs\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$dynamicRef\": \"#meta\"}\n    }\n  },\n  \"$defs\": {\n    \"anchorString\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[A-Za-z_][-A-Za-z0-9._]*$\"\n    },\n    \"uriString\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"uriReferenceString\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    }\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/format-annotation\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/format-annotation\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Format vocabulary meta-schema for annotation results\",\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"format\": {\"type\": \"string\"}\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/meta-data\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/meta-data\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Meta-data vocabulary meta-schema\",\n\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"deprecated\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"writeOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    }\n  }\n}\n", "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://json-schema.org/draft/2020-12/meta/validation\",\n  \"$vocabulary\": {\n    \"https://json-schema.org/draft/2020-12/vocab/validation\": true\n  },\n  \"$dynamicAnchor\": \"meta\",\n\n  \"title\": \"Validation vocabulary meta-schema\",\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/$defs/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/$defs/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/$defs/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/$defs/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"maxItems\": {\"$ref\": \"#/$defs/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/$defs/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"maxContains\": {\"$ref\": \"#/$defs/nonNegativeInteger\"},\n    \"minContains\": {\n      \"$ref\": \"#/$defs/nonNegativeInteger\",\n      \"default\": 1\n    },\n    \"maxProperties\": {\"$ref\": \"#/$defs/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/$defs/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/$defs/stringArray\"},\n    \"dependentRequired\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/stringArray\"\n      }\n    }\n  },\n  \"$defs\": {\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"$ref\": \"#/$defs/nonNegativeInteger\",\n      \"default\": 0\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  }\n}\n", "import type Ajv from \"../../core\"\nimport type {AnySchemaObject} from \"../../types\"\nimport * as metaSchema from \"./schema.json\"\nimport * as applicator from \"./meta/applicator.json\"\nimport * as unevaluated from \"./meta/unevaluated.json\"\nimport * as content from \"./meta/content.json\"\nimport * as core from \"./meta/core.json\"\nimport * as format from \"./meta/format-annotation.json\"\nimport * as metadata from \"./meta/meta-data.json\"\nimport * as validation from \"./meta/validation.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nexport default function addMetaSchema2020(this: Ajv, $data?: boolean): Ajv {\n  ;[\n    metaSchema,\n    applicator,\n    unevaluated,\n    content,\n    core,\n    with$data(this, format),\n    metadata,\n    with$data(this, validation),\n  ].forEach((sch) => this.addMetaSchema(sch, undefined, false))\n  return this\n\n  function with$data(ajv: Ajv, sch: AnySchemaObject): AnySchemaObject {\n    return $data ? ajv.$dataMetaSchema(sch, META_SUPPORT_DATA) : sch\n  }\n}\n", "import type {AnySchemaObject} from \"./types\"\nimport AjvCore, {Options} from \"./core\"\n\nimport draft2020Vocabularies from \"./vocabularies/draft2020\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport addMetaSchema2020 from \"./refs/json-schema-2020-12\"\n\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2020-12/schema\"\n\nexport class Ajv2020 extends AjvCore {\n  constructor(opts: Options = {}) {\n    super({\n      ...opts,\n      dynamicRef: true,\n      next: true,\n      unevaluated: true,\n    })\n  }\n\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft2020Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    const {$data, meta} = this.opts\n    if (!meta) return\n    addMetaSchema2020.call(this, $data)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv2020\nmodule.exports.Ajv2020 = Ajv2020\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv2020\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n", "var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n", "const s = (t, e) => {\n  const o = t.__vccOpts || t;\n  for (const [r, c] of e)\n    o[r] = c;\n  return o;\n};\nexport {\n  s as default\n};\n", "import type { OpenAPI, OpenAPIV2, OpenAPIV3, OpenAPIV3_1 } from '@scalar/openapi-types'\n\nimport type { ApiReferenceConfiguration } from '../api-reference/index'\nimport type { TargetId } from '../snippetz/index'\n\n/**\n * This re-export is needed due to a typescript issue\n * @see https://github.com/microsoft/TypeScript/issues/42873\n */\nexport type {\n  OpenAPI,\n  OpenAPIV2,\n  OpenAPIV3,\n  OpenAPIV3_1,\n} from '@scalar/openapi-types'\n\nexport type ClientInfo = {\n  key: string\n  title: string\n  link: string\n  description: string\n}\n\n/**\n * Alias for the OpenAPI 3.1 ServerObject type\n *\n * @deprecated Use OpenAPIV3_1.ServerObject instead\n */\nexport type Server = OpenAPIV3_1.ServerObject\n\nexport type TargetInfo = {\n  key: TargetId\n  title: string\n  extname: `.${string}` | null\n  default: string\n}\n\nexport type HiddenClients =\n  // Just hide all\n  | true\n  // Exclude whole targets or just specific clients\n  | Partial<Record<TargetInfo['key'], boolean | ClientInfo['key'][]>>\n  // Backwards compatibility with the previous behavior ['fetch', 'xhr']\n  | ClientInfo['key'][]\n\nexport type PathRouting = {\n  basePath: string\n}\n\n/**\n * @deprecated Use ApiReferenceConfiguration instead\n *\n * @example import type { ApiReferenceConfiguration } from '@scalar/types/api-reference'\n */\nexport type ReferenceConfiguration = Partial<ApiReferenceConfiguration>\n\nexport type BaseParameter = {\n  name: string\n  description?: string | null\n  value: string | number | Record<string, any>\n  required?: boolean\n  enabled: boolean\n}\n\ntype OptionalCharset = string | null\n\nexport type ContentType =\n  | `application/json${OptionalCharset}`\n  | `application/xml${OptionalCharset}`\n  | `text/plain${OptionalCharset}`\n  | `text/html${OptionalCharset}`\n  | `application/octet-stream${OptionalCharset}`\n  | `application/x-www-form-urlencoded${OptionalCharset}`\n  | `multipart/form-data${OptionalCharset}`\n  | `*/*${OptionalCharset}`\n  | `application/vnd.${string}+json${OptionalCharset}`\n\nexport type Cookie = {\n  name: string\n  value: string\n}\n\nexport type CustomRequestExample = {\n  lang: string\n  label: string\n  source: string\n}\n\nexport type Header = {\n  name: string\n  value: string\n}\n\nexport enum XScalarStability {\n  Deprecated = 'deprecated',\n  Experimental = 'experimental',\n  Stable = 'stable',\n}\n\nexport type Operation = {\n  id: string\n  httpVerb: OpenAPIV3_1.HttpMethods\n  path: string\n  name: string\n  isWebhook: boolean\n  description?: string\n  information: OpenAPIV3_1.OperationObject\n  servers?: OpenAPIV3_1.ServerObject[]\n  pathParameters?: OpenAPIV3_1.ParameterObject[]\n}\n\n/**\n * @deprecated Use Parameter instead\n */\nexport type Parameters = Parameter\n\nexport type Parameter = {\n  // Fixed Fields\n  name: string\n  in?: string\n  description?: string\n  required?: boolean\n  deprecated?: boolean\n  allowEmptyValue?: boolean\n  // Other\n  style?: 'form' | 'simple'\n  explode?: boolean\n  allowReserved?: boolean\n  schema?: Schema\n  example?: any\n  examples?: Map<string, any>\n  content?: RequestBodyMimeTypes\n  headers?: { [key: string]: OpenAPI.HeaderObject }\n}\n\nexport type Query = {\n  name: string\n  value: string\n}\n\n// Create a mapped type to ensure keys are a subset of ContentType\nexport type RequestBodyMimeTypes = {\n  [K in ContentType]?: {\n    schema?: any\n    example?: any\n    examples?: any\n  }\n}\n\nexport type RequestBody = {\n  description?: string\n  required?: boolean\n  content?: RequestBodyMimeTypes\n}\n\nexport type Schema = {\n  type: string\n  name?: string\n  example?: any\n  default?: any\n  format?: string\n  description?: string\n  properties?: Record<string, Schema>\n}\n\n/**\n * This is a very strange and custom way to represent the operation object.\n * It\u2019s the outcome of the `parse` helper.\n *\n * @deprecated This is evil. Stop using it. We\u2019ll transition to use the new store.\n */\nexport type TransformedOperation = Operation & {\n  pathParameters?: Parameter[]\n}\n\nexport type CollapsedSidebarItems = Record<string, boolean>\n\nexport type AuthenticationState = {\n  customSecurity?: boolean\n  /** You can pre-select a single security scheme, multiple, or complex security using an array of arrays */\n  preferredSecurityScheme?: string | (string | string[])[] | null\n  securitySchemes?:\n    | OpenAPIV2.SecurityDefinitionsObject\n    | OpenAPIV3.ComponentsObject['securitySchemes']\n    | OpenAPIV3_1.ComponentsObject['securitySchemes']\n  http?: {\n    basic?: {\n      username?: string\n      password?: string\n    }\n    bearer?: {\n      token?: string\n    }\n  }\n  apiKey?: {\n    token?: string\n  }\n  oAuth2?: {\n    clientId?: string\n    scopes?: string[]\n    accessToken?: string\n    state?: string\n    username?: string\n    password?: string\n  }\n}\n\nexport type Heading = {\n  depth: number\n  value: string\n  slug?: string\n}\n\nexport type CodeBlockSSRKey = `components-scalar-code-block${number}`\nexport type DescriptionSectionSSRKey = `components-Content-Introduction-Description-sections${number}`\n\nexport type ScalarState = {\n  'hash'?: string\n  'useGlobalStore-authentication'?: AuthenticationState\n  'useSidebarContent-collapsedSidebarItems'?: CollapsedSidebarItems\n  [key: CodeBlockSSRKey]: string\n  [key: DescriptionSectionSSRKey]: {\n    heading: Heading\n    content: string\n  }[]\n}\n\nexport type SSRState = {\n  payload: {\n    data: ScalarState\n  }\n  url: string\n}\n\nexport type Tag = {\n  'name': string\n  'description': string\n  'operations': TransformedOperation[]\n  'x-displayName'?: string\n}\n\nexport type TagGroup = {\n  name: string\n  tags: string[]\n}\n\nexport type Definitions = OpenAPIV2.DefinitionsObject\n\n/**\n * Webhook (after our super custom transformation process)\n *\n * @deprecated Let\u2019s get rid of those super custom transformed entities and use the store instead.\n */\nexport type Webhooks = Record<\n  string,\n  Record<\n    OpenAPIV3_1.HttpMethods,\n    TransformedOperation & {\n      'x-internal'?: boolean\n    }\n  >\n>\n\n/**\n * The native OpenAPI Webhook object, but with the x-internal and x-scalar-ignore properties\n */\nexport type Webhook = (OpenAPIV3.OperationObject | OpenAPIV3_1.OperationObject) & {\n  'x-internal'?: boolean\n  'x-scalar-ignore'?: boolean\n}\n\n/**\n * @deprecated Use `@scalar/openapi-types` instead\n */\nexport type Spec = {\n  'tags'?: Tag[]\n  'info':\n    | Partial<OpenAPIV2.Document['info']>\n    | Partial<OpenAPIV3.Document['info']>\n    | Partial<OpenAPIV3_1.Document['info']>\n  'host'?: OpenAPIV2.Document['host']\n  'basePath'?: OpenAPIV2.Document['basePath']\n  'schemes'?: OpenAPIV2.Document['schemes']\n  'externalDocs'?: {\n    url: string\n    description?: string\n  }\n  'servers'?: OpenAPIV3.Document['servers'] | OpenAPIV3_1.Document['servers']\n  'components'?: OpenAPIV3.ComponentsObject | OpenAPIV3_1.ComponentsObject\n  'webhooks'?: TransformedOperation[]\n  'definitions'?: Definitions\n  'swagger'?: OpenAPIV2.Document['swagger']\n  'openapi'?: OpenAPIV3.Document['openapi'] | OpenAPIV3_1.Document['openapi']\n  'x-tagGroups'?: TagGroup[]\n  'security'?: OpenAPIV3.SecurityRequirementObject[]\n}\n", "/**\n * localStorage keys for resources\n * DO NOT CHANGE THESE AS IT WILL BREAK THE MIGRATION\n */\nexport const LS_KEYS = {\n  COLLECTION: 'collection',\n  COOKIE: 'cookie',\n  ENVIRONMENT: 'environment',\n  REQUEST: 'request',\n  REQUEST_EXAMPLE: 'requestExample',\n  SECURITY_SCHEME: 'securityScheme',\n  SERVER: 'server',\n  TAG: 'tag',\n  WORKSPACE: 'workspace',\n} as const\n\n/**\n * localStorage keys for all reference resources\n * to ensure we do not have any conflicts\n */\nexport const REFERENCE_LS_KEYS = {\n  SELECTED_CLIENT: 'scalar-reference-selected-client',\n} as const\n\n/**\n * localStorage keys for all client resources\n * to ensure we do not have any conflicts\n */\nexport const CLIENT_LS_KEYS = {\n  AUTH: 'scalar-client-auth',\n  SELECTED_SECURITY_SCHEMES: 'scalar-client-selected-security-schemes',\n} as const\n\n/** SSR safe alias for localStorage */\nexport const safeLocalStorage = () =>\n  typeof window === 'undefined'\n    ? {\n        getItem: () => null,\n        setItem: () => null,\n        removeItem: () => null,\n      }\n    : localStorage\n", "const r = {\n  DEFAULT: \"An unknown error has occurred.\",\n  INVALID_URL: \"The URL seems to be invalid. Try adding a valid URL.\",\n  INVALID_HEADER: \"There is an invalid header present, please double check your params.\",\n  MISSING_FILE: \"File uploads are not saved in history, you must re-upload the file.\",\n  REQUEST_ABORTED: \"The request has been cancelled\",\n  REQUEST_FAILED: \"An error occurred while making the request\",\n  URL_EMPTY: \"The address bar input seems to be empty. Try adding a URL.\"\n}, t = (e, o = r.DEFAULT) => (console.error(e), e instanceof Error ? (e.message = n(e.message), e) : typeof e == \"string\" ? new Error(n(e)) : new Error(o)), n = (e) => e === \"Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'.\" ? r.MISSING_FILE : e === \"Failed to construct 'URL': Invalid URL\" ? r.INVALID_URL : e === \"Failed to execute 'fetch' on 'Window': Invalid name\" ? r.INVALID_HEADER : e;\nexport {\n  r as ERRORS,\n  t as normalizeError,\n  n as prettyErrorMessage\n};\n", "import type { ENTITY_BRANDS } from '@scalar/types/utils'\nimport { z } from 'zod'\n\n/** Schema for selectedSecuritySchemeUids */\nexport const selectedSecuritySchemeUidSchema = z\n  .union([\n    z.string().brand<ENTITY_BRANDS['SECURITY_SCHEME']>(),\n    z.string().brand<ENTITY_BRANDS['SECURITY_SCHEME']>().array(),\n  ])\n  .array()\n  .default([])\n\nexport type SelectedSecuritySchemeUids = z.infer<typeof selectedSecuritySchemeUidSchema>\n", "import { z } from 'zod'\n\nexport type XScalarEnvVar = z.infer<typeof xScalarEnvVarSchema>\n\nexport const xScalarEnvVarSchema = z.union([\n  z.object({\n    description: z.string().optional(),\n    default: z.string().default(''),\n  }),\n  z.string(),\n])\n\nexport const xScalarEnvironmentSchema = z.object({\n  description: z.string().optional(),\n  color: z.string().optional(),\n  /** A map of variables by name */\n  variables: z.record(z.string(), xScalarEnvVarSchema),\n})\n\n/** A map of environments by name */\nexport const xScalarEnvironmentsSchema = z.record(\n  /** Name */\n  z.string(),\n  /** Environment definition */\n  xScalarEnvironmentSchema,\n)\n\nexport type XScalarEnvironment = z.infer<typeof xScalarEnvironmentSchema>\nexport type XScalarEnvironments = z.infer<typeof xScalarEnvironmentsSchema>\n", "import { z } from 'zod'\n\nexport const xScalarSecretVarSchema = z.object({\n  description: z.string().optional(),\n  example: z.string().optional(),\n})\n\nexport const xScalarSecretsSchema = z.record(z.string(), xScalarSecretVarSchema)\nexport type XScalarSecrets = z.infer<typeof xScalarSecretsSchema>\n", "import { nanoid } from 'nanoid'\nimport { z } from 'zod'\n\n/** Generates a default value */\nexport const nanoidSchema = z\n  .string()\n  .min(7)\n  .optional()\n  .default(() => nanoid())\n\n/** UID format for objects */\nexport type Nanoid = z.infer<typeof nanoidSchema>\n\n/** All of our Zod brands for entities, used to brand nanoidSchemas. */\nexport type ENTITY_BRANDS = {\n  COLLECTION: 'collection'\n  COOKIE: 'cookie'\n  ENVIRONMENT: 'environment'\n  EXAMPLE: 'example'\n  OPERATION: 'operation'\n  SECURITY_SCHEME: 'securityScheme'\n  SERVER: 'server'\n  TAG: 'tag'\n  WORKSPACE: 'workspace'\n}\n", "import { z } from 'zod'\n\nimport { type ENTITY_BRANDS, nanoidSchema } from '../utils/nanoid'\n\n// ---------------------------------------------------------------------------\n// COMMON PROPS FOR ALL SECURITY SCHEMES\n\n/** Some common properties used in all security schemes */\nconst commonProps = z.object({\n  /* A description for security scheme. CommonMark syntax MAY be used for rich text representation. */\n  description: z.string().optional(),\n})\n\nconst extendedSecuritySchema = z.object({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['SECURITY_SCHEME']>(),\n  /** The name key that links a security requirement to a security object */\n  nameKey: z.string().optional().default(''),\n})\n\n// ---------------------------------------------------------------------------\n// API KEY\n\nexport const securitySchemeApiKeyIn = ['query', 'header', 'cookie'] as const\n\nconst oasSecuritySchemeApiKey = commonProps.extend({\n  type: z.literal('apiKey'),\n  /** REQUIRED. The name of the header, query or cookie parameter to be used. */\n  name: z.string().optional().default(''),\n  /** REQUIRED. The location of the API key. Valid values are \"query\", \"header\" or \"cookie\". */\n  in: z.enum(securitySchemeApiKeyIn).optional().default('header').catch('header'),\n})\n\nconst apiKeyValueSchema = z.object({\n  value: z.string().default(''),\n})\n\nexport const securityApiKeySchema = oasSecuritySchemeApiKey.merge(extendedSecuritySchema).merge(apiKeyValueSchema)\nexport type SecuritySchemeApiKey = z.infer<typeof securityApiKeySchema>\n\n// ---------------------------------------------------------------------------\n// HTTP\n\nconst oasSecuritySchemeHttp = commonProps.extend({\n  type: z.literal('http'),\n  /**\n   * REQUIRED. The name of the HTTP Authorization scheme to be used in the Authorization header as defined in\n   * [RFC7235]. The values used SHOULD be registered in the IANA Authentication Scheme registry.\n   */\n  scheme: z\n    .string()\n    .toLowerCase()\n    .pipe(z.enum(['basic', 'bearer']))\n    .optional()\n    .default('basic'),\n  /**\n   * A hint to the client to identify how the bearer token is formatted.\n   * Bearer tokens are usually generated by an authorization server, so\n   * this information is primarily for documentation purposes.\n   */\n  bearerFormat: z\n    .union([z.literal('JWT'), z.string()])\n    .optional()\n    .default('JWT'),\n})\n\nconst httpValueSchema = z.object({\n  username: z.string().default(''),\n  password: z.string().default(''),\n  token: z.string().default(''),\n})\n\nexport const securityHttpSchema = oasSecuritySchemeHttp.merge(extendedSecuritySchema).merge(httpValueSchema)\nexport type SecuritySchemaHttp = z.infer<typeof securityHttpSchema>\n\n// ---------------------------------------------------------------------------\n// OPENID CONNECT\nconst oasSecuritySchemeOpenId = commonProps.extend({\n  type: z.literal('openIdConnect'),\n  /**\n   * REQUIRED. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the\n   * form of a URL. The OpenID Connect standard requires the use of TLS.\n   */\n  openIdConnectUrl: z.string().optional().default(''),\n})\n\nexport const securityOpenIdSchema = oasSecuritySchemeOpenId.merge(extendedSecuritySchema)\nexport type SecuritySchemaOpenId = z.infer<typeof securityOpenIdSchema>\n\n// ---------------------------------------------------------------------------\n\n/**\n * REQUIRED. The authorization URL to be used for this flow. This MUST be in\n * the form of a URL. The OAuth2 standard requires the use of TLS.\n */\nconst authorizationUrl = z.string().default('')\n\n/**\n * REQUIRED. The token URL to be used for this flow. This MUST be in the\n * form of a URL. The OAuth2 standard requires the use of TLS.\n */\nconst tokenUrl = z.string().default('')\n\n/** Common properties used across all oauth2 flows */\nconst flowsCommon = z.object({\n  /**\n   * The URL to be used for obtaining refresh tokens. This MUST be in the form of a\n   * URL. The OAuth2 standard requires the use of TLS.\n   */\n  'refreshUrl': z.string().optional().default(''),\n  /**\n   * REQUIRED. The available scopes for the OAuth2 security scheme. A map\n   * between the scope name and a short description for it. The map MAY be empty.\n   */\n  'scopes': z.record(z.string(), z.string().optional().default('')).optional().default({}).catch({}),\n  'selectedScopes': z.array(z.string()).optional().default([]),\n  /** Extension to save the client Id associated with an oauth flow */\n  'x-scalar-client-id': z.string().optional().default(''),\n  /** The auth token */\n  'token': z.string().default(''),\n  /** Additional query parameters for the OAuth authorization request. Example: { prompt: 'consent', audience: 'scalar' }. */\n  'x-scalar-security-query': z.record(z.string(), z.string()).optional(),\n})\n\n/** Setup a default redirect uri if we can */\nconst defaultRedirectUri = typeof window !== 'undefined' ? window.location.origin + window.location.pathname : ''\n\n/** Options for the x-usePkce extension */\nexport const pkceOptions = ['SHA-256', 'plain', 'no'] as const\n\n/** Oauth2 security scheme */\nconst oasSecuritySchemeOauth2 = commonProps.extend({\n  type: z.literal('oauth2'),\n  /** The default scopes for the oauth flow */\n  'x-default-scopes': z.string().or(z.array(z.string())).optional(),\n  /** REQUIRED. An object containing configuration information for the flow types supported. */\n  flows: z\n    .object({\n      /** Configuration for the OAuth Implicit flow */\n      implicit: flowsCommon.extend({\n        'type': z.literal('implicit').default('implicit'),\n        authorizationUrl,\n        'x-scalar-redirect-uri': z.string().optional().default(defaultRedirectUri),\n      }),\n      /** Configuration for the OAuth Resource Owner Password flow */\n      password: flowsCommon.extend({\n        type: z.literal('password').default('password'),\n        tokenUrl,\n        clientSecret: z.string().default(''),\n        username: z.string().default(''),\n        password: z.string().default(''),\n      }),\n      /** Configuration for the OAuth Client Credentials flow. Previously called application in OpenAPI 2.0. */\n      clientCredentials: flowsCommon.extend({\n        type: z.literal('clientCredentials').default('clientCredentials'),\n        tokenUrl,\n        clientSecret: z.string().default(''),\n      }),\n      /** Configuration for the OAuth Authorization Code flow. Previously called accessCode in OpenAPI 2.0.*/\n      authorizationCode: flowsCommon.extend({\n        'type': z.literal('authorizationCode').default('authorizationCode'),\n        authorizationUrl,\n        'x-usePkce': z.enum(pkceOptions).optional().default('no'),\n        'x-scalar-redirect-uri': z.string().optional().default(defaultRedirectUri),\n        tokenUrl,\n        'clientSecret': z.string().default(''),\n      }),\n    })\n    .partial()\n    .default({\n      implicit: { type: 'implicit', authorizationUrl: 'http://localhost:8080' },\n    }),\n})\n\nexport const securityOauthSchema = oasSecuritySchemeOauth2.merge(extendedSecuritySchema)\n\nexport type SecuritySchemeOauth2 = z.infer<typeof securityOauthSchema>\nexport type SecuritySchemeOauth2Payload = z.input<typeof securityOauthSchema>\nexport type Oauth2Flow = NonNullable<\n  SecuritySchemeOauth2['flows']['authorizationCode' | 'clientCredentials' | 'implicit' | 'password']\n>\n/** Payload for the oauth 2 flows + extensions */\nexport type Oauth2FlowPayload = NonNullable<SecuritySchemeOauth2Payload['flows']>[\n  | 'authorizationCode'\n  | 'clientCredentials'\n  | 'implicit'\n  | 'password'] &\n  Record<`x-${string}`, string>\n\n// ---------------------------------------------------------------------------\n// Final Types\n\n/**\n * Security Requirement\n * Lists the required security schemes to execute this operation OR the whole collection/spec.\n * The name used for each property MUST correspond to a security scheme declared in the Security\n * Schemes under the Components Object.\n *\n * The key (name) here will be matched to the key of the securityScheme for linking\n *\n * @see https://spec.openapis.org/oas/latest.html#security-requirement-object\n */\nexport const oasSecurityRequirementSchema = z.record(z.string(), z.array(z.string()).optional().default([]))\n\n/** OAS Compliant security schemes */\nexport const oasSecuritySchemeSchema = z.union([\n  oasSecuritySchemeApiKey,\n  oasSecuritySchemeHttp,\n  oasSecuritySchemeOauth2,\n  oasSecuritySchemeOpenId,\n])\n\n/** Extended security schemes for workspace usage */\nexport const securitySchemeSchema = z\n  .discriminatedUnion('type', [securityApiKeySchema, securityHttpSchema, securityOpenIdSchema, securityOauthSchema])\n  .transform((data) => {\n    // Set selected scopes from x-default-scopes\n    if (data.type === 'oauth2' && data['x-default-scopes']?.length) {\n      const keys = Object.keys(data.flows) as Array<keyof typeof data.flows>\n      keys.forEach((key) => {\n        if (data.flows[key]?.selectedScopes && data['x-default-scopes']) {\n          data.flows[key].selectedScopes = [data['x-default-scopes']].flat()\n        }\n      })\n    }\n    return data\n  })\n\n/**\n * Security Scheme Object\n *\n * @see https://spec.openapis.org/oas/latest.html#security-scheme-object\n */\nexport type SecurityScheme = z.infer<typeof securitySchemeSchema>\nexport type SecuritySchemePayload = z.input<typeof securitySchemeSchema>\n", "/**\n * Removes undefined values from an object.\n *\n * Can be used as a transform function for any Zod schema.\n */\nexport const omitUndefinedValues = <T extends object>(data: T): T => {\n  // Handle arrays specially\n  if (Array.isArray(data)) {\n    return data.map((item) =>\n      typeof item === 'object' && item !== null ? omitUndefinedValues(item) : item,\n    ) as unknown as T\n  }\n\n  return Object.fromEntries(\n    Object.entries(data)\n      .filter(([_, value]) => value !== undefined)\n      .map(([key, value]) => {\n        if (typeof value === 'object' && value !== null) {\n          return [key, omitUndefinedValues(value)]\n        }\n        return [key, value]\n      }),\n  ) as T\n}\n", "import { z } from 'zod'\n\n/**\n * x-additionalPropertiesName\n *\n * Custom attribute name for additionalProperties in a schema.\n * This allows specifying a descriptive name for additional properties\n * that may be present in an object.\n */\nexport const XAdditionalPropertiesNameSchema = z.object({\n  'x-additionalPropertiesName': z.string().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XCodeSampleSchema = z.object({\n  lang: z.string().optional().catch(undefined),\n  label: z.string().optional().catch(undefined),\n  source: z.string(),\n})\n\nexport const XCodeSamplesSchema = z.object({\n  'x-codeSamples': XCodeSampleSchema.array().optional().catch(undefined),\n  'x-code-samples': XCodeSampleSchema.array().optional().catch(undefined),\n  'x-custom-examples': XCodeSampleSchema.array().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\n/**\n * x-enumDescriptions\n *\n * Maps enum values to their descriptions. Each key should correspond to\n * an enum value, and the value is the description for that enum value.\n *\n * Example:\n * x-enumDescriptions:\n *   missing_features: \"Missing features\"\n *   too_expensive: \"Too expensive\"\n *   unused: \"Unused\"\n *   other: \"Other\"\n */\nexport const XEnumDescriptionsSchema = z.object({\n  'x-enumDescriptions': z.record(z.string(), z.string()).catch({}),\n})\n", "import { z } from 'zod'\n\nexport const XInternalSchema = z.object({\n  'x-internal': z.boolean().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XScalarIconSchema = z.object({\n  'x-scalar-icon': z.string().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XScalarIgnoreSchema = z.object({\n  'x-scalar-ignore': z.boolean().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XScalarRedirectUriSchema = z.object({\n  'x-scalar-redirect-uri': z.string().optional().catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XScalarSdkInstallationSchema = z.object({\n  'x-scalar-sdk-installation': z\n    .object({\n      lang: z.string(),\n      source: z.string().optional().catch(undefined),\n      description: z.string().optional().catch(undefined),\n    })\n    .array()\n    .optional()\n    .catch(undefined),\n})\n", "import { z } from 'zod'\n\n/**\n * An OpenAPI extension set any query parameters for the OAuth authorize request\n *\n * @example\n * ```yaml\n * x-scalar-security-query: {\n *   prompt: 'consent',\n *   audience: 'scalar'\n * }\n * ```\n */\nexport const XScalarSecurityQuery = z.object({\n  'x-scalar-security-query': z.record(z.string(), z.string()).optional(),\n})\n", "import { z } from 'zod'\n\nexport const XScalarStabilityValues = {\n  Deprecated: 'deprecated',\n  Experimental: 'experimental',\n  Stable: 'stable',\n} as const\n\nexport type XScalarStabilityValues = (typeof XScalarStabilityValues)[keyof typeof XScalarStabilityValues]\n\n/**\n * An OpenAPI extension to indicate the stability of the operation\n *\n * @example\n * ```yaml\n * x-scalar-stability: deprecated\n * ```\n */\nexport const XScalarStabilitySchema = z.object({\n  'x-scalar-stability': z\n    .enum(Object.values(XScalarStabilityValues) as [string, ...string[]])\n    .optional()\n    .catch(undefined),\n})\n", "import { z } from 'zod'\n\nexport const XTagGroupSchema = z.object({\n  /**\n   * The group name.\n   */\n  name: z.string(),\n  /**\n   * List of tags to include in this group.\n   */\n  tags: z.coerce.string().array().catch([]),\n})\n\n/**\n * x-tagGroups\n *\n * List of tags to include in this group.\n */\nexport const XTagGroupsSchema = XTagGroupSchema.array().catch([])\n", "import { z } from 'zod'\n\n/** Options for the x-usePkce extension */\nexport const XUsePkceValues = ['SHA-256', 'plain', 'no'] as const\n\nexport const XusePkceSchema = z.object({\n  /**\n   * Use x-usePkce to enable Proof Key for Code Exchange (PKCE) for the Oauth2 authorization code flow.\n   */\n  'x-usePkce': z.enum(XUsePkceValues).optional().default('no'),\n})\n", "import { z } from 'zod'\n\n/** The code to execute */\nexport const PostResponseSchema = z.string()\n\n/**\n * Post response scripts allow to execute arbitrary code after a response is received\n *\n * This is useful for:\n * - Extracting data from the response, or\n * - Testing the response\n *\n * @example\n * ```yaml\n * x-post-response: |\n *   pm.test(\"Status code is 200\", () => {\n *     pm.response.to.have.status(200)\n *   })\n * ```\n */\nexport const XPostResponseSchema = z.object({\n  'x-post-response': PostResponseSchema.optional(),\n})\n", "import { omitUndefinedValues } from '@scalar/helpers/object/omit-undefined-values'\nimport { XScalarSdkInstallationSchema } from '@scalar/openapi-types/schemas/extensions'\nimport { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { z } from 'zod'\n\n/**\n * License Object\n *\n * License information for the exposed API.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#license-object\n */\nexport const oasLicenseSchema = z\n  .object({\n    /** REQUIRED. The license name used for the API. */\n    name: z.string().optional().nullable().catch(null),\n    /** An SPDX license expression for the API. The identifier field is mutually exclusive of the url field. */\n    identifier: z.string().optional().catch(undefined),\n    /**\n     * A URI for the license used for the API. This MUST be in the form of a URI. The url field is mutually exclusive of the identifier field.\n     */\n    url: z.string().url().optional().catch(undefined),\n  })\n  .transform(omitUndefinedValues)\n\n/**\n * Contact Object\n *\n * Contact information for the exposed API.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#contact-object\n */\nexport const oasContactSchema = z\n  .object({\n    /** The identifying name of the contact person/organization. */\n    name: z.string().optional(),\n    /** The URL pointing to the contact information. This MUST be in the form of a URL. */\n    url: z.string().url().optional().catch(undefined),\n    /** The email address of the contact person/organization. This MUST be in the form of an email address. */\n    email: z.string().optional().catch(undefined),\n  })\n  .transform(omitUndefinedValues)\n\n/**\n * Info Object\n *\n * The object provides metadata about the API. The metadata MAY be used by the clients if needed,\n * and MAY be presented in editing or documentation generation tools for convenience.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#info-object\n */\nexport const oasInfoSchema = z\n  .object({\n    /** REQUIRED. The title of the API. */\n    title: z.string().catch('API'),\n    /** A short summary of the API. */\n    summary: z.string().optional().catch(undefined),\n    /** A description of the API. CommonMark syntax MAY be used for rich text representation. */\n    description: z.string().optional().catch(undefined),\n    /** A URL to the Terms of Service for the API. This MUST be in the form of a URL. */\n    termsOfService: z.string().url().optional().catch(undefined),\n    /** The contact information for the exposed API. */\n    contact: oasContactSchema.optional().catch(undefined),\n    /** The license information for the exposed API. */\n    license: oasLicenseSchema.optional().catch(undefined),\n    /**\n     * REQUIRED. The version of the OpenAPI Document (which is distinct from the OpenAPI Specification version or the\n     * version of the API being described or the version of the OpenAPI Description).\n     */\n    version: z.string().catch('1.0'),\n  })\n  .merge(XScalarSdkInstallationSchema)\n  .transform(omitUndefinedValues)\n\n/**\n * External Documentation Object\n *\n * Allows referencing an external resource for extended documentation.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#external-documentation-object\n */\nexport const oasExternalDocumentationSchema = z\n  .object({\n    /** A description of the target documentation. CommonMark syntax MAY be used for rich text representation. */\n    description: z.string().optional().catch(undefined),\n    /** REQUIRED. The URL for the target documentation. This MUST be in the form of a URL. */\n    url: z.string(),\n  })\n  .transform(omitUndefinedValues)\n\nexport type ExternalDocumentation = z.infer<typeof oasExternalDocumentationSchema>\n\nexport const xScalarNestedSchema = z\n  .object({\n    tagName: z.string(),\n  })\n  .array()\n\n/**\n * Tag Object\n *\n * Adds metadata to a single tag that is used by the Operation Object. It is not mandatory to have a Tag Object per tag\n * defined in the Operation Object instances.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#tag-object\n */\nexport const oasTagSchema = z.object({\n  // TODO: Remove\n  /**\n   * @deprecated Needs to be remove as it is not a spec property\n   */\n  'type': z.literal('tag').optional().default('tag'),\n  /** REQUIRED. The name of the tag. */\n  'name': z.string(),\n  /** A description for the tag. CommonMark syntax MAY be used for rich text representation. */\n  'description': z.string().optional().catch(undefined),\n  /** Additional external documentation for this tag. */\n  'externalDocs': oasExternalDocumentationSchema.optional(),\n  'x-scalar-children': xScalarNestedSchema.default([]).optional(),\n  /** Hide collections */\n  'x-internal': z.boolean().optional(),\n  'x-scalar-ignore': z.boolean().optional(),\n})\n\nexport const tagSchema = oasTagSchema.extend({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['TAG']>(),\n  children: z\n    .union([z.string().brand<ENTITY_BRANDS['OPERATION']>(), z.string().brand<ENTITY_BRANDS['TAG']>()])\n    .array()\n    .default([]),\n})\n\nexport type Tag = z.infer<typeof tagSchema>\nexport type TagPayload = z.input<typeof tagSchema>\n", "import { selectedSecuritySchemeUidSchema } from '@/entities/shared/utility'\nimport { xScalarEnvironmentsSchema } from '@/entities/spec/x-scalar-environments'\nimport { xScalarSecretsSchema } from '@/entities/spec/x-scalar-secrets'\nimport { oasSecurityRequirementSchema } from '@scalar/types/entities'\nimport { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { z } from 'zod'\n\nimport { oasExternalDocumentationSchema, oasInfoSchema } from './spec-objects'\n\nexport const oasCollectionSchema = z.object({\n  /**\n   * @deprecated\n   *\n   * Needs to be remove as it is not a spec property\n   */\n  'type': z.literal('collection').optional().default('collection'),\n  'openapi': z\n    .union([z.string(), z.literal('3.0.0'), z.literal('3.1.0'), z.literal('4.0.0')])\n    .optional()\n    .default('3.1.0'),\n  'jsonSchemaDialect': z.string().optional(),\n  'info': oasInfoSchema.catch({\n    title: 'API',\n    version: '1.0',\n  }),\n  /**\n   * A declaration of which security mechanisms can be used across the API. The list of\n   * values includes alternative security requirement objects that can be used. Only\n   * one of the security requirement objects need to be satisfied to authorize a request.\n   * Individual operations can override this definition. To make security optional, an empty\n   * security requirement ({}) can be included in the array.\n   */\n  'security': z.array(oasSecurityRequirementSchema).optional().default([]),\n  'externalDocs': oasExternalDocumentationSchema.optional().catch(undefined),\n  /** TODO: Type these */\n  'components': z.record(z.string(), z.unknown()).optional(),\n  /** TODO: Type these */\n  'webhooks': z.record(z.string(), z.unknown()).optional(),\n  /** A custom icon representing the collection */\n  'x-scalar-icon': z.string().optional().default('interface-content-folder'),\n  'x-scalar-active-environment': z.string().optional(),\n  'x-scalar-environments': xScalarEnvironmentsSchema.optional(),\n  'x-scalar-secrets': xScalarSecretsSchema.optional(),\n  // These properties will be stripped out and mapped back as id lists\n  // servers\n  // paths/**\n  // servers\n  // tags\n  // security\n})\n\nexport const extendedCollectionSchema = z.object({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['COLLECTION']>(),\n  /** A list of security schemes UIDs associated with the collection */\n  securitySchemes: z.string().array().default([]),\n  /** List of currently selected security scheme UIDs, these can be overridden per request */\n  selectedSecuritySchemeUids: selectedSecuritySchemeUidSchema,\n  /** The currently selected server */\n  selectedServerUid: z.string().brand<ENTITY_BRANDS['SERVER']>().optional(),\n  /** UIDs which refer to servers on the workspace base */\n  servers: z.string().brand<ENTITY_BRANDS['SERVER']>().array().default([]),\n  /** Request UIDs associated with a collection */\n  requests: z.string().brand<ENTITY_BRANDS['OPERATION']>().array().default([]),\n  /** Tag UIDs associated with the collection */\n  tags: z.string().brand<ENTITY_BRANDS['TAG']>().array().default([]),\n  /** List of requests without tags and top level tag \"folders\" */\n  children: z\n    .union([z.string().brand<ENTITY_BRANDS['OPERATION']>(), z.string().brand<ENTITY_BRANDS['TAG']>()])\n    .array()\n    .default([]),\n  /**\n   * A link to where this document is stored\n   *\n   * - Used for watch mode\n   * - Possibly useful for Git sync down the line\n   */\n  documentUrl: z.string().optional(),\n  /**\n   * Enables polling of OpenAPI document urls\n   *\n   * @remarks Only effective when `documentUrl` is set\n   */\n  watchMode: z.boolean().optional().default(false),\n  /** Keeps track of which integration is associated with the specific collection */\n  integration: z.string().nullable().optional(),\n  /**\n   * Selected authentication will be set at the collection level instead of the request level\n   *\n   * @default false\n   */\n  useCollectionSecurity: z.boolean().optional().default(false),\n  /**\n   * Status of the watcher from above\n   *\n   * @defaults to idle for all collections, doesn't mean that it can watch for changes\n   */\n  watchModeStatus: z.enum(['IDLE', 'WATCHING', 'ERROR']).optional().default('IDLE'),\n})\n\nexport const collectionSchema = oasCollectionSchema.merge(extendedCollectionSchema)\nexport type Collection = z.infer<typeof collectionSchema>\nexport type CollectionPayload = z.input<typeof collectionSchema>\n", "import type { OpenAPI } from '@scalar/openapi-types'\nimport { type ZodSchema, z } from 'zod'\nimport type { OpenAPIV3_1 } from '@scalar/openapi-types'\nimport type { RequestExampleParameter } from './request-examples'\n\nexport const parameterTypeSchema = z.enum(['path', 'query', 'header', 'cookie'])\nexport type ParamType = z.infer<typeof parameterTypeSchema>\n\nexport const parameterStyleSchema = z.enum([\n  'matrix',\n  'simple',\n  'form',\n  'label',\n  'spaceDelimited',\n  'pipeDelimited',\n  'deepObject',\n])\nexport type ParameterStyle = z.infer<typeof parameterStyleSchema>\nexport type ParameterContent = Record<\n  string,\n  {\n    schema?: OpenAPIV3_1.Document\n    examples?: Record<string, RequestExampleParameter>\n    example?: RequestExampleParameter\n  }\n>\nexport const parameterExampleSchema = z.unknown()\n\n/**\n * OpenAPI compliant parameters object\n */\nexport const oasParameterSchema = z.object({\n  in: parameterTypeSchema,\n  name: z.string(),\n  description: z.string().optional(),\n  /** Defaulted to false */\n  required: z.boolean().optional().default(false),\n  /** Defaulted to false */\n  deprecated: z.boolean().optional().default(false),\n  schema: z.unknown().optional(),\n  content: z.unknown().optional(),\n  /** Defaulted according to @url https://spec.openapis.org/oas/v3.1.0#parameter-object */\n  style: parameterStyleSchema.optional(),\n  explode: z.boolean().optional(),\n  example: z.unknown().optional(),\n  examples: z\n    .union([\n      z.record(\n        z.string(),\n        z.object({\n          value: z.unknown().optional(),\n          summary: z.string().optional(),\n          externalValue: z.string().optional(),\n        }),\n      ),\n      z.array(z.unknown()),\n    ])\n    .optional(),\n}) satisfies ZodSchema<OpenAPI.Parameter>\n\nexport type RequestParameter = z.infer<typeof oasParameterSchema>\nexport type RequestParameterPayload = z.input<typeof oasParameterSchema>\n", "import { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { z } from 'zod'\n\n/**\n * Server Variable Object\n *\n * An object representing a Server Variable for server URL template substitution.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#server-variable-object\n */\nexport const oasServerVariableSchema = z.object({\n  /**\n   * An enumeration of string values to be used if the substitution options are from a limited set. The array MUST NOT be empty.\n   */\n  enum: z.array(z.string()).optional(),\n  /**\n   * REQUIRED. The default value to use for substitution, which SHALL be sent if an alternate value is not supplied.\n   * Note this behavior is different than the Schema Object's treatment of default values, because in those cases\n   * parameter values are optional. If the enum is defined, the value MUST exist in the enum's values.\n   */\n  default: z.string().optional(),\n  /**\n   * An optional description for the server variable. CommonMark syntax MAY be used for rich text representation.\n   */\n  description: z.string().optional(),\n})\n\n/** Extended schema for server variables */\nconst extendedServerVariableSchema = oasServerVariableSchema\n  .extend({\n    /** The value of the variable */\n    value: z.string().optional(),\n  })\n  .refine((data) => {\n    // Set default to the first enum value if invalid\n    if (Array.isArray(data.enum) && !data.enum.includes(data.default ?? '') && data.enum.length > 0) {\n      data.default = data.enum[0]\n    }\n\n    if (Array.isArray(data.enum) && data.enum.length === 0) {\n      delete data.enum\n    }\n\n    // Always return true since we\u2019ve modified the data to be valid\n    return true\n  })\n\n/**\n * Server Object\n *\n * An object representing a Server.\n *\n * @see https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#server-object\n */\nexport const oasServerSchema = z.object({\n  /**\n   * REQUIRED. A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that\n   * the host location is relative to the location where the OpenAPI document is being served. Variable substitutions\n   * will be made when a variable is named in {brackets}.\n   */\n  url: z.string(),\n  /**\n   * An optional string describing the host designated by the URL. CommonMark syntax MAY be used for rich text\n   * representation.\n   */\n  description: z.string().optional(),\n  /** A map between a variable name and its value. The value is used for substitution in the server's URL template. */\n  variables: z.record(z.string(), extendedServerVariableSchema).optional(),\n})\n\nexport const serverSchema = oasServerSchema.extend({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['SERVER']>(),\n})\n\nexport type Server = z.infer<typeof serverSchema>\nexport type ServerPayload = z.input<typeof serverSchema>\n", "import { z } from 'zod'\n\nconst SectionViewSchema = z.object({\n  title: z.string().optional(),\n  // Since this is meant to be a Vue component, we'll use unknown\n  component: z.unknown(),\n  props: z.record(z.any()).optional(),\n})\n\nconst ViewsSchema = z.object({\n  'request.section': z.array(SectionViewSchema),\n  'response.section': z.array(SectionViewSchema),\n})\n\nconst HooksSchema = z.object({\n  onBeforeRequest: z.function().returns(z.union([z.void(), z.promise(z.void())])),\n  onResponseReceived: z\n    .function()\n    .args(\n      z.object({\n        response: z.instanceof(Response),\n        // Ideally, we'd have the Operation type here, but we don't.\n        operation: z.record(z.any()),\n      }),\n    )\n    .returns(z.union([z.void(), z.promise(z.void())])),\n})\n\nexport const ApiClientPluginSchema = z.function().returns(\n  z.object({\n    name: z.string(),\n    views: ViewsSchema,\n    hooks: HooksSchema,\n  }),\n)\n\nexport type ApiClientPlugin = z.infer<typeof ApiClientPluginSchema>\n", "// TODO: Oh, do we really want to make this a dependency?\n// import type { Component } from 'vue'\n\nimport { z } from 'zod'\n\nexport const OpenApiExtensionSchema = z.object({\n  /**\n   * Name of specification extension property. Has to start with `x-`.\n   *\n   * @example\n   * ```yaml\n   * x-custom-extension: foobar\n   * ```\n   */\n  name: z.string().regex(/^x-/),\n  /**\n   * Vue component to render the specification extension\n   */\n  component: z.unknown(),\n  /**\n   * Custom renderer to render the specification extension\n   */\n  renderer: z.unknown().optional(),\n})\n\nexport const ApiReferencePluginSchema = z.function().returns(\n  z.object({\n    name: z.string(),\n    extensions: z.array(OpenApiExtensionSchema),\n  }),\n)\n\n// Infer the types from the schemas\nexport type SpecificationExtension = z.infer<typeof OpenApiExtensionSchema>\nexport type ApiReferencePlugin = z.infer<typeof ApiReferencePluginSchema>\n", "import { z } from 'zod'\n\nimport { ApiClientPluginSchema } from '../api-client'\nimport type { TargetId } from '../snippetz'\nimport { ApiReferencePluginSchema } from './api-reference-plugin'\nimport type { AuthenticationConfiguration } from './authentication-configuration'\n\n/** Available theme presets for the API reference */\nconst themeIdEnum = z.enum([\n  'alternate',\n  'default',\n  'moon',\n  'purple',\n  'solarized',\n  'bluePlanet',\n  'deepSpace',\n  'saturn',\n  'kepler',\n  'elysiajs',\n  'fastify',\n  'mars',\n  'laserwave',\n  'none',\n])\n\n/** Valid keys that can be used with CTRL/CMD to open the search modal */\nconst searchHotKeyEnum = z.enum([\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n])\n\n/** Supported integration types */\nconst integrationEnum = z\n  .enum([\n    'adonisjs',\n    'docusaurus',\n    'dotnet',\n    'elysiajs',\n    'express',\n    'fastapi',\n    'fastify',\n    'go',\n    'hono',\n    'html',\n    'laravel',\n    'litestar',\n    'nestjs',\n    'nextjs',\n    'nitro',\n    'nuxt',\n    'platformatic',\n    'react',\n    'rust',\n    'svelte',\n    'vue',\n  ])\n  .nullable()\n\n/** Configuration for the OpenAPI/Swagger specification */\nexport const specConfigurationSchema = z.object({\n  /**\n   * URL to an OpenAPI/Swagger document\n   *\n   * @deprecated Please move `url` to the top level and remove the `spec` prefix.\n   *\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     url: 'https://example.com/openapi.json',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   url: 'https://example.com/openapi.json',\n   * }\n   * ```\n   **/\n  url: z.string().optional(),\n  /**\n   * Directly embed the OpenAPI document.\n   * Can be a string, object, function returning an object, or null.\n   *\n   * @remarks It's recommended to pass a URL instead of content.\n   *\n   * @deprecated Please move `content` to the top level and remove the `spec` prefix.\n   *\n   * @example\n   * ```ts\n   * const oldConfiguration = {\n   *   spec: {\n   *     content: '\u2026',\n   *   },\n   * }\n   *\n   * const newConfiguration = {\n   *   content: '\u2026',\n   * }\n   * ```\n   **/\n  content: z.union([z.string(), z.record(z.any()), z.function().returns(z.record(z.any())), z.null()]).optional(),\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   *\n   * @deprecated Please move `title` to the top level and remove the `spec` prefix.\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   *\n   * @deprecated Please move `slug` to the top level and remove the `spec` prefix.\n   */\n  slug: z.string().optional(),\n})\nexport type SpecConfiguration = z.infer<typeof specConfigurationSchema>\n\n/** Configuration for path-based routing */\nconst pathRoutingSchema = z.object({\n  /** Base path for the API reference */\n  basePath: z.string(),\n})\n\n/** Configuration for the Api Client */\nexport const apiClientConfigurationSchema = z.object({\n  /**\n   * URL to an OpenAPI/Swagger document\n   **/\n  url: z.string().optional(),\n  /**\n   * Directly embed the OpenAPI document.\n   * Can be a string, object, function returning an object, or null.\n   *\n   * @remarks It's recommended to pass a URL instead of content.\n   **/\n  content: z.union([z.string(), z.record(z.any()), z.function().returns(z.record(z.any())), z.null()]).optional(),\n  /**\n   * The title of the OpenAPI document.\n   *\n   * @example 'Scalar Galaxy'\n   */\n  title: z.string().optional(),\n  /**\n   * The slug of the OpenAPI document used in the URL.\n   *\n   * If none is passed, the title will be used.\n   *\n   * If no title is used, it'll just use the index.\n   *\n   * @example 'scalar-galaxy'\n   */\n  slug: z.string().optional(),\n  /**\n   * The OpenAPI/Swagger document to render\n   *\n   * @deprecated Use `url` and `content` on the top level instead.\n   **/\n  spec: specConfigurationSchema.optional(),\n  /** Prefill authentication */\n  authentication: z.any().optional(), // Temp until we bring in the new auth\n  /** Base URL for the API server */\n  baseServerURL: z.string().optional(),\n  /**\n   * Whether to hide the client button\n   * @default false\n   */\n  hideClientButton: z.boolean().optional().default(false).catch(false),\n  /** URL to a request proxy for the API client */\n  proxyUrl: z.string().optional(),\n  /** Key used with CTRL/CMD to open the search modal (defaults to 'k' e.g. CMD+k) */\n  searchHotKey: searchHotKeyEnum.optional(),\n  /** List of OpenAPI server objects */\n  servers: z.array(z.any()).optional(), // Using any for OpenAPIV3_1.ServerObject\n  /**\n   * Whether to show the sidebar\n   * @default true\n   */\n  showSidebar: z.boolean().optional().default(true).catch(true),\n  /** A string to use one of the color presets */\n  theme: themeIdEnum.optional().default('default').catch('default'),\n  /** Integration type identifier */\n  _integration: integrationEnum.optional(),\n  /** onRequestSent is fired when a request is sent */\n  onRequestSent: z.function().args(z.string()).returns(z.void()).optional(),\n  /** Whether to persist auth to local storage */\n  persistAuth: z.boolean().optional().default(false).catch(false),\n  /** Plugins for the API client */\n  plugins: z.array(ApiClientPluginSchema).optional(),\n})\n\nexport type ApiClientConfiguration = z.infer<typeof apiClientConfigurationSchema>\n\n/** Configuration for the Api Client without the transform since it cannot be merged */\nconst _apiReferenceConfigurationSchema = apiClientConfigurationSchema.merge(\n  z.object({\n    /**\n     * The layout to use for the references\n     * @default 'modern'\n     */\n    layout: z.enum(['modern', 'classic']).optional().default('modern').catch('modern'),\n    /**\n     * URL to a request proxy for the API client\n     * @deprecated Use proxyUrl instead\n     */\n    proxy: z.string().optional(),\n    /**\n     * Plugins for the API reference\n     */\n    plugins: z.array(ApiReferencePluginSchema).optional(),\n    /**\n     * Allows the user to inject an editor for the spec\n     * @default false\n     */\n    isEditable: z.boolean().optional().default(false).catch(false),\n    /**\n     * Controls whether the references show a loading state in the intro\n     * @default false\n     */\n    isLoading: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show models in the sidebar, search, and content.\n     * @default false\n     */\n    hideModels: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show the \"Download OpenAPI Document\" button\n     * @default false\n     */\n    hideDownloadButton: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show the \"Test Request\" button\n     * @default false\n     */\n    hideTestRequestButton: z.boolean().optional().default(false).catch(false),\n    /**\n     * Whether to show the sidebar search bar\n     * @default false\n     */\n    hideSearch: z.boolean().optional().default(false).catch(false),\n    /** Whether dark mode is on or off initially (light mode) */\n    darkMode: z.boolean().optional(),\n    /** forceDarkModeState makes it always this state no matter what */\n    forceDarkModeState: z.enum(['dark', 'light']).optional(),\n    /**\n     * Whether to show the dark mode toggle\n     * @default false\n     */\n    hideDarkModeToggle: z.boolean().optional().default(false).catch(false),\n    /**\n     * If used, passed data will be added to the HTML header\n     * @see https://unhead.unjs.io/usage/composables/use-seo-meta\n     */\n    metaData: z.any().optional(), // Using any for UseSeoMetaInput since it's an external type\n    /**\n     * Path to a favicon image\n     * @default undefined\n     * @example '/favicon.svg'\n     */\n    favicon: z.string().optional(),\n    /**\n     * List of httpsnippet clients to hide from the clients menu\n     * By default hides Unirest, pass `[]` to show all clients\n     */\n    hiddenClients: z\n      .union([z.record(z.union([z.boolean(), z.array(z.string())])), z.array(z.string()), z.literal(true)])\n      .optional(),\n    /** Determine the HTTP client that's selected by default */\n    defaultHttpClient: z\n      .object({\n        targetKey: z.custom<TargetId>(),\n        clientKey: z.string(),\n      })\n      .optional(),\n    /** Custom CSS to be added to the page */\n    customCss: z.string().optional(),\n    /** onSpecUpdate is fired on spec/swagger content change */\n    onSpecUpdate: z.function().args(z.string()).returns(z.void()).optional(),\n    /** onServerChange is fired on selected server change */\n    onServerChange: z.function().args(z.string()).returns(z.void()).optional(),\n    /** onDocumentSelect is fired when the config is selected */\n    onDocumentSelect: z.function().returns(z.void().or(z.void().promise())).optional(),\n    /** Callback fired when the reference is fully loaded */\n    onLoaded: z.function().returns(z.void().or(z.void().promise())).optional(),\n    /**\n     * onShowMore is fired when the user clicks the \"Show more\" button on the references\n     * @param tagId - The ID of the tag that was clicked\n     */\n    onShowMore: z.function().args(z.string()).returns(z.void().or(z.void().promise())).optional(),\n    /**\n     * onSidebarClick is fired when the user clicks on a sidebar item\n     * @param href - The href of the sidebar item that was clicked\n     */\n    onSidebarClick: z.function().args(z.string()).returns(z.void().or(z.void().promise())).optional(),\n    /**\n     * Route using paths instead of hashes, your server MUST support this\n     * @example '/standalone-api-reference/:custom(.*)?'\n     * @experimental\n     * @default undefined\n     */\n    pathRouting: pathRoutingSchema.optional(),\n    /**\n     * Customize the heading portion of the hash\n     * @param heading - The heading object\n     * @returns A string ID used to generate the URL hash\n     * @default (heading) => `#description/${heading.slug}`\n     */\n    generateHeadingSlug: z\n      .function()\n      .args(\n        z.object({\n          slug: z.string().default('headingSlug'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the model portion of the hash\n     * @param model - The model object with a name property\n     * @returns A string ID used to generate the URL hash\n     * @default (model) => slug(model.name)\n     */\n    generateModelSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string().default('modelName'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the tag portion of the hash\n     * @param tag - The tag object\n     * @returns A string ID used to generate the URL hash\n     * @default (tag) => slug(tag.name)\n     */\n    generateTagSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string().default('tagName'),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the operation portion of the hash\n     * @param operation - The operation object\n     * @returns A string ID used to generate the URL hash\n     * @default (operation) => `${operation.method}${operation.path}`\n     */\n    generateOperationSlug: z\n      .function()\n      .args(\n        z.object({\n          path: z.string(),\n          operationId: z.string().optional(),\n          method: z.string(),\n          summary: z.string().optional(),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * Customize the webhook portion of the hash\n     * @param webhook - The webhook object\n     * @returns A string ID used to generate the URL hash\n     * @default (webhook) => slug(webhook.name)\n     */\n    generateWebhookSlug: z\n      .function()\n      .args(\n        z.object({\n          name: z.string(),\n          method: z.string().optional(),\n        }),\n      )\n      .returns(z.string())\n      .optional(),\n    /**\n     * To handle redirects, pass a function that will recieve:\n     * - The current path with hash if pathRouting is enabled\n     * - The current hash if hashRouting (default)\n     * And then passes that to history.replaceState\n     *\n     * @example hashRouting (default)\n     * ```ts\n     * redirect: (hash: string) => hash.replace('#v1/old-path', '#v2/new-path')\n     * ```\n     * @example pathRouting\n     * ```ts\n     * redirect: (pathWithHash: string) => {\n     *   if (pathWithHash.includes('#')) {\n     *     return pathWithHash.replace('/v1/tags/user#operation/get-user', '/v1/tags/user/operation/get-user')\n     *   }\n     *   return null\n     * }\n     * ```\n     */\n    redirect: z.function().args(z.string()).returns(z.string().nullable().optional()).optional(),\n    /**\n     * Whether to include default fonts\n     * @default true\n     */\n    withDefaultFonts: z.boolean().optional().default(true).catch(true),\n    /** Whether to expand all tags by default */\n    defaultOpenAllTags: z.boolean().optional(),\n    /**\n     * Function to sort tags\n     * @default 'alpha' for alphabetical sorting\n     */\n    tagsSorter: z.union([z.literal('alpha'), z.function().args(z.any(), z.any()).returns(z.number())]).optional(),\n    /**\n     * Function to sort operations\n     * @default 'alpha' for alphabetical sorting\n     */\n    operationsSorter: z\n      .union([z.literal('alpha'), z.literal('method'), z.function().args(z.any(), z.any()).returns(z.number())])\n      .optional(),\n  }),\n)\n\nconst OLD_PROXY_URL = 'https://api.scalar.com/request-proxy'\nconst NEW_PROXY_URL = 'https://proxy.scalar.com'\n\n/** Migrate the configuration through a transform */\nconst migrateConfiguration = <T extends z.infer<typeof _apiReferenceConfigurationSchema>>(_configuration: T): T => {\n  const configuration = { ..._configuration }\n\n  // Remove the spec prefix\n  if (configuration.spec?.url) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'spec.url' attribute. Remove the spec prefix and move the 'url' attribute to the top level.`,\n    )\n\n    configuration.url = configuration.spec.url\n    delete configuration.spec\n  }\n\n  if (configuration.spec?.content) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'spec.content' attribute. Remove the spec prefix and move the 'content' attribute to the top level.`,\n    )\n\n    configuration.content = configuration.spec.content\n    delete configuration.spec\n  }\n\n  // Migrate proxy URL\n  if (configuration.proxy) {\n    console.warn(\n      `[DEPRECATED] You're using the deprecated 'proxy' attribute, rename it to 'proxyUrl' or update the package.`,\n    )\n\n    if (!configuration.proxyUrl) {\n      configuration.proxyUrl = configuration.proxy\n    }\n\n    delete configuration.proxy\n  }\n\n  if (configuration.proxyUrl === OLD_PROXY_URL) {\n    console.warn(`[DEPRECATED] Warning: configuration.proxyUrl points to our old proxy (${OLD_PROXY_URL}).`)\n    console.warn(`[DEPRECATED] We are overwriting the value and use the new proxy URL (${NEW_PROXY_URL}) instead.`)\n    console.warn(\n      `[DEPRECATED] Action Required: You should manually update your configuration to use the new URL (${NEW_PROXY_URL}). Read more: https://github.com/scalar/scalar`,\n    )\n\n    configuration.proxyUrl = NEW_PROXY_URL\n  }\n\n  return configuration\n}\n\n/** Configuration for the Api Reference */\nexport const apiReferenceConfigurationSchema = _apiReferenceConfigurationSchema.transform(migrateConfiguration)\n\n/** Configuration after parsing, this is the main type */\nexport type ApiReferenceConfiguration = Omit<\n  z.infer<typeof _apiReferenceConfigurationSchema>,\n  // Remove deprecated attributes\n  'proxy' | 'spec' | 'authentication'\n> & {\n  authentication?: AuthenticationConfiguration\n}\n\n/** Api Config which includes the default config */\ntype ApiReferenceConfigurationWithDefault = ApiReferenceConfiguration & {\n  /** Whether to use this config as the default one */\n  default?: boolean\n}\n\n/** Configuration for a single config with sources */\nexport type ApiReferenceConfigurationWithSources = Omit<ApiReferenceConfigurationWithDefault, 'default'> & {\n  sources: (SpecConfiguration & { default?: boolean })[]\n}\n\n/** Configuration for multiple Api References */\nexport type AnyApiReferenceConfiguration =\n  | Partial<ApiReferenceConfiguration>\n  | Partial<ApiReferenceConfigurationWithSources>\n  | Partial<ApiReferenceConfigurationWithDefault>[]\n  | Partial<ApiReferenceConfigurationWithSources>[]\n\n/** Typeguard to check to narrow the configs to the one with sources */\nexport const isConfigurationWithSources = (\n  config: AnyApiReferenceConfiguration,\n): config is Partial<ApiReferenceConfigurationWithSources> =>\n  Boolean(!Array.isArray(config) && config && 'sources' in config && Array.isArray(config.sources))\n", "import type { ApiReferenceConfigurationWithSources } from './api-reference-configuration'\nimport { z } from 'zod'\n\n/**\n * Zod schema for HTML rendering configuration\n */\nexport const htmlRenderingConfigurationSchema = z.object({\n  /**\n   * The URL to the Scalar API Reference JS CDN.\n   *\n   * Use this to pin a specific version of the Scalar API Reference.\n   *\n   * @default https://cdn.jsdelivr.net/npm/@scalar/api-reference\n   *\n   * @example https://cdn.jsdelivr.net/npm/@scalar/api-reference@1.25.122\n   */\n  cdn: z.string().optional().default('https://cdn.jsdelivr.net/npm/@scalar/api-reference'),\n  /**\n   * The title of the page.\n   */\n  pageTitle: z.string().optional().default('Scalar API Reference'),\n})\n\n/**\n * The configuration for the static HTML rendering using the CDN.\n *\n * It\u2019s the ApiReferenceConfiguration, but extended with the `pageTitle` and `cdn` options.\n */\nexport type HtmlRenderingConfiguration = Partial<ApiReferenceConfigurationWithSources> &\n  z.infer<typeof htmlRenderingConfigurationSchema>\n", "import type { Server } from '@/entities/spec/server'\n\n/** Retrieve example values for server variables */\nexport const getServerVariableExamples = (server: Server) => {\n  const examples: Record<string, string[]> = {}\n  if (server.variables) {\n    for (const [key, variable] of Object.entries(server.variables)) {\n      examples[key] = (variable.enum?.filter((v): v is string => typeof v === 'string') as string[]) ?? [\n        variable.default,\n      ]\n    }\n  }\n  return examples\n}\n", "/** Get the keys of an object. NOTE: This assumes no additional properties at runtime */\nexport function keysOf<T extends object>(obj: T) {\n  return obj ? (Object.keys(obj).map((k) => String(k)) as (keyof T & string)[]) : []\n}\n\n/** Type guard for not null */\nexport function nonNullable<T>(val: T): val is NonNullable<T> {\n  return val !== null\n}\n", "/** Hard limit for rendering circular references */\nconst MAX_LEVELS_DEEP = 5\n/** Sets the max number of properties after the third level to prevent exponential horizontal growth */\nconst MAX_PROPERTIES = 10\n\nconst genericExampleValues: Record<string, string> = {\n  // 'date-time': '1970-01-01T00:00:00Z',\n  'date-time': new Date().toISOString(),\n  // 'date': '1970-01-01',\n  'date': new Date().toISOString().split('T')[0]!,\n  'email': 'hello@example.com',\n  'hostname': 'example.com',\n  // https://tools.ietf.org/html/rfc6531#section-3.3\n  'idn-email': 'jane.doe@example.com',\n  // https://tools.ietf.org/html/rfc5890#section-2.3.2.3\n  'idn-hostname': 'example.com',\n  'ipv4': '127.0.0.1',\n  'ipv6': '51d4:7fab:bfbf:b7d7:b2cb:d4b4:3dad:d998',\n  'iri-reference': '/entitiy/1',\n  // https://tools.ietf.org/html/rfc3987\n  'iri': 'https://example.com/entity/123',\n  'json-pointer': '/nested/objects',\n  'password': 'super-secret',\n  'regex': '/[a-z]/',\n  // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n  'relative-json-pointer': '1/nested/objects',\n  // full-time in https://tools.ietf.org/html/rfc3339#section-5.6\n  // 'time': '00:00:00Z',\n  'time': new Date().toISOString().split('T')[1]!.split('.')[0]!,\n  // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1\n  'uri-reference': '../folder',\n  'uri-template': 'https://example.com/{id}',\n  'uri': 'https://example.com',\n  'uuid': '123e4567-e89b-12d3-a456-426614174000',\n  'object-id': '6592008029c8c3e4dc76256c',\n}\n\n/**\n * We can use the `format` to generate some random values.\n */\nfunction guessFromFormat(schema: Record<string, any>, makeUpRandomData: boolean = false, fallback: string = '') {\n  if (schema.format === 'binary') {\n    return new File([''], 'filename')\n  }\n  return makeUpRandomData ? (genericExampleValues[schema.format] ?? fallback) : ''\n}\n\n/** Map of all the results */\nconst resultCache = new WeakMap<Record<string, any>, any>()\n\n/** Store result in the cache, and return the result */\nfunction cache(schema: Record<string, any>, result: unknown) {\n  // Avoid unnecessary WeakMap operations for primitive values\n  if (typeof result !== 'object' || result === null) {\n    return result\n  }\n\n  resultCache.set(schema, result)\n\n  return result\n}\n\n/**\n * This function takes an OpenAPI schema and generates an example from it\n */\nexport const getExampleFromSchema = (\n  schema: Record<string, any>,\n  options?: {\n    /**\n     * The fallback string for empty string values.\n     * @default ''\n     */\n    emptyString?: string\n    /**\n     * Whether to use the XML tag names as keys\n     * @default false\n     */\n    xml?: boolean\n    /**\n     * Whether to show read-only/write-only properties. Otherwise all properties are shown.\n     * @default undefined\n     */\n    mode?: 'read' | 'write'\n    /**\n     * Dynamic values to add to the example.\n     */\n    variables?: Record<string, any>\n    /**\n     * Whether to omit empty and optional properties.\n     * @default false\n     */\n    omitEmptyAndOptionalProperties?: boolean\n  },\n  level: number = 0,\n  parentSchema?: Record<string, any>,\n  name?: string,\n): any => {\n  // Check if the result is already cached\n  if (resultCache.has(schema)) {\n    return resultCache.get(schema)\n  }\n\n  // Check whether it\u2019s a circular reference\n  if (level === MAX_LEVELS_DEEP + 1) {\n    try {\n      // Fails if it contains a circular reference\n      JSON.stringify(schema)\n    } catch {\n      return '[Circular Reference]'\n    }\n  }\n\n  // Sometimes, we just want the structure and no values.\n  // But if `emptyString` is  set, we do want to see some values.\n  const makeUpRandomData = !!options?.emptyString\n\n  // If the property is deprecated anyway, we don\u2019t want to show it.\n  if (schema.deprecated) {\n    return undefined\n  }\n\n  // Check if the property is read-only/write-only\n  if ((options?.mode === 'write' && schema.readOnly) || (options?.mode === 'read' && schema.writeOnly)) {\n    return undefined\n  }\n\n  // Use given variables as values\n  if (schema['x-variable']) {\n    const value = options?.variables?.[schema['x-variable']]\n\n    // Return the value if it\u2019s defined\n    if (value !== undefined) {\n      // Type-casting\n      if (schema.type === 'number' || schema.type === 'integer') {\n        return Number.parseInt(value, 10)\n      }\n\n      return cache(schema, value)\n    }\n  }\n\n  // Use the first example, if there\u2019s an array\n  if (Array.isArray(schema.examples) && schema.examples.length > 0) {\n    return cache(schema, schema.examples[0])\n  }\n\n  // Use an example, if there\u2019s one\n  if (schema.example !== undefined) {\n    return cache(schema, schema.example)\n  }\n\n  // Use a default value, if there\u2019s one\n  if (schema.default !== undefined) {\n    return cache(schema, schema.default)\n  }\n\n  // enum: [ 'available', 'pending', 'sold' ]\n  if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n    return cache(schema, schema.enum[0])\n  }\n\n  // Check if the property is required\n  const isObjectOrArray =\n    schema.type === 'object' ||\n    schema.type === 'array' ||\n    !!schema.allOf?.at?.(0) ||\n    !!schema.anyOf?.at?.(0) ||\n    !!schema.oneOf?.at?.(0)\n  if (!isObjectOrArray && options?.omitEmptyAndOptionalProperties === true) {\n    const isRequired =\n      schema.required === true ||\n      parentSchema?.required === true ||\n      parentSchema?.required?.includes(name ?? schema.name)\n\n    if (!isRequired) {\n      return undefined\n    }\n  }\n\n  // Object\n  if (schema.type === 'object' || schema.properties !== undefined) {\n    const response: Record<string, any> = {}\n    let propertyCount = 0\n\n    // Regular properties\n    if (schema.properties !== undefined) {\n      for (const propertyName in schema.properties) {\n        if (Object.prototype.hasOwnProperty.call(schema.properties, propertyName)) {\n          // Only apply property limit for nested levels (level > 0)\n          if (level > 3 && propertyCount >= MAX_PROPERTIES) {\n            response['...'] = '[Additional Properties Truncated]'\n            break\n          }\n\n          const property = schema.properties[propertyName]\n          const propertyXmlTagName = options?.xml ? property.xml?.name : undefined\n\n          const value = getExampleFromSchema(property, options, level + 1, schema, propertyName)\n\n          if (typeof value !== 'undefined') {\n            response[propertyXmlTagName ?? propertyName] = value\n            propertyCount++\n          }\n        }\n      }\n    }\n\n    // Pattern properties (regex)\n    if (schema.patternProperties !== undefined) {\n      for (const pattern in schema.patternProperties) {\n        if (Object.prototype.hasOwnProperty.call(schema.patternProperties, pattern)) {\n          const property = schema.patternProperties[pattern]\n\n          // Use the regex pattern as an example key\n          const exampleKey = pattern\n\n          response[exampleKey] = getExampleFromSchema(property, options, level + 1, schema, exampleKey)\n        }\n      }\n    }\n\n    // Additional properties\n    if (schema.additionalProperties !== undefined) {\n      const anyTypeIsValid =\n        // true\n        schema.additionalProperties === true ||\n        // or an empty object {}\n        (typeof schema.additionalProperties === 'object' && !Object.keys(schema.additionalProperties).length)\n\n      if (anyTypeIsValid) {\n        response['ANY_ADDITIONAL_PROPERTY'] = 'anything'\n      } else if (schema.additionalProperties !== false) {\n        response['ANY_ADDITIONAL_PROPERTY'] = getExampleFromSchema(schema.additionalProperties, options, level + 1)\n      }\n    }\n\n    if (schema.anyOf !== undefined) {\n      Object.assign(response, getExampleFromSchema(schema.anyOf[0], options, level + 1))\n    } else if (schema.oneOf !== undefined) {\n      Object.assign(response, getExampleFromSchema(schema.oneOf[0], options, level + 1))\n    } else if (schema.allOf !== undefined) {\n      Object.assign(\n        response,\n        ...schema.allOf\n          .map((item: Record<string, any>) => getExampleFromSchema(item, options, level + 1, schema))\n          .filter((item: any) => item !== undefined),\n      )\n    }\n\n    return cache(schema, response)\n  }\n\n  // Array\n  if (schema.type === 'array' || schema.items !== undefined) {\n    const itemsXmlTagName = schema?.items?.xml?.name\n    const wrapItems = !!(options?.xml && schema.xml?.wrapped && itemsXmlTagName)\n\n    if (schema.example !== undefined) {\n      return cache(schema, wrapItems ? { [itemsXmlTagName]: schema.example } : schema.example)\n    }\n\n    // Check whether the array has a anyOf, oneOf, or allOf rule\n    if (schema.items) {\n      // First handle allOf separately since it needs special handling\n      if (schema.items.allOf) {\n        // If the first item is an object type, merge all schemas\n        if (schema.items.allOf[0].type === 'object') {\n          const mergedExample = getExampleFromSchema(\n            { type: 'object', allOf: schema.items.allOf },\n            options,\n            level + 1,\n            schema,\n          )\n\n          return cache(schema, wrapItems ? [{ [itemsXmlTagName]: mergedExample }] : [mergedExample])\n        }\n        // For non-objects (like strings), collect all examples\n        const examples = schema.items.allOf\n          .map((item: Record<string, any>) => getExampleFromSchema(item, options, level + 1, schema))\n          .filter((item: any) => item !== undefined)\n\n        return cache(schema, wrapItems ? examples.map((example: any) => ({ [itemsXmlTagName]: example })) : examples)\n      }\n\n      // Handle other rules (anyOf, oneOf)\n      const rules = ['anyOf', 'oneOf']\n      for (const rule of rules) {\n        if (!schema.items[rule]) {\n          continue\n        }\n\n        const schemas = schema.items[rule].slice(0, 1)\n        const exampleFromRule = schemas\n          .map((item: Record<string, any>) => getExampleFromSchema(item, options, level + 1, schema))\n          .filter((item: any) => item !== undefined)\n\n        return cache(schema, wrapItems ? [{ [itemsXmlTagName]: exampleFromRule }] : exampleFromRule)\n      }\n    }\n\n    // if it has type: 'object', or properties, it\u2019s an object\n    const isObject = schema.items?.type === 'object' || schema.items?.properties !== undefined\n    // if it has type: 'array', or items, it\u2019s an array\n    const isArray = schema.items?.type === 'array' || schema.items?.items !== undefined\n\n    if (schema.items?.type || isObject || isArray) {\n      const exampleFromSchema = getExampleFromSchema(schema.items, options, level + 1)\n\n      return wrapItems ? [{ [itemsXmlTagName]: exampleFromSchema }] : [exampleFromSchema]\n    }\n\n    return []\n  }\n\n  const exampleValues: Record<any, any> = {\n    string: guessFromFormat(schema, makeUpRandomData, options?.emptyString),\n    boolean: true,\n    integer: schema.min ?? 1,\n    number: schema.min ?? 1,\n    array: [],\n  }\n\n  if (schema.type !== undefined && exampleValues[schema.type] !== undefined) {\n    return cache(schema, exampleValues[schema.type])\n  }\n\n  const discriminateSchema = schema.oneOf || schema.anyOf\n  // Check if property has the `oneOf` | `anyOf` key\n  if (Array.isArray(discriminateSchema) && discriminateSchema.length > 0) {\n    // Get the first item from the `oneOf` | `anyOf` array\n    const firstOneOfItem = discriminateSchema[0]\n\n    // Return an example for the first item\n    return getExampleFromSchema(firstOneOfItem, options, level + 1)\n  }\n\n  // Check if schema has the `allOf` key\n  if (Array.isArray(schema.allOf)) {\n    let example: any = null\n\n    // Loop through all `allOf` schemas\n    schema.allOf.forEach((allOfItem: Record<string, any>) => {\n      // Return an example from the schema\n      const newExample = getExampleFromSchema(allOfItem, options, level + 1)\n\n      // Merge or overwrite the example\n      example =\n        typeof newExample === 'object' && typeof example === 'object'\n          ? {\n              ...(example ?? {}),\n              ...newExample,\n            }\n          : Array.isArray(newExample) && Array.isArray(example)\n            ? [...(example ?? {}), ...newExample]\n            : newExample\n    })\n\n    return cache(schema, example)\n  }\n\n  // Check if schema is a union type\n  if (Array.isArray(schema.type)) {\n    // Return null if the type is nullable\n    if (schema.type.includes('null')) {\n      return null\n    }\n    // Return an example for the first type in the union\n    const exampleValue = exampleValues[schema.type[0]]\n    if (exampleValue !== undefined) {\n      return cache(schema, exampleValue)\n    }\n  }\n\n  // Warn if the type is unknown \u2026\n  // console.warn(`[getExampleFromSchema] Unknown property type \"${schema.type}\".`)\n\n  // \u2026 and just return null for now.\n  return null\n}\n", "import type { BaseParameter } from '@scalar/types/legacy'\n\nimport type { OpenAPIV3_1 } from '@scalar/openapi-types'\n\nimport { getExampleFromSchema } from './get-example-from-schema'\n\n/**\n * Get the query parameters from an operation.\n *\n * Example: [ { name: 'foobar', value: '' } ]\n *\n * - OpenAPI 3.x: Possible values are \u201Cquery\u201D, \u201Cheader\u201D, \u201Cpath\u201D or \u201Ccookie\u201D.\n * - Swagger 2.0: Possible values are \"query\", \"header\", \"path\", \"formData\" or \"body\".\n */\nexport function getParametersFromOperation(\n  operationParameters: OpenAPIV3_1.ParameterObject[] = [],\n  pathParameters: OpenAPIV3_1.ParameterObject[] = [],\n  where: 'query' | 'header' | 'path' | 'cookie' | 'formData' | 'body',\n  requiredOnly: boolean = true,\n): BaseParameter[] {\n  const parameters = [...(pathParameters || []), ...(operationParameters || [])]\n\n  const params = parameters\n    // query, path, header, cookie?\n    .filter((parameter) => parameter.in === where)\n    // don\u2019t add optional parameters\n    .filter((parameter) => (requiredOnly && parameter.required) || !requiredOnly)\n    // transform them\n    .map((parameter) => ({\n      name: parameter.name ?? 'Unknown Parameter',\n      description: parameter.description ?? null,\n      value: parameter.example\n        ? parameter.example\n        : parameter.schema\n          ? getExampleFromSchema(parameter.schema, { mode: 'write' })\n          : '',\n      required: parameter.required ?? false,\n      enabled: parameter.required ?? false,\n    }))\n\n  return params.sort((a, b) => {\n    // Move a up if a is required and b is not\n    if (a.required && !b.required) {\n      return -1\n    }\n    // Move b up if b is required and a is not\n    if (!a.required && b.required) {\n      return 1\n    }\n    // Keep original order if both have the same required status\n    return 0\n  })\n}\n", "import { json2xml } from '@scalar/helpers/file/json2xml'\nimport type { ContentType, TransformedOperation } from '@scalar/types/legacy'\n\nimport { normalizeMimeTypeObject } from '@/helpers/normalize-mime-type-object'\nimport { prettyPrintJson } from '@/helpers/pretty-print-json'\nimport { getExampleFromSchema } from './get-example-from-schema'\nimport { getParametersFromOperation } from './get-parameters-from-operation'\n\ntype AnyObject = Record<string, any>\n\n/**\n * Transform the object into a nested array of objects\n * that represent the key-value pairs of the object.\n */\nfunction getParamsFromObject(\n  obj: AnyObject,\n  nested = false,\n  field?: string,\n): {\n  name: string\n  value: any\n}[] {\n  return Object.entries(obj).flatMap(([key, value]) => {\n    const name = field ?? key\n\n    if (Array.isArray(value) && !nested) {\n      return getParamsFromObject(value, true, key)\n    }\n\n    if (typeof value === 'object' && !(value instanceof File) && value !== null) {\n      // Nested object inside formData field: no way to represent it, so just serialize to JSON string\n      value = JSON.stringify(value)\n    }\n\n    return [{ name, value }]\n  })\n}\n// Define preferred standard mime types (order indicates preference)\nconst standardMimeTypes: ContentType[] = [\n  'application/json',\n  'application/octet-stream',\n  'application/x-www-form-urlencoded',\n  'application/xml',\n  'multipart/form-data',\n  'text/plain',\n]\n\n/**\n * Get the request body from the operation.\n */\nexport function getRequestBodyFromOperation(\n  operation: Pick<TransformedOperation, 'pathParameters' | 'information'>,\n  selectedExampleKey?: string | number,\n  omitEmptyAndOptionalProperties?: boolean,\n): {\n  mimeType: ContentType\n  text?: string | undefined\n  params?: {\n    name: string\n    value?: string | File\n  }[]\n} | null {\n  const originalContent = operation.information?.requestBody?.content\n  const content = normalizeMimeTypeObject(originalContent)\n\n  // First try to find a standard mime type\n  const mimeType =\n    standardMimeTypes.find((currentMimeType) => !!content?.[currentMimeType]) ??\n    ((Object.keys(content ?? {})[0] || 'application/json') as ContentType)\n\n  // Handle JSON-like content types (e.g., application/vnd.github+json)\n  const isJsonLike = mimeType.includes('json') || mimeType.endsWith('+json')\n\n  /** Examples */\n  const examples = content?.[mimeType]?.examples ?? content?.['application/json']?.examples\n\n  // Let\u2019s use the first example\n  const selectedExample = examples?.[selectedExampleKey ?? Object.keys(examples ?? {})[0] ?? '']\n\n  if (selectedExample) {\n    return {\n      mimeType,\n      text: prettyPrintJson(selectedExample?.value),\n    }\n  }\n\n  /**\n   * Body Parameters (Swagger 2.0)\n   *\n   * \u201DThe payload that's appended to the HTTP request. Since there can only be one payload, there can only\n   * be one body parameter. The name of the body parameter has no effect on the parameter itself and is used\n   * for documentation purposes only. Since Form parameters are also in the payload, body and form\n   * parameters cannot exist together for the same operation.\u201D\n   */\n  const bodyParameters = getParametersFromOperation(\n    operation.information?.parameters ?? [],\n    operation.pathParameters ?? [],\n    'body',\n    false,\n  )\n\n  if (bodyParameters.length > 0) {\n    return {\n      mimeType: 'application/json',\n      text: prettyPrintJson(bodyParameters[0]?.value ?? ''),\n    }\n  }\n\n  /**\n   * FormData Parameters (Swagger 2.0)\n   *\n   * \u201DForm - Used to describe the payload of an HTTP request when either application/x-www-form-urlencoded,\n   * multipart/form-data or both are used as the content type of the request (in Swagger's definition, the\n   * consumes property of an operation). This is the only parameter type that can be used to send files,\n   * thus supporting the file type. Since form parameters are sent in the payload, they cannot be declared\n   * together with a body parameter for the same operation. Form parameters have a different format based on\n   * the content-type used (for further details, consult http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4):\n   * - application/x-www-form-urlencoded - Similar to the format of Query parameters but as a payload.\n   *   For example, foo=1&bar=swagger - both foo and bar are form parameters. This is normally used for simple\n   *   parameters that are being transferred.\n   * - multipart/form-data - each parameter takes a section in the payload with an internal header.\n   *   For example, for the header Content-Disposition: form-data; name=\"submit-name\" the name of the parameter is\n   *   submit-name. This type of form parameters is more commonly used for file transfers.\u201D\n   */\n\n  const formDataParameters = getParametersFromOperation(\n    operation.information?.parameters ?? [],\n    operation.pathParameters ?? [],\n    'formData',\n    false,\n  )\n\n  if (formDataParameters.length > 0) {\n    return {\n      mimeType: 'application/x-www-form-urlencoded',\n      params: formDataParameters.map((parameter) => ({\n        name: parameter.name,\n        /**\n         * TODO: This value MUST be a string\n         * Figure out why this is not always a string\n         *\n         * JSON.stringify is a TEMPORARY fix\n         */\n        value: typeof parameter.value === 'string' ? parameter.value : JSON.stringify(parameter.value),\n      })),\n    }\n  }\n\n  // If no mime type is supported, exit early\n  if (!mimeType) {\n    return null\n  }\n\n  // Get the request body object for the mime type\n  const requestBodyObject = content?.[mimeType]\n\n  // Get example from operation\n  const example = requestBodyObject?.example ? requestBodyObject?.example : undefined\n\n  // Update the JSON handling section\n  if (isJsonLike) {\n    const exampleFromSchema = requestBodyObject?.schema\n      ? getExampleFromSchema(requestBodyObject?.schema, {\n          mode: 'write',\n          omitEmptyAndOptionalProperties: omitEmptyAndOptionalProperties ?? false,\n        })\n      : null\n\n    const body = example ?? exampleFromSchema\n\n    return {\n      mimeType,\n      text: body ? (typeof body === 'string' ? body : JSON.stringify(body, null, 2)) : undefined,\n    }\n  }\n\n  // XML\n  if (mimeType === 'application/xml') {\n    const exampleFromSchema = requestBodyObject?.schema\n      ? getExampleFromSchema(requestBodyObject?.schema, {\n          xml: true,\n          mode: 'write',\n        })\n      : null\n\n    return {\n      mimeType,\n      text: example ?? json2xml(exampleFromSchema, '  '),\n    }\n  }\n\n  // Binary data\n  if (mimeType === 'application/octet-stream') {\n    return {\n      mimeType,\n      text: 'BINARY',\n    }\n  }\n\n  // Plain text\n  if (mimeType === 'text/plain') {\n    const exampleFromSchema = requestBodyObject?.schema\n      ? getExampleFromSchema(requestBodyObject?.schema, {\n          xml: true,\n          mode: 'write',\n        })\n      : null\n\n    return {\n      mimeType,\n      text: example ?? exampleFromSchema ?? '',\n    }\n  }\n\n  // URL encoded data\n  if (mimeType === 'multipart/form-data' || mimeType === 'application/x-www-form-urlencoded') {\n    const exampleFromSchema = requestBodyObject?.schema\n      ? getExampleFromSchema(requestBodyObject?.schema, {\n          xml: true,\n          mode: 'write',\n        })\n      : null\n\n    return {\n      mimeType,\n      params: getParamsFromObject(example ?? exampleFromSchema ?? {}),\n    }\n  }\n\n  return null\n}\n", "import { schemaModel } from '@/helpers/schema-model'\nimport { getServerVariableExamples } from '@/spec-getters/get-server-variable-examples'\nimport { keysOf } from '@scalar/object-utils/arrays'\nimport { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { z } from 'zod'\n\nimport { getRequestBodyFromOperation } from '@/spec-getters/get-request-body-from-operation'\nimport type { RequestParameter, ParameterContent } from './parameters'\nimport type { Request } from './requests'\nimport type { Server } from './server'\nimport { isDefined } from '@scalar/helpers/array/is-defined'\nimport { objectKeys } from '@scalar/helpers/object/object-keys'\n\n// ---------------------------------------------------------------------------\n// Example Parameters\n\n/**\n * TODO: Deprecate this.\n *\n * The request schema should be stored in the request and any\n * parameters should be validated against that\n */\nexport const requestExampleParametersSchema = z\n  .object({\n    key: z.string().default(''),\n    value: z.coerce.string().default(''),\n    enabled: z.boolean().default(true),\n    file: z.any().optional(),\n    description: z.string().optional(),\n    required: z.boolean().optional(),\n    enum: z.array(z.string()).optional(),\n    examples: z.array(z.any()).optional(),\n    type: z\n      .union([\n        // 'string'\n        z.string(),\n        // ['string', 'null']\n        z.array(z.string()),\n      ])\n      .optional(),\n    format: z.string().optional(),\n    minimum: z.number().optional(),\n    maximum: z.number().optional(),\n    default: z.any().optional(),\n    nullable: z.boolean().optional(),\n  })\n  // set nullable: to true if type is ['string', 'null']\n  .transform((_data) => {\n    const data = { ..._data }\n\n    // type: ['string', 'null'] -> nullable: true\n    if (Array.isArray(data.type) && data.type.includes('null')) {\n      data.nullable = true\n    }\n\n    // Hey, if it's just one value and 'null', we can make it a string and ditch the 'null'.\n    if (Array.isArray(data.type) && data.type.length === 2 && data.type.includes('null')) {\n      data.type = data.type.find((item) => item !== 'null')\n    }\n\n    return data\n  })\n\n/** Convert the array of parameters to an object keyed by the parameter name */\nexport const parameterArrayToObject = (params: RequestExampleParameter[]) =>\n  params.reduce<Record<string, string>>((map, param) => {\n    map[param.key] = param.value\n    return map\n  }, {})\n\n/** Request examples - formerly known as instances - are \"children\" of requests */\nexport type RequestExampleParameter = z.infer<typeof requestExampleParametersSchema>\n\nexport const xScalarFileValueSchema = z\n  .object({\n    url: z.string(),\n    base64: z.string().optional(),\n  })\n  .nullable()\n\n/**\n * When files are required for an example we provide the options\n * to provide a public URL or a base64 encoded string\n */\nexport type XScalarFileValue = z.infer<typeof xScalarFileValueSchema>\n\n/**\n * Schema for the OAS serialization of request example parameters\n *\n * File values can be optionally fetched on import OR inserted as a base64 encoded string\n */\nexport const xScalarFormDataValue = z.union([\n  z.object({\n    type: z.literal('string'),\n    value: z.string(),\n  }),\n  z.object({\n    type: z.literal('file'),\n    file: xScalarFileValueSchema,\n  }),\n])\n\nexport type XScalarFormDataValue = z.infer<typeof xScalarFormDataValue>\n\n// ---------------------------------------------------------------------------\n// Example Body\n\n/**\n * Possible encodings for example request bodies when using text formats\n *\n * TODO: This list may not be comprehensive enough\n */\nexport const exampleRequestBodyEncoding = ['json', 'text', 'html', 'javascript', 'xml', 'yaml', 'edn'] as const\n\nexport type BodyEncoding = (typeof exampleRequestBodyEncoding)[number]\n\nexport const exampleBodyMime = [\n  'application/json',\n  'text/plain',\n  'text/html',\n  'application/javascript',\n  'application/xml',\n  'application/yaml',\n  'application/edn',\n  'application/octet-stream',\n  'application/x-www-form-urlencoded',\n  'multipart/form-data',\n  /** Used for direct files */\n  'binary',\n] as const\n\nexport type BodyMime = (typeof exampleBodyMime)[number]\n\nconst contentMapping: Record<BodyEncoding, BodyMime> = {\n  json: 'application/json',\n  text: 'text/plain',\n  html: 'text/html',\n  javascript: 'application/javascript',\n  xml: 'application/xml',\n  yaml: 'application/yaml',\n  edn: 'application/edn',\n} as const\n\n/**\n * TODO: Migrate away from this layout to the format used in the extension\n *\n * If a user changes the encoding of the body we expect the content to change as well\n */\nexport const exampleRequestBodySchema = z.object({\n  raw: z\n    .object({\n      encoding: z.enum(exampleRequestBodyEncoding),\n      value: z.string().default(''),\n      mimeType: z.string().optional(),\n    })\n    .optional(),\n  formData: z\n    .object({\n      encoding: z.union([z.literal('form-data'), z.literal('urlencoded')]).default('form-data'),\n      value: requestExampleParametersSchema.array().default([]),\n    })\n    .optional(),\n  binary: z.instanceof(Blob).optional(),\n  activeBody: z.union([z.literal('raw'), z.literal('formData'), z.literal('binary')]).default('raw'),\n})\n\nexport type ExampleRequestBody = z.infer<typeof exampleRequestBodySchema>\n\n/** Schema for the OAS serialization of request example bodies */\nexport const xScalarExampleBodySchema = z.object({\n  encoding: z.enum(exampleBodyMime),\n  /**\n   * Body content as an object with a separately specified encoding or a simple pre-encoded string value\n   *\n   * Ideally we would convert any objects into the proper encoding on import\n   */\n  content: z.union([z.record(z.string(), z.any()), z.string()]),\n  /** When the encoding is `binary` this will be used to link to the file */\n  file: xScalarFileValueSchema.optional(),\n})\n\nexport type XScalarExampleBody = z.infer<typeof xScalarExampleBodySchema>\n\n// ---------------------------------------------------------------------------\n// Example Schema\n\nexport const requestExampleSchema = z.object({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['EXAMPLE']>(),\n  type: z.literal('requestExample').optional().default('requestExample'),\n  requestUid: z.string().brand<ENTITY_BRANDS['OPERATION']>().optional(),\n  name: z.string().optional().default('Name'),\n  body: exampleRequestBodySchema.optional().default({}),\n  parameters: z\n    .object({\n      path: requestExampleParametersSchema.array().default([]),\n      query: requestExampleParametersSchema.array().default([]),\n      headers: requestExampleParametersSchema.array().default([{ key: 'Accept', value: '*/*', enabled: true }]),\n      cookies: requestExampleParametersSchema.array().default([]),\n    })\n    .optional()\n    .default({}),\n  /** TODO: Should this be deprecated? */\n  serverVariables: z.record(z.string(), z.array(z.string())).optional(),\n})\n\nexport type RequestExample = z.infer<typeof requestExampleSchema>\n\n/** For OAS serialization we just store the simple key/value pairs */\nconst xScalarExampleParameterSchema = z.record(z.string(), z.string()).optional()\n\n/** Schema for the OAS serialization of request examples */\nexport const xScalarExampleSchema = z.object({\n  /** TODO: Should this be required? */\n  name: z.string().optional(),\n  body: xScalarExampleBodySchema.optional(),\n  parameters: z.object({\n    path: xScalarExampleParameterSchema,\n    query: xScalarExampleParameterSchema,\n    headers: xScalarExampleParameterSchema,\n    cookies: xScalarExampleParameterSchema,\n  }),\n})\n\nexport type XScalarExample = z.infer<typeof xScalarExampleSchema>\n\n/**\n * Convert a request example to the xScalar serialized format\n *\n * TODO: The base format should be migrated to align MUCH closer to the serialized format\n */\nexport function convertExampleToXScalar(example: RequestExample) {\n  const active = example.body?.activeBody\n\n  const xScalarBody: XScalarExampleBody = {\n    encoding: 'text/plain',\n    content: '',\n  }\n\n  if (example.body?.activeBody === 'binary') {\n    xScalarBody.encoding = 'binary'\n    // TODO: Need to allow users to set these properties\n    xScalarBody.file = null\n  }\n\n  if (active === 'formData' && example.body?.[active]) {\n    const body = example.body[active]\n    xScalarBody.encoding = body.encoding === 'form-data' ? 'multipart/form-data' : 'application/x-www-form-urlencoded'\n\n    // TODO: Need to allow users to set these properties\n    xScalarBody.content = body.value.reduce<Record<string, XScalarFormDataValue>>((map, param) => {\n      /** TODO: We need to ensure only file or value is set */\n      map[param.key] = param.file\n        ? {\n            type: 'file',\n            file: null,\n          }\n        : {\n            type: 'string',\n            value: param.value,\n          }\n      return map\n    }, {})\n  }\n\n  if (example.body?.activeBody === 'raw') {\n    xScalarBody.encoding = contentMapping[example.body.raw?.encoding ?? 'text'] ?? 'text/plain'\n\n    xScalarBody.content = example.body.raw?.value ?? ''\n  }\n\n  const parameters: XScalarExample['parameters'] = {}\n\n  keysOf(example.parameters ?? {}).forEach((key) => {\n    if (example.parameters?.[key].length) {\n      parameters[key] = parameterArrayToObject(example.parameters[key])\n    }\n  })\n\n  return xScalarExampleSchema.parse({\n    /** Only add the body if we have content or the body should be a file */\n    body: xScalarBody.content || xScalarBody.encoding === 'binary' ? xScalarBody : undefined,\n    parameters,\n  })\n}\n\n// ---------------------------------------------------------------------------\n// Example Helpers\n\n/** Create new instance parameter from a request parameter */\nexport function createParamInstance(param: RequestParameter) {\n  const schema = param.schema as any\n\n  const firstExample = (() => {\n    if (param.examples && !Array.isArray(param.examples) && objectKeys(param.examples).length > 0) {\n      const exampleValues = Object.entries(param.examples).map(([_, example]) => {\n        // returns the external value if it exists\n        if (example.externalValue) {\n          return example.externalValue\n        }\n\n        // returns the value if it exists and is defined\n        // e.g. { examples: { foo: { value: 'bar' } } } would return ['bar']\n        return example.value\n      })\n\n      // returns the first example as selected value along other examples\n      return { value: exampleValues[0], examples: exampleValues }\n    }\n\n    // param example e.g. { example: 'foo' }\n    if (isDefined(param.example)) {\n      return { value: param.example }\n    }\n\n    // param examples e.g. { examples: ['foo', 'bar'] }\n    if (Array.isArray(param.examples) && param.examples.length > 0) {\n      return { value: param.examples[0] }\n    }\n\n    // schema example e.g. { example: 'foo' } while being discouraged\n    // see https://spec.openapis.org/oas/v3.1.1.html#fixed-fields-20\n    if (isDefined(schema?.example)) {\n      return { value: schema.example }\n    }\n\n    // schema examples e.g. { examples: ['foo', 'bar'] }\n    if (Array.isArray(schema?.examples) && schema.examples.length > 0) {\n      // For boolean type, default to false when using schema examples\n      if (schema?.type === 'boolean') {\n        return { value: schema.default ?? false }\n      }\n      return { value: schema.examples[0] }\n    }\n\n    // content examples e.g. { content: { 'application/json': { examples: { foo: { value: 'bar' } } } } }\n    if (param.content) {\n      const firstContentType = objectKeys(param.content)[0]\n      if (firstContentType) {\n        const content = (param.content as ParameterContent)[firstContentType]\n        if (content?.examples) {\n          const firstExampleKey = Object.keys(content.examples)[0]\n          if (firstExampleKey) {\n            const example = content.examples[firstExampleKey]\n            if (isDefined(example?.value)) {\n              return { value: example.value }\n            }\n          }\n        }\n        // content example e.g. { example: 'foo' }\n        if (isDefined(content?.example)) {\n          return { value: content.example }\n        }\n      }\n    }\n\n    return null\n  })() as null | { value: any; examples?: string[] }\n\n  /**\n   * TODO:\n   * - Need better value defaulting here\n   * - Need to handle non-string parameters much better\n   * - Need to handle unions/array values for schema\n   */\n  const value = String(firstExample?.value ?? schema?.default ?? '')\n\n  // Handle non-string enums and enums within items for array types\n  const parseEnum = (() => {\n    if (schema?.enum && schema?.type !== 'string') {\n      return schema.enum?.map(String)\n    }\n\n    if (schema?.items?.enum && schema?.type === 'array') {\n      return schema.items.enum.map(String)\n    }\n\n    return schema?.enum\n  })()\n\n  // Handle parameter examples\n  const examples =\n    firstExample?.examples ||\n    (schema?.examples && schema?.type !== 'string' ? schema.examples?.map(String) : schema?.examples)\n\n  // safe parse the example\n  const example = schemaModel(\n    {\n      ...schema,\n      key: param.name,\n      value,\n      description: param.description,\n      required: param.required,\n      /** Initialized all required properties to enabled */\n      enabled: !!param.required,\n      enum: parseEnum,\n      examples,\n    },\n    requestExampleParametersSchema,\n    false,\n  )\n\n  if (!example) {\n    console.warn(`Example at ${param.name} is invalid.`)\n    return requestExampleParametersSchema.parse({})\n  }\n\n  return example\n}\n\n/**\n * Create new request example from a request\n * Iterates the name of the example if provided\n */\nexport function createExampleFromRequest(request: Request, name: string, server?: Server): RequestExample {\n  // ---------------------------------------------------------------------------\n  // Populate all parameters with an example value\n  const parameters: Record<'path' | 'cookie' | 'header' | 'query' | 'headers', RequestExampleParameter[]> = {\n    path: [],\n    query: [],\n    cookie: [],\n    // deprecated TODO: add zod transform to remove\n    header: [],\n    headers: [{ key: 'Accept', value: '*/*', enabled: true }],\n  }\n\n  // Populated the separated params\n  request.parameters?.forEach((p) => parameters[p.in].push(createParamInstance(p)))\n\n  // TODO: add zod transform to remove header and only support headers\n  if (parameters.header.length > 0) {\n    parameters.headers = parameters.header\n    parameters.header = []\n  }\n\n  // Get content type header\n  const contentTypeHeader = parameters.headers.find((h) => h.key.toLowerCase() === 'content-type')\n\n  // ---------------------------------------------------------------------------\n  // Handle request body defaulting for various content type encodings\n  const body: ExampleRequestBody = {\n    activeBody: 'raw',\n  }\n\n  // If we have a request body or a content type header\n  // TODO: we don't even handle path parameters here\n  if (request.requestBody || contentTypeHeader?.value) {\n    const requestBody = getRequestBodyFromOperation({\n      information: {\n        parameters: request.parameters ?? [],\n        requestBody: request.requestBody,\n      },\n    })\n\n    const contentType = request.requestBody ? requestBody?.mimeType : contentTypeHeader?.value\n\n    // Handle JSON and JSON-like mimetypes\n    if (contentType?.includes('/json') || contentType?.endsWith('+json')) {\n      body.activeBody = 'raw'\n      body.raw = {\n        encoding: 'json',\n        mimeType: contentType,\n        value: requestBody?.text ?? JSON.stringify({}),\n      }\n    }\n\n    if (contentType === 'application/xml') {\n      body.activeBody = 'raw'\n      body.raw = {\n        encoding: 'xml',\n        value: requestBody?.text ?? '',\n      }\n    }\n\n    /**\n     *  TODO: Are we loading example files from somewhere based on the spec?\n     *  How are we handling the body values\n     */\n    if (contentType === 'application/octet-stream') {\n      body.activeBody = 'binary'\n      body.binary = undefined\n    }\n\n    if (contentType === 'application/x-www-form-urlencoded' || contentType === 'multipart/form-data') {\n      body.activeBody = 'formData'\n      body.formData = {\n        encoding: contentType === 'application/x-www-form-urlencoded' ? 'urlencoded' : 'form-data',\n        value: (requestBody?.params || []).map((param) => {\n          if (param.value instanceof File) {\n            return {\n              key: param.name,\n              value: 'BINARY',\n              file: param.value,\n              enabled: true,\n            }\n          }\n          return {\n            key: param.name,\n            value: param.value || '',\n            enabled: true,\n          }\n        }),\n      }\n    }\n\n    // Add the content-type header if it doesn't exist and if it's not multipart request\n    if (requestBody?.mimeType && !contentTypeHeader && !requestBody.mimeType.startsWith('multipart/')) {\n      parameters.headers.push({\n        key: 'Content-Type',\n        value: requestBody.mimeType,\n        enabled: true,\n      })\n    }\n  }\n\n  const serverVariables = server ? getServerVariableExamples(server) : {}\n\n  // safe parse the example\n  const example = schemaModel(\n    {\n      requestUid: request.uid,\n      parameters,\n      name,\n      body,\n      serverVariables,\n    },\n    requestExampleSchema,\n    false,\n  )\n\n  if (!example) {\n    console.warn(`Example at ${request.uid} is invalid.`)\n    return requestExampleSchema.parse({})\n  }\n  return example\n}\n", "import { selectedSecuritySchemeUidSchema } from '@/entities/shared/utility'\nimport { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { type ZodSchema, z } from 'zod'\n\nimport {\n  type PostResponseSchema,\n  XCodeSamplesSchema,\n  XPostResponseSchema,\n} from '@scalar/openapi-types/schemas/extensions'\nimport { XScalarStability } from '@scalar/types'\nimport { oasSecurityRequirementSchema } from '@scalar/types/entities'\nimport { oasParameterSchema } from './parameters'\nimport { type RequestExample, xScalarExampleSchema } from './request-examples'\nimport { oasExternalDocumentationSchema } from './spec-objects'\n\nexport const requestMethods = ['connect', 'delete', 'get', 'head', 'options', 'patch', 'post', 'put', 'trace'] as const\n\nexport type RequestMethod = (typeof requestMethods)[number]\n\n/** A single set of populated values for a sent request */\nexport type ResponseInstance = Omit<Response, 'headers'> & {\n  /** Store headers as an object to match what we had with axios */\n  headers: Record<string, string>\n  /** Keys of headers which set cookies */\n  cookieHeaderKeys: string[]\n  /** Time in ms the request took */\n  duration: number\n  /** The response status */\n  status: number\n  /** The response status text */\n  statusText: string\n  /** The response method */\n  method: RequestMethod\n  /** The request path */\n  path: string\n} & (\n    | {\n        /** The response data */\n        data: string | Blob\n        /** The response size in bytes */\n        size: number\n      }\n    | {\n        /** A stream reader for a streamable response body */\n        reader: ReadableStreamDefaultReader<Uint8Array>\n      }\n  )\n\n/** A single request/response set to save to the history stack */\nexport type RequestEvent = {\n  request: RequestExample\n  response: ResponseInstance\n  timestamp: number\n}\n\n// TODO: Type body definitions\ntype RequestBody = object\nconst requestBodySchema = z.any() satisfies ZodSchema<RequestBody>\n\n/** Open API Compliant Request Validator */\nexport const oasRequestSchema = z.object({\n  /**\n   * A list of tags for API documentation control. Tags can be used for logical\n   * grouping of operations by resources or any other qualifier.\n   *\n   * These tags are the openapi spec tag names, not uids\n   */\n  'tags': z.string().array().optional(),\n  /** A short summary of what the operation does. */\n  'summary': z.string().optional(),\n  /** A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation. */\n  'description': z.string().optional(),\n  /**\n   * Unique string used to identify the operation. The id MUST be unique among all operations described in the API.\n   * The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an\n   * operation, therefore, it is RECOMMENDED to follow bin common programming naming conventions./\n   */\n  'operationId': z.string().optional(),\n  /**\n   * A declaration of which security mechanisms can be used across the API. The list of\n   * values includes alternative security requirement objects that can be used. Only\n   * one of the security requirement objects need to be satisfied to authorize a request.\n   * Individual operations can override this definition. To make security optional, an empty\n   * security requirement ({}) can be included in the array.\n   */\n  'security': z.array(oasSecurityRequirementSchema).optional(),\n  /**\n   * The request body applicable for this operation. The requestBody is fully supported in HTTP methods where the\n   * HTTP 1.1 specification [RFC7231] has explicitly defined semantics for request bodies. In other cases where the\n   * HTTP spec is vague (such as GET, HEAD and DELETE), requestBody is permitted but does not have well-defined\n   * semantics and SHOULD be avoided if possible.\n   */\n  'requestBody': requestBodySchema.optional(),\n  /**\n   * Request parameters\n   */\n  'parameters': oasParameterSchema.array().optional(),\n  /**\n   * External documentation object\n   */\n  'externalDocs': oasExternalDocumentationSchema.optional(),\n  'deprecated': z.boolean().optional(),\n  /** Response formats */\n  'responses': z.record(z.string(), z.any()).optional(),\n  /** Callbacks */\n  'callbacks': z.record(z.string(), z.record(z.string(), z.record(z.string(), z.any()))).optional(),\n  /** xScalar examples */\n  'x-scalar-examples': z.record(z.string(), xScalarExampleSchema).optional(),\n  /** Hide operations */\n  'x-internal': z.boolean().optional(),\n  /** Ignore operations */\n  'x-scalar-ignore': z.boolean().optional(),\n})\n\n/**\n * An OpenAPI extension to indicate the stability of the operation\n *\n * @example\n * ```yaml\n * x-scalar-stability: deprecated\n * ```\n */\nconst ScalarStabilitySchema = z.object({\n  'x-scalar-stability': z\n    .enum([XScalarStability.Deprecated, XScalarStability.Experimental, XScalarStability.Stable])\n    .optional()\n    .catch(undefined),\n})\n\n/**\n * Extended properties added to the spec definition for client usage\n *\n * WARNING: DO NOT ADD PROPERTIES THAT SHARE A NAME WITH OAS OPERATION ENTITIES\n *\n * This object is directly converted to a spec operation during saving\n */\nconst extendedRequestSchema = z.object({\n  type: z.literal('request').optional().default('request'),\n  uid: nanoidSchema.brand<ENTITY_BRANDS['OPERATION']>(),\n  /** Path Key */\n  path: z.string().optional().default(''),\n  /** Request Method */\n  method: z.enum(requestMethods).default('get'),\n  /** List of server UIDs specific to the request */\n  servers: z.string().brand<ENTITY_BRANDS['SERVER']>().array().default([]),\n  /** The currently selected server */\n  selectedServerUid: z.string().brand<ENTITY_BRANDS['SERVER']>().optional().nullable().default(null),\n  /** List of example UIDs associated with the request */\n  examples: z.string().brand<ENTITY_BRANDS['EXAMPLE']>().array().default([]),\n  /** List of security scheme UIDs associated with the request */\n  selectedSecuritySchemeUids: selectedSecuritySchemeUidSchema,\n})\n\nexport type PostResponseScript = z.infer<typeof PostResponseSchema>\nexport type PostResponseScripts = z.infer<typeof XPostResponseSchema>['x-post-response']\n\n/** Unified request schema for client usage */\nexport const requestSchema = oasRequestSchema\n  .omit({ 'x-scalar-examples': true })\n  .merge(XCodeSamplesSchema)\n  .merge(ScalarStabilitySchema)\n  .merge(extendedRequestSchema)\n  .merge(XPostResponseSchema)\n\nexport type Request = z.infer<typeof requestSchema>\nexport type RequestPayload = z.input<typeof requestSchema>\n", "/**\n * Deep setting\n *\n * Derived from @url https://github.com/react-hook-form/react-hook-form/tree/011fad503cc8d4543892f8e847b9bd58c1d9400f/src/types/path\n *\n */\nimport type { ArrayKey, BrowserNativeObject, IsAny, IsEqual, IsTuple, Primitive, TupleKeys } from './common'\n\ntype FieldValues = Record<string, any>\n\n/**\n * Helper function to break apart T1 and check if any are equal to T2\n *\n * See {@link IsEqual}\n */\ntype AnyIsEqual<T1, T2> = T1 extends T2 ? (IsEqual<T1, T2> extends true ? true : never) : never\n\n/**\n * Helper type for recursively constructing paths through a type.\n * This actually constructs the strings and recurses into nested\n * object types.\n *\n * See {@link Path}\n */\ntype PathImpl<K extends string | number, V, TraversedTypes> = V extends Primitive | BrowserNativeObject\n  ? `${K}`\n  : // Check so that we don't recurse into the same type\n    // by ensuring that the types are mutually assignable\n    // mutually required to avoid false positives of subtypes\n    true extends AnyIsEqual<TraversedTypes, V>\n    ? `${K}`\n    : `${K}` | `${K}.${PathInternal<V, TraversedTypes | V>}`\n\n/**\n * Helper type for recursively constructing paths through a type.\n * This obscures the internal type param TraversedTypes from exported contract.\n *\n * See {@link Path}\n */\ntype PathInternal<T, TraversedTypes = T> = T extends ReadonlyArray<infer V>\n  ? IsTuple<T> extends true\n    ? {\n        [K in TupleKeys<T>]-?: PathImpl<K & string, T[K], TraversedTypes>\n      }[TupleKeys<T>]\n    : PathImpl<ArrayKey, V, TraversedTypes>\n  : {\n      [K in keyof T]-?: PathImpl<K & string, T[K], TraversedTypes>\n    }[keyof T]\n\n/**\n * Type which eagerly collects all paths through a type\n * @typeParam T - type which should be introspected\n * @example\n * ```\n * Path<{foo: {bar: string}}> = 'foo' | 'foo.bar'\n * ```\n */\n// We want to explode the union type and process each individually\n// so assignable types don't leak onto the stack from the base.\ntype Path<T> = T extends any ? PathInternal<T> : never\n\n/**\n * See {@link Path}\n */\ntype FieldPath<TFieldValues extends FieldValues> = Path<TFieldValues>\n\n/**\n * Helper type for recursively constructing paths through a type.\n * This actually constructs the strings and recurses into nested\n * object types.\n *\n * See {@link ArrayPath}\n */\ntype ArrayPathImpl<K extends string | number, V, TraversedTypes> = V extends Primitive | BrowserNativeObject\n  ? IsAny<V> extends true\n    ? string\n    : never\n  : V extends ReadonlyArray<infer U>\n    ? U extends Primitive | BrowserNativeObject\n      ? IsAny<V> extends true\n        ? string\n        : never\n      : // Check so that we don't recurse into the same type\n        // by ensuring that the types are mutually assignable\n        // mutually required to avoid false positives of subtypes\n        true extends AnyIsEqual<TraversedTypes, V>\n        ? never\n        : `${K}` | `${K}.${ArrayPathInternal<V, TraversedTypes | V>}`\n    : true extends AnyIsEqual<TraversedTypes, V>\n      ? never\n      : `${K}.${ArrayPathInternal<V, TraversedTypes | V>}`\n\n/**\n * Helper type for recursively constructing paths through a type.\n * This obscures the internal type param TraversedTypes from exported contract.\n *\n * See {@link ArrayPath}\n */\ntype ArrayPathInternal<T, TraversedTypes = T> = T extends ReadonlyArray<infer V>\n  ? IsTuple<T> extends true\n    ? {\n        [K in TupleKeys<T>]-?: ArrayPathImpl<K & string, T[K], TraversedTypes>\n      }[TupleKeys<T>]\n    : ArrayPathImpl<ArrayKey, V, TraversedTypes>\n  : {\n      [K in keyof T]-?: ArrayPathImpl<K & string, T[K], TraversedTypes>\n    }[keyof T]\n\n/**\n * Type which eagerly collects all paths through a type which point to an array\n * type.\n * @typeParam T - type which should be introspected.\n * @example\n * ```\n * Path<{foo: {bar: string[], baz: number[]}}> = 'foo.bar' | 'foo.baz'\n * ```\n */\n// We want to explode the union type and process each individually\n// so assignable types don't leak onto the stack from the base.\ntype ArrayPath<T> = T extends any ? ArrayPathInternal<T> : never\n\n/**\n * See {@link ArrayPath}\n */\ntype FieldArrayPath<TFieldValues extends FieldValues> = ArrayPath<TFieldValues>\n\n/**\n * Type to evaluate the type which the given path points to.\n * @typeParam T - deeply nested type which is indexed by the path\n * @typeParam P - path into the deeply nested type\n * @example\n * ```\n * PathValue<{foo: {bar: string}}, 'foo.bar'> = string\n * PathValue<[number, string], '1'> = string\n * ```\n */\ntype PathValue<T, P extends Path<T> | ArrayPath<T>> = T extends any\n  ? P extends keyof T\n    ? T[P]\n    : P extends `${infer K}.${infer R}`\n      ? K extends keyof T\n        ? R extends Path<T[K]>\n          ? PathValue<T[K], R>\n          : never\n        : K extends `${ArrayKey}`\n          ? T extends ReadonlyArray<infer V>\n            ? PathValue<V, R & Path<V>>\n            : never\n          : never\n      : P extends `${ArrayKey}`\n        ? T extends ReadonlyArray<infer V>\n          ? V\n          : never\n        : never\n  : never\n\n/**\n * See {@link PathValue}\n */\ntype FieldPathValue<TFieldValues extends FieldValues, TFieldPath extends FieldPath<TFieldValues>> = PathValue<\n  TFieldValues,\n  TFieldPath\n>\n\n/**\n * See {@link PathValue}\n */\n// type FieldArrayPathValue<\n//   TFieldValues extends FieldValues,\n//   TFieldArrayPath extends FieldArrayPath<TFieldValues>,\n// > = PathValue<TFieldValues, TFieldArrayPath>\n\n/**\n * Type to evaluate the type which the given paths point to.\n * @typeParam TFieldValues - field values which are indexed by the paths\n * @typeParam TPath        - paths into the deeply nested field values\n * @example\n * ```\n * FieldPathValues<{foo: {bar: string}}, ['foo', 'foo.bar']>\n *   = [{bar: string}, string]\n * ```\n */\n// type FieldPathValues<\n//   TFieldValues extends FieldValues,\n//   TPath extends FieldPath<TFieldValues>[] | readonly FieldPath<TFieldValues>[],\n// > = {} & {\n//   [K in keyof TPath]: FieldPathValue<\n//     TFieldValues,\n//     TPath[K] & FieldPath<TFieldValues>\n//   >\n// }\n\n/**\n * Type which eagerly collects all paths through a fieldType that matches a give type\n * @typeParam TFieldValues - field values which are indexed by the paths\n * @typeParam TValue       - the value you want to match into each type\n * @example\n * ```typescript\n * FieldPathByValue<{foo: {bar: number}, baz: number, bar: string}, number>\n *   = 'foo.bar' | 'baz'\n * ```\n */\ntype FieldPathByValue<TFieldValues extends FieldValues, TValue> = {\n  [Key in FieldPath<TFieldValues>]: FieldPathValue<TFieldValues, Key> extends TValue ? Key : never\n}[FieldPath<TFieldValues>]\n\n// ---------------------------------------------------------------------------\n// ---------------------------------------------------------------------------\n// ---------------------------------------------------------------------------\n\n/**\n * Set a nested value from an object using a dot separated path.\n *\n * Basic Path: `'foo.bar'`\n *\n * With Array: `'foo.1.bar'`\n */\nexport function setNestedValue<T, P extends Path<T>>(obj: T, path: P, value: PathValue<T, P>) {\n  const keys = path.split('.')\n\n  // Loop over to get the nested object reference. Then assign the value to it\n  keys.reduce((acc, current, idx) => {\n    if (idx === keys.length - 1) {\n      acc[current] = value\n    }\n\n    return acc[current]\n  }, obj as any)\n\n  return obj\n}\n\n/**\n * Get a nested value from an object using a dot separated path.\n *\n * Basic Path: `'foo.bar'`\n *\n * With Array: `'foo.1.bar'`\n */\nexport function getNestedValue<T, P extends Path<T>>(obj: T, path: P) {\n  const keys = path.split('.')\n\n  // Loop over to get the nested object reference. Then assign the value to it\n  return keys.reduce((acc, current) => {\n    return acc[current]\n  }, obj as any)\n}\n\n/** Export the path and path value types to create other setter functions */\nexport type { Path, PathValue }\n", "import { type Path, type PathValue, getNestedValue, setNestedValue } from '../nested'\n\n/** Type safe include */\nexport function includes<T>(arr: readonly T[], x: T): boolean {\n  return arr.includes(x)\n}\n\n/** Nested paths of the data type */\ntype MutationPath<D> = Path<D>\n\n/** Mutation record for a specific value and data type */\ntype MutationRecord<T, D> = {\n  prev: T\n  value: T\n  path: MutationPath<D>\n}\n\n/** Mutation effect function that is run provisioned with the data object */\ntype MutationEffect<T> = (data: T) => void\n\n/** Effect record that holds the possible change trigger keys for the effect to run */\ntype MutationEffectRecord<T> = {\n  /** Side effect name for debug logs */\n  name: string\n  /**\n   * List of path keys to run effect for. Any nested changes will also trigger the side effect\n   * ex. 'foo.bar'\n   */\n  triggers: string[]\n  /**\n   * Side effect function to run. A copy of the updated data value is passed to the handler\n   */\n  effect: MutationEffect<T> // Effect to run\n}\n\n/**\n * Mutation tracker to allow history roll back/forwards\n *\n * Associates a history record with a specific data object and allows rolling back of that\n * specific object history.\n */\nexport class Mutation<DataType> {\n  /** Object reference for the given data to be tracked */\n  parentData: DataType\n  /** Maximum number of record to keep (how many times you can 'undo' a mutation) */\n  maxRecords: number\n  /** List of all mutation records */\n  records: MutationRecord<any, DataType>[] = []\n  /** List of side effect handlers to run whenever the data changes */\n  sideEffects: MutationEffectRecord<DataType>[] = []\n  /** Active mutation index. Allows rolling forward and backwards */\n  idx = 0\n  /** Optional debug messages */\n  debug: boolean\n\n  constructor(parentData: DataType, maxRecords = 5000, debug = false) {\n    this.maxRecords = maxRecords\n    this.parentData = parentData\n    this.debug = debug\n  }\n\n  /** Mutate without saving a record. Private function. */\n  _unsavedMutate<K extends MutationPath<DataType>>(path: K, value: PathValue<DataType, K>) {\n    setNestedValue(this.parentData, path, value)\n    this.runSideEffects(path)\n  }\n\n  /** Side effects must take ONLY an object of the specified type and act on it */\n  addSideEffect(triggers: string[], effect: MutationEffect<DataType>, name: string, immediate = true) {\n    this.sideEffects.push({ triggers, effect, name })\n    if (immediate) {\n      effect(this.parentData)\n      if (this.debug) {\n        console.info(`Running mutation side effect: ${name}`, 'debug')\n      }\n    }\n  }\n\n  /** Runs all side effects that match the path trigger */\n  runSideEffects(path: MutationPath<DataType>) {\n    this.sideEffects.forEach(({ effect, triggers, name }) => {\n      const triggerEffect = triggers.some((trigger) => path.includes(trigger)) || path.length < 1\n      if (triggerEffect) {\n        effect(this.parentData)\n        if (this.debug) {\n          console.info(`Running mutation side effect: ${name}`, 'debug')\n        }\n      }\n    })\n  }\n\n  /** Mutate an object with the new property value and run side effects */\n  mutate<K extends MutationPath<DataType>>(\n    /** Path to nested set */\n    path: K,\n    /** New value to set */\n    value: PathValue<DataType, K>,\n    /** Optional explicit previous value. Otherwise the current value will be used */\n    previousValue: PathValue<DataType, K> | null = null,\n  ) {\n    // If already rolled back then clear roll forward values before assigning new mutation\n    if (this.idx < this.records.length - 1) {\n      this.records.splice(this.idx + 1)\n    }\n\n    // Check for a change\n    const prev = getNestedValue(this.parentData, path)\n    if (prev === value) {\n      return\n    }\n\n    // Save new mutation record with previous value\n    setNestedValue(this.parentData, path, value)\n    this.runSideEffects(path)\n\n    this.records.push({\n      prev: previousValue ?? prev, // Optional explicit previous value\n      value,\n      path,\n    })\n\n    // Save new position to end\n    this.idx = this.records.length - 1\n\n    // If the record has overflowed remove first entry\n    if (this.records.length > this.maxRecords) {\n      this.records.shift()\n    }\n\n    if (this.debug) {\n      console.info(`Set object '${this.idx}' '${path}' to ${value}`, 'debug')\n    }\n  }\n\n  /** Undo the previous mutation */\n  undo() {\n    if (this.idx < 0 || this.records.length < 1) {\n      return false\n    }\n\n    if (this.debug) {\n      console.info('Undoing Mutation', 'debug')\n    }\n\n    const record = this.records[this.idx]\n    this.idx -= 1\n    if (record) {\n      this._unsavedMutate(record.path, record.prev)\n    }\n\n    return true\n  }\n\n  /** Roll forward to the next available mutation if its exists */\n  redo() {\n    if (this.idx > this.records.length - 2) {\n      return false\n    }\n\n    if (this.debug) {\n      console.info('Redoing Mutation', 'debug')\n    }\n\n    const record = this.records[this.idx + 1]\n    this.idx += 1\n    if (record) {\n      this._unsavedMutate(record.path, record.value)\n    }\n\n    return true\n  }\n}\n", "/** Config options for localStorage mutators */\nexport const LS_CONFIG = {\n  /** The debounce time in milliseconds for saving to localStorage per resource */\n  DEBOUNCE_MS: 328,\n  /** The max wait time in milliseconds for saving to localStorage per resource */\n  MAX_WAIT_MS: 1000,\n} as const\n", "/// <reference types=\"../types/index.d.ts\" />\n\n// (c) 2020-present Andrea Giammarchi\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst {keys} = Object;\n\nconst Primitive = String;   // it could be Number\nconst primitive = 'string'; // it could be 'number'\n\nconst ignore = {};\nconst object = 'object';\n\nconst noop = (_, value) => value;\n\nconst primitives = value => (\n  value instanceof Primitive ? Primitive(value) : value\n);\n\nconst Primitives = (_, value) => (\n  typeof value === primitive ? new Primitive(value) : value\n);\n\nconst revive = (input, parsed, output, $) => {\n  const lazy = [];\n  for (let ke = keys(output), {length} = ke, y = 0; y < length; y++) {\n    const k = ke[y];\n    const value = output[k];\n    if (value instanceof Primitive) {\n      const tmp = input[value];\n      if (typeof tmp === object && !parsed.has(tmp)) {\n        parsed.add(tmp);\n        output[k] = ignore;\n        lazy.push({k, a: [input, parsed, tmp, $]});\n      }\n      else\n        output[k] = $.call(output, k, tmp);\n    }\n    else if (output[k] !== ignore)\n      output[k] = $.call(output, k, value);\n  }\n  for (let {length} = lazy, i = 0; i < length; i++) {\n    const {k, a} = lazy[i];\n    output[k] = $.call(output, k, revive.apply(null, a));\n  }\n  return output;\n};\n\nconst set = (known, input, value) => {\n  const index = Primitive(input.push(value) - 1);\n  known.set(value, index);\n  return index;\n};\n\n/**\n * Converts a specialized flatted string into a JS value.\n * @param {string} text\n * @param {(this: any, key: string, value: any) => any} [reviver]\n * @returns {any}\n */\nexport const parse = (text, reviver) => {\n  const input = $parse(text, Primitives).map(primitives);\n  const value = input[0];\n  const $ = reviver || noop;\n  const tmp = typeof value === object && value ?\n              revive(input, new Set, value, $) :\n              value;\n  return $.call({'': tmp}, '', tmp);\n};\n\n/**\n * Converts a JS value into a specialized flatted string.\n * @param {any} value\n * @param {((this: any, key: string, value: any) => any) | (string | number)[] | null | undefined} [replacer]\n * @param {string | number | undefined} [space]\n * @returns {string}\n */\nexport const stringify = (value, replacer, space) => {\n  const $ = replacer && typeof replacer === object ?\n            (k, v) => (k === '' || -1 < replacer.indexOf(k) ? v : void 0) :\n            (replacer || noop);\n  const known = new Map;\n  const input = [];\n  const output = [];\n  let i = +set(known, input, $.call({'': value}, '', value));\n  let firstRun = !i;\n  while (i < input.length) {\n    firstRun = true;\n    output[i] = $stringify(input[i++], replace, space);\n  }\n  return '[' + output.join(',') + ']';\n  function replace(key, value) {\n    if (firstRun) {\n      firstRun = !firstRun;\n      return value;\n    }\n    const after = $.call(this, key, value);\n    switch (typeof after) {\n      case object:\n        if (after === null) return after;\n      case primitive:\n        return known.get(after) || set(known, input, after);\n    }\n    return after;\n  }\n};\n\n/**\n * Converts a generic value into a JSON serializable object without losing recursion.\n * @param {any} value\n * @returns {any}\n */\nexport const toJSON = value => $parse(stringify(value));\n\n/**\n * Converts a previously serialized object with recursion into a recursive one.\n * @param {any} value\n * @returns {any}\n */\nexport const fromJSON = value => parse($stringify(value));\n", "type CallbackFunction = (...args: any[]) => any\n\n/**\n * Dependency-less debounce function with max wait\n * derived from @url https://dev.to/cantem/how-to-write-a-debounce-function-1bdf\n *\n * @param fn - any function to debounce\n * @param wait - time in ms to wait after function call to invoke function\n * @param {number} maxWait - time in ms to wait after function call to invoke function even if it's still being called\n */\nexport function debounce<T extends CallbackFunction>(\n  fn: T,\n  wait: number,\n  { maxWait }: { maxWait?: number } = {},\n): (...args: any[]) => void {\n  let timer: ReturnType<typeof setTimeout> | null = null\n  let maxTimer: ReturnType<typeof setTimeout> | null = null\n\n  return function (this: any, ...args: any[]) {\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    timer = setTimeout(() => {\n      maxTimer !== null ? clearTimeout(maxTimer) : null\n      maxTimer = null\n      fn.apply(this, args)\n    }, wait)\n\n    if (maxWait && !maxTimer) {\n      maxTimer = setTimeout(() => {\n        timer !== null ? clearTimeout(timer) : null\n        maxTimer = null\n        fn.apply(this, args)\n      }, maxWait)\n    }\n  }\n}\n", "import { Mutation } from '../mutator-record/mutations'\nimport type { Path, PathValue } from '../nested'\nimport { stringify } from 'flatted'\n\nimport { debounce } from './debounce'\nimport { LS_CONFIG } from './local-storage'\n\nconst MAX_MUTATION_RECORDS = 500\n\n/** Generate mutation handlers for a given record of objects  */\nexport function mutationFactory<T extends Record<string, any>>(\n  entityMap: Partial<Record<string, T>>,\n  mutationMap: Partial<Record<string, Mutation<T>>>,\n  localStorageKey?: string | false,\n  maxNumberRecords: number = MAX_MUTATION_RECORDS,\n) {\n  function getMutator(uid: T['uid']) {\n    const mutator = mutationMap[uid]\n\n    if (!mutator) {\n      console.warn(`Missing ${entityMap[uid] ? 'mutator' : 'object'} for uid: ${uid}`)\n    }\n\n    return mutator ?? null\n  }\n\n  /** Triggers on any changes so we can save to localStorage */\n  const onChange = localStorageKey\n    ? debounce(() => localStorage.setItem(localStorageKey, stringify(entityMap)), LS_CONFIG.DEBOUNCE_MS, {\n        maxWait: LS_CONFIG.MAX_WAIT_MS,\n      })\n    : () => null\n\n  return {\n    /** Adds a new item to the record of tracked items and creates a new mutation tracking instance */\n    add: (item: T) => {\n      entityMap[item.uid] = item\n      mutationMap[item.uid] = new Mutation(item, maxNumberRecords)\n      onChange()\n    },\n    delete: (uid: T['uid'] | null | undefined) => {\n      if (!uid) {\n        console.warn('[@scalar/object-utils] No uid provided to delete')\n        return\n      }\n      delete entityMap[uid]\n      delete mutationMap[uid]\n      onChange()\n    },\n    /** Destructive, overwrites a record to a new item and creates a new mutation tracking instance */\n    set: (item: T) => {\n      entityMap[item.uid] = item\n      mutationMap[item.uid] = new Mutation(item, maxNumberRecords)\n      onChange()\n    },\n    /** Update a nested property and track the mutation */\n    edit: <P extends Path<T>>(uid: T['uid'] | null | undefined, path: P, value: PathValue<T, P>) => {\n      if (!uid) {\n        console.warn('[@scalar/object-utils] No uid provided to edit', path, value)\n        return\n      }\n      const mutator = getMutator(uid)\n      mutator?.mutate(path, value)\n      onChange()\n    },\n    /** Commit an untracked edit to the object (undo/redo will not work) */\n    untrackedEdit: <P extends Path<T>>(uid: T['uid'], path: P, value: PathValue<T, P>) => {\n      const mutator = getMutator(uid)\n      mutator?._unsavedMutate(path, value)\n      onChange()\n    },\n    /** Undo the last mutation */\n    undo: (uid: T['uid']) => {\n      const mutator = getMutator(uid)\n      mutator?.undo()\n      onChange()\n    },\n    /** Redo a mutation if available */\n    redo: (uid: T['uid']) => {\n      const mutator = getMutator(uid)\n      mutator?.redo()\n      onChange()\n    },\n    /** Destructive, clears the record */\n    reset: () => {\n      Object.keys(entityMap).forEach((uid) => {\n        delete entityMap[uid]\n        delete mutationMap[uid]\n      })\n      onChange()\n    },\n  }\n}\n\nexport type Mutators<T extends object> = ReturnType<typeof mutationFactory<T>>\n", "import { collectionSchema as x } from \"@scalar/oas-utils/entities/spec\";\nimport { LS_KEYS as p } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as S } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as u } from \"vue\";\nfunction T(s) {\n  const i = u({}), a = S(i, u({}), s && p.COLLECTION);\n  return {\n    collections: i,\n    collectionMutators: a\n  };\n}\nfunction Y({\n  requests: s,\n  requestMutators: i,\n  requestExamples: a,\n  requestExampleMutators: v,\n  workspaces: C,\n  workspaceMutators: d,\n  collections: c,\n  collectionMutators: l,\n  tagMutators: E,\n  serverMutators: h\n}) {\n  return {\n    addCollection: (e, o) => {\n      const t = x.parse(e), n = C[o];\n      return n && d.edit(o, \"collections\", [...n.collections, t.uid]), l.add(t), t;\n    },\n    deleteCollection: (e, o) => {\n      var t, n;\n      if (o.uid) {\n        if (((n = (t = c[e.uid]) == null ? void 0 : t.info) == null ? void 0 : n.title) === \"Drafts\") {\n          console.warn(\"The drafts collection cannot be deleted\");\n          return;\n        }\n        if (Object.values(c).length === 1) {\n          console.warn(\"You must have at least one collection\");\n          return;\n        }\n        e.tags.forEach((r) => E.delete(r)), e.requests.forEach((r) => {\n          const f = s[r];\n          f && (i.delete(r), f.examples.forEach((m) => a[m] && v.delete(m)));\n        }), e.servers.forEach((r) => {\n          r && h.delete(r);\n        }), d.edit(\n          o.uid,\n          \"collections\",\n          o.collections.filter((r) => r !== e.uid)\n        ), l.delete(e.uid);\n      }\n    },\n    addCollectionEnvironment: (e, o, t) => {\n      const n = c[t];\n      if (n) {\n        const r = n[\"x-scalar-environments\"] || {};\n        l.edit(t, \"x-scalar-environments\", {\n          ...r,\n          [e]: o\n        });\n      }\n    },\n    removeCollectionEnvironment: (e, o) => {\n      const t = c[o];\n      if (t) {\n        const n = t[\"x-scalar-environments\"] || {};\n        e in n && (delete n[e], l.edit(o, \"x-scalar-environments\", n));\n      }\n    }\n  };\n}\nexport {\n  T as createStoreCollections,\n  Y as extendedCollectionDataFactory\n};\n", "import { LS_KEYS as i } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as c } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as t } from \"vue\";\nfunction s(r) {\n  const o = t({}), e = c(o, t({}), r && i.COOKIE);\n  return {\n    cookies: o,\n    cookieMutators: e\n  };\n}\nexport {\n  s as createStoreCookies\n};\n", "import { z } from 'zod'\n\nimport type { ENTITY_BRANDS } from '@scalar/types/utils'\n\nexport const environmentSchema = z.object({\n  uid: z.string().brand<ENTITY_BRANDS['ENVIRONMENT']>(),\n  name: z.string().optional().default('Default Environment'),\n  color: z.string().optional().default('#FFFFFF'),\n  value: z.string().default(''),\n  isDefault: z.boolean().optional(),\n})\n\n/** Environment */\nexport type Environment = z.infer<typeof environmentSchema>\nexport type EnvironmentPayload = z.input<typeof environmentSchema>\n", "import { environmentSchema as o } from \"@scalar/oas-utils/entities/environment\";\nimport { LS_KEYS as a } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as m } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as r } from \"vue\";\nfunction f(n) {\n  const t = r({}), e = m(t, r({}), n && a.ENVIRONMENT);\n  return e.add(\n    o.parse({\n      uid: \"default\",\n      name: \"Default Environment\",\n      color: \"#FFFFFF\",\n      value: JSON.stringify({ exampleKey: \"exampleValue\" }, null, 2),\n      isDefault: !0\n    })\n  ), {\n    environments: t,\n    environmentMutators: e\n  };\n}\nfunction d({ environmentMutators: n }) {\n  return { deleteEnvironment: (e) => {\n    if (e === \"default\") {\n      console.warn(\"Default environment cannot be deleted.\");\n      return;\n    }\n    n.delete(e);\n  } };\n}\nexport {\n  f as createStoreEnvironments,\n  d as extendedEnvironmentDataFactory\n};\n", "function a() {\n  const t = /* @__PURE__ */ new Set();\n  function f(n) {\n    return t.add(n), () => o(n);\n  }\n  function r(n) {\n    function e(...i) {\n      o(e), n(...i);\n    }\n    return f(e);\n  }\n  function o(n) {\n    t.delete(n);\n  }\n  function c() {\n    t.clear();\n  }\n  function u(n) {\n    t == null || t.forEach((e) => e(n));\n  }\n  return {\n    on: f,\n    once: r,\n    off: o,\n    emit: u,\n    reset: c,\n    listeners: () => Array.from(t)\n  };\n}\nexport {\n  a as createEventBus\n};\n", "import { createEventBus as e } from \"../libs/event-bus.js\";\nfunction r() {\n  return {\n    /**\n     * Event bus to execute requests, usually triggered by the send button in the address bar\n     * OR the keyboard shortcut\n     */\n    executeRequest: e(),\n    /**\n     * Event bus to focus the address bar or send button\n     */\n    focusAddressBar: e(),\n    /**\n     * Event bus to cancel requests, usually triggered by response loading overlay\n     */\n    cancelRequest: e(),\n    /**\n     * Event bus to keep track of when a request is started, stopped, or aborted\n     */\n    requestStatus: e(),\n    /**\n     * Event bus for controlling the Command Palette\n     *\n     * @param commandName - the command name you wish to execute, leave empty for the full palette\n     */\n    commandPalette: e(),\n    /**\n     * Event bus for handling hot keys\n     */\n    hotKeys: e()\n  };\n}\nexport {\n  r as createStoreEvents\n};\n", "export default {\n  \"title\": \"A JSON Schema for Swagger 2.0 API.\",\n  \"id\": \"http://swagger.io/v2/schema.json#\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"required\": [\"swagger\", \"info\", \"paths\"],\n  \"additionalProperties\": false,\n  \"patternProperties\": {\n    \"^x-\": {\n      \"$ref\": \"#/definitions/vendorExtension\"\n    }\n  },\n  \"properties\": {\n    \"swagger\": {\n      \"type\": \"string\",\n      \"enum\": [\"2.0\"],\n      \"description\": \"The Swagger version of this document.\"\n    },\n    \"info\": {\n      \"$ref\": \"#/definitions/info\"\n    },\n    \"host\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[^{}/ :\\\\\\\\]+(?::\\\\d+)?$\",\n      \"description\": \"The host (name or ip) of the API. Example: 'swagger.io'\"\n    },\n    \"basePath\": {\n      \"type\": \"string\",\n      \"pattern\": \"^/\",\n      \"description\": \"The base path to the API. Example: '/api'.\"\n    },\n    \"schemes\": {\n      \"$ref\": \"#/definitions/schemesList\"\n    },\n    \"consumes\": {\n      \"description\": \"A list of MIME types accepted by the API.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/mediaTypeList\"\n        }\n      ]\n    },\n    \"produces\": {\n      \"description\": \"A list of MIME types the API can produce.\",\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/mediaTypeList\"\n        }\n      ]\n    },\n    \"paths\": {\n      \"$ref\": \"#/definitions/paths\"\n    },\n    \"definitions\": {\n      \"$ref\": \"#/definitions/definitions\"\n    },\n    \"parameters\": {\n      \"$ref\": \"#/definitions/parameterDefinitions\"\n    },\n    \"responses\": {\n      \"$ref\": \"#/definitions/responseDefinitions\"\n    },\n    \"security\": {\n      \"$ref\": \"#/definitions/security\"\n    },\n    \"securityDefinitions\": {\n      \"$ref\": \"#/definitions/securityDefinitions\"\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/tag\"\n      },\n      \"uniqueItems\": true\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/definitions/externalDocs\"\n    }\n  },\n  \"definitions\": {\n    \"info\": {\n      \"type\": \"object\",\n      \"description\": \"General information about the API.\",\n      \"required\": [\"version\", \"title\"],\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\",\n          \"description\": \"A unique and precise title of the API.\"\n        },\n        \"version\": {\n          \"type\": \"string\",\n          \"description\": \"A semantic version number of the API.\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"description\": \"The terms of service for the API.\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/definitions/contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/definitions/license\"\n        }\n      }\n    },\n    \"contact\": {\n      \"type\": \"object\",\n      \"description\": \"Contact information for the owners of the API.\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The identifying name of the contact person/organization.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"description\": \"The URL pointing to the contact information.\",\n          \"format\": \"uri\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"description\": \"The email address of the contact person/organization.\",\n          \"format\": \"email\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"license\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the license type. It's encouraged to use an OSI compatible license.\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"description\": \"The URL pointing to the license.\",\n          \"format\": \"uri\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"paths\": {\n      \"type\": \"object\",\n      \"description\": \"Relative paths to the individual endpoints. They must be relative to the 'basePath'.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        },\n        \"^/\": {\n          \"$ref\": \"#/definitions/pathItem\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/schema\"\n      },\n      \"description\": \"One or more JSON objects describing the schemas being consumed and produced by the API.\"\n    },\n    \"parameterDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/parameter\"\n      },\n      \"description\": \"One or more JSON representations for parameters\"\n    },\n    \"responseDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/response\"\n      },\n      \"description\": \"One or more JSON representations for responses\"\n    },\n    \"externalDocs\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"description\": \"information about external documentation\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"examples\": {\n      \"type\": \"object\",\n      \"additionalProperties\": true\n    },\n    \"mimeType\": {\n      \"type\": \"string\",\n      \"description\": \"The MIME type of the HTTP message.\"\n    },\n    \"operation\": {\n      \"type\": \"object\",\n      \"required\": [\"responses\"],\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"uniqueItems\": true\n        },\n        \"summary\": {\n          \"type\": \"string\",\n          \"description\": \"A brief summary of the operation.\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A longer description of the operation, GitHub Flavored Markdown is allowed.\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"operationId\": {\n          \"type\": \"string\",\n          \"description\": \"A unique identifier of the operation.\"\n        },\n        \"produces\": {\n          \"description\": \"A list of MIME types the API can produce.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/mediaTypeList\"\n            }\n          ]\n        },\n        \"consumes\": {\n          \"description\": \"A list of MIME types the API can consume.\",\n          \"allOf\": [\n            {\n              \"$ref\": \"#/definitions/mediaTypeList\"\n            }\n          ]\n        },\n        \"parameters\": {\n          \"$ref\": \"#/definitions/parametersList\"\n        },\n        \"responses\": {\n          \"$ref\": \"#/definitions/responses\"\n        },\n        \"schemes\": {\n          \"$ref\": \"#/definitions/schemesList\"\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"security\": {\n          \"$ref\": \"#/definitions/security\"\n        }\n      }\n    },\n    \"pathItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"get\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"put\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"post\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"delete\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"options\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"head\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"patch\": {\n          \"$ref\": \"#/definitions/operation\"\n        },\n        \"parameters\": {\n          \"$ref\": \"#/definitions/parametersList\"\n        }\n      }\n    },\n    \"responses\": {\n      \"type\": \"object\",\n      \"description\": \"Response objects names can either be any valid HTTP status code or 'default'.\",\n      \"minProperties\": 1,\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^([0-9]{3})$|^(default)$\": {\n          \"$ref\": \"#/definitions/responseValue\"\n        },\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"not\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"patternProperties\": {\n          \"^x-\": {\n            \"$ref\": \"#/definitions/vendorExtension\"\n          }\n        }\n      }\n    },\n    \"responseValue\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/response\"\n        },\n        {\n          \"$ref\": \"#/definitions/jsonReference\"\n        }\n      ]\n    },\n    \"response\": {\n      \"type\": \"object\",\n      \"required\": [\"description\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/fileSchema\"\n            }\n          ]\n        },\n        \"headers\": {\n          \"$ref\": \"#/definitions/headers\"\n        },\n        \"examples\": {\n          \"$ref\": \"#/definitions/examples\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"headers\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/header\"\n      }\n    },\n    \"header\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"integer\", \"boolean\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"vendorExtension\": {\n      \"description\": \"Any property starting with x- is valid.\",\n      \"additionalProperties\": true,\n      \"additionalItems\": true\n    },\n    \"bodyParameter\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"in\", \"schema\"],\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"body\"]\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"$ref\": \"#/definitions/schema\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"headerParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"header\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"queryParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"query\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"allows sending a parameter by name only or with an empty value.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormatWithMulti\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"formDataParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"description\": \"Determines whether or not this parameter is required or optional.\",\n          \"default\": false\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"formData\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false,\n          \"description\": \"allows sending a parameter by name only or with an empty value.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\", \"file\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormatWithMulti\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"pathParameterSubSchema\": {\n      \"additionalProperties\": false,\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"required\": [\"required\"],\n      \"properties\": {\n        \"required\": {\n          \"type\": \"boolean\",\n          \"enum\": [true],\n          \"description\": \"Determines whether or not this parameter is required or optional.\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"description\": \"Determines the location of the parameter.\",\n          \"enum\": [\"path\"]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the parameter.\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"boolean\", \"integer\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      }\n    },\n    \"nonBodyParameter\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"in\", \"type\"],\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/headerParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/formDataParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/queryParameterSubSchema\"\n        },\n        {\n          \"$ref\": \"#/definitions/pathParameterSubSchema\"\n        }\n      ]\n    },\n    \"parameter\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/bodyParameter\"\n        },\n        {\n          \"$ref\": \"#/definitions/nonBodyParameter\"\n        }\n      ]\n    },\n    \"schema\": {\n      \"type\": \"object\",\n      \"description\": \"A deterministic version of a JSON Schema object.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n        },\n        \"description\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n        },\n        \"default\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/multipleOf\"\n        },\n        \"maximum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minLength\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"pattern\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/uniqueItems\"\n        },\n        \"maxProperties\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n        },\n        \"minProperties\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n        },\n        \"required\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/stringArray\"\n        },\n        \"enum\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/enum\"\n        },\n        \"additionalProperties\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"type\": \"boolean\"\n            }\n          ],\n          \"default\": {}\n        },\n        \"type\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/type\"\n        },\n        \"items\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/definitions/schema\"\n            },\n            {\n              \"type\": \"array\",\n              \"minItems\": 1,\n              \"items\": {\n                \"$ref\": \"#/definitions/schema\"\n              }\n            }\n          ],\n          \"default\": {}\n        },\n        \"allOf\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"$ref\": \"#/definitions/schema\"\n          }\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/schema\"\n          },\n          \"default\": {}\n        },\n        \"discriminator\": {\n          \"type\": \"string\"\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"xml\": {\n          \"$ref\": \"#/definitions/xml\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"example\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"fileSchema\": {\n      \"type\": \"object\",\n      \"description\": \"A deterministic version of a JSON Schema object.\",\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      },\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n        },\n        \"description\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n        },\n        \"default\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n        },\n        \"required\": {\n          \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/stringArray\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"file\"]\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        },\n        \"example\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"primitivesItems\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"string\", \"number\", \"integer\", \"boolean\", \"array\"]\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"items\": {\n          \"$ref\": \"#/definitions/primitivesItems\"\n        },\n        \"collectionFormat\": {\n          \"$ref\": \"#/definitions/collectionFormat\"\n        },\n        \"default\": {\n          \"$ref\": \"#/definitions/default\"\n        },\n        \"maximum\": {\n          \"$ref\": \"#/definitions/maximum\"\n        },\n        \"exclusiveMaximum\": {\n          \"$ref\": \"#/definitions/exclusiveMaximum\"\n        },\n        \"minimum\": {\n          \"$ref\": \"#/definitions/minimum\"\n        },\n        \"exclusiveMinimum\": {\n          \"$ref\": \"#/definitions/exclusiveMinimum\"\n        },\n        \"maxLength\": {\n          \"$ref\": \"#/definitions/maxLength\"\n        },\n        \"minLength\": {\n          \"$ref\": \"#/definitions/minLength\"\n        },\n        \"pattern\": {\n          \"$ref\": \"#/definitions/pattern\"\n        },\n        \"maxItems\": {\n          \"$ref\": \"#/definitions/maxItems\"\n        },\n        \"minItems\": {\n          \"$ref\": \"#/definitions/minItems\"\n        },\n        \"uniqueItems\": {\n          \"$ref\": \"#/definitions/uniqueItems\"\n        },\n        \"enum\": {\n          \"$ref\": \"#/definitions/enum\"\n        },\n        \"multipleOf\": {\n          \"$ref\": \"#/definitions/multipleOf\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/securityRequirement\"\n      },\n      \"uniqueItems\": true\n    },\n    \"securityRequirement\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        },\n        \"uniqueItems\": true\n      }\n    },\n    \"xml\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\"\n        },\n        \"prefix\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"wrapped\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"tag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/externalDocs\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"securityDefinitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/definitions/basicAuthenticationSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/apiKeySecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2ImplicitSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2PasswordSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2ApplicationSecurity\"\n          },\n          {\n            \"$ref\": \"#/definitions/oauth2AccessCodeSecurity\"\n          }\n        ]\n      }\n    },\n    \"basicAuthenticationSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"basic\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"apiKeySecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"name\", \"in\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"apiKey\"]\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"enum\": [\"header\", \"query\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2ImplicitSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"authorizationUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"implicit\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2PasswordSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"password\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2ApplicationSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"application\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2AccessCodeSecurity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"flow\", \"authorizationUrl\", \"tokenUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flow\": {\n          \"type\": \"string\",\n          \"enum\": [\"accessCode\"]\n        },\n        \"scopes\": {\n          \"$ref\": \"#/definitions/oauth2Scopes\"\n        },\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {\n          \"$ref\": \"#/definitions/vendorExtension\"\n        }\n      }\n    },\n    \"oauth2Scopes\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      }\n    },\n    \"mediaTypeList\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/mimeType\"\n      },\n      \"uniqueItems\": true\n    },\n    \"parametersList\": {\n      \"type\": \"array\",\n      \"description\": \"The parameters needed to send a valid API call.\",\n      \"additionalItems\": false,\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/definitions/parameter\"\n          },\n          {\n            \"$ref\": \"#/definitions/jsonReference\"\n          }\n        ]\n      },\n      \"uniqueItems\": true\n    },\n    \"schemesList\": {\n      \"type\": \"array\",\n      \"description\": \"The transfer protocol of the API.\",\n      \"items\": {\n        \"type\": \"string\",\n        \"enum\": [\"http\", \"https\", \"ws\", \"wss\"]\n      },\n      \"uniqueItems\": true\n    },\n    \"collectionFormat\": {\n      \"type\": \"string\",\n      \"enum\": [\"csv\", \"ssv\", \"tsv\", \"pipes\"],\n      \"default\": \"csv\"\n    },\n    \"collectionFormatWithMulti\": {\n      \"type\": \"string\",\n      \"enum\": [\"csv\", \"ssv\", \"tsv\", \"pipes\", \"multi\"],\n      \"default\": \"csv\"\n    },\n    \"title\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/title\"\n    },\n    \"description\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/description\"\n    },\n    \"default\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/default\"\n    },\n    \"multipleOf\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/multipleOf\"\n    },\n    \"maximum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/maximum\"\n    },\n    \"exclusiveMaximum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum\"\n    },\n    \"minimum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/minimum\"\n    },\n    \"exclusiveMinimum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum\"\n    },\n    \"maxLength\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n    },\n    \"minLength\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n    },\n    \"pattern\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/pattern\"\n    },\n    \"maxItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveInteger\"\n    },\n    \"minItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0\"\n    },\n    \"uniqueItems\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/uniqueItems\"\n    },\n    \"enum\": {\n      \"$ref\": \"http://json-schema.org/draft-04/schema#/properties/enum\"\n    },\n    \"jsonReference\": {\n      \"type\": \"object\",\n      \"required\": [\"$ref\"],\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n", "export default {\n  \"id\": \"https://spec.openapis.org/oas/3.0/schema/2021-09-28\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"description\": \"The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3\",\n  \"type\": \"object\",\n  \"required\": [\"openapi\", \"info\", \"paths\"],\n  \"properties\": {\n    \"openapi\": {\n      \"type\": \"string\",\n      \"pattern\": \"^3\\\\.0\\\\.\\\\d(-.+)?$\"\n    },\n    \"info\": {\n      \"$ref\": \"#/definitions/Info\"\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/definitions/ExternalDocumentation\"\n    },\n    \"servers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/Server\"\n      }\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/SecurityRequirement\"\n      }\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/Tag\"\n      },\n      \"uniqueItems\": true\n    },\n    \"paths\": {\n      \"$ref\": \"#/definitions/Paths\"\n    },\n    \"components\": {\n      \"$ref\": \"#/definitions/Components\"\n    }\n  },\n  \"patternProperties\": {\n    \"^x-\": {}\n  },\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"Reference\": {\n      \"type\": \"object\",\n      \"required\": [\"$ref\"],\n      \"patternProperties\": {\n        \"^\\\\$ref$\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      }\n    },\n    \"Info\": {\n      \"type\": \"object\",\n      \"required\": [\"title\", \"version\"],\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/definitions/Contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/definitions/License\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Contact\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"License\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Server\": {\n      \"type\": \"object\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"variables\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ServerVariable\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ServerVariable\": {\n      \"type\": \"object\",\n      \"required\": [\"default\"],\n      \"properties\": {\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"default\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Components\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"schemas\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Schema\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                }\n              ]\n            }\n          }\n        },\n        \"responses\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Response\"\n                }\n              ]\n            }\n          }\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Parameter\"\n                }\n              ]\n            }\n          }\n        },\n        \"examples\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Example\"\n                }\n              ]\n            }\n          }\n        },\n        \"requestBodies\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/RequestBody\"\n                }\n              ]\n            }\n          }\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Header\"\n                }\n              ]\n            }\n          }\n        },\n        \"securitySchemes\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/SecurityScheme\"\n                }\n              ]\n            }\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Link\"\n                }\n              ]\n            }\n          }\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^[a-zA-Z0-9\\\\.\\\\-_]+$\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/definitions/Reference\"\n                },\n                {\n                  \"$ref\": \"#/definitions/Callback\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"multipleOf\": {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"exclusiveMinimum\": true\n        },\n        \"maximum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMaximum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"minimum\": {\n          \"type\": \"number\"\n        },\n        \"exclusiveMinimum\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxLength\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minLength\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"pattern\": {\n          \"type\": \"string\",\n          \"format\": \"regex\"\n        },\n        \"maxItems\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minItems\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"uniqueItems\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"maxProperties\": {\n          \"type\": \"integer\",\n          \"minimum\": 0\n        },\n        \"minProperties\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"default\": 0\n        },\n        \"required\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {},\n          \"minItems\": 1,\n          \"uniqueItems\": false\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"array\", \"boolean\", \"integer\", \"number\", \"object\", \"string\"]\n        },\n        \"not\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"allOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"oneOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"anyOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"items\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Schema\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"additionalProperties\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            },\n            {\n              \"type\": \"boolean\"\n            }\n          ],\n          \"default\": true\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"format\": {\n          \"type\": \"string\"\n        },\n        \"default\": {},\n        \"nullable\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"discriminator\": {\n          \"$ref\": \"#/definitions/Discriminator\"\n        },\n        \"readOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"writeOnly\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"example\": {},\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"xml\": {\n          \"$ref\": \"#/definitions/XML\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Discriminator\": {\n      \"type\": \"object\",\n      \"required\": [\"propertyName\"],\n      \"properties\": {\n        \"propertyName\": {\n          \"type\": \"string\"\n        },\n        \"mapping\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"XML\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\",\n          \"format\": \"uri\"\n        },\n        \"prefix\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"wrapped\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Response\": {\n      \"type\": \"object\",\n      \"required\": [\"description\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Header\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Link\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"MediaType\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"encoding\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/Encoding\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        }\n      ]\n    },\n    \"Example\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"value\": {},\n        \"externalValue\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Header\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"style\": {\n          \"type\": \"string\",\n          \"enum\": [\"simple\"],\n          \"default\": \"simple\"\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          },\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        },\n        {\n          \"$ref\": \"#/definitions/SchemaXORContent\"\n        }\n      ]\n    },\n    \"Paths\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^\\\\/\": {\n          \"$ref\": \"#/definitions/PathItem\"\n        },\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"PathItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Server\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Parameter\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          },\n          \"uniqueItems\": true\n        }\n      },\n      \"patternProperties\": {\n        \"^(get|put|post|delete|options|head|patch|trace)$\": {\n          \"$ref\": \"#/definitions/Operation\"\n        },\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Operation\": {\n      \"type\": \"object\",\n      \"required\": [\"responses\"],\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Parameter\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          },\n          \"uniqueItems\": true\n        },\n        \"requestBody\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/RequestBody\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"responses\": {\n          \"$ref\": \"#/definitions/Responses\"\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Callback\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"security\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/SecurityRequirement\"\n          }\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Server\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Responses\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"default\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Response\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        }\n      },\n      \"patternProperties\": {\n        \"^[1-5](?:\\\\d{2}|XX)$\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Response\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"^x-\": {}\n      },\n      \"minProperties\": 1,\n      \"additionalProperties\": false\n    },\n    \"SecurityRequirement\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Tag\": {\n      \"type\": \"object\",\n      \"required\": [\"name\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/definitions/ExternalDocumentation\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ExternalDocumentation\": {\n      \"type\": \"object\",\n      \"required\": [\"url\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ExampleXORExamples\": {\n      \"description\": \"Example and examples are mutually exclusive\",\n      \"not\": {\n        \"required\": [\"example\", \"examples\"]\n      }\n    },\n    \"SchemaXORContent\": {\n      \"description\": \"Schema and content are mutually exclusive, at least one is required\",\n      \"not\": {\n        \"required\": [\"schema\", \"content\"]\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"],\n          \"description\": \"Some properties are not allowed if content is present\",\n          \"allOf\": [\n            {\n              \"not\": {\n                \"required\": [\"style\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"explode\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"allowReserved\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"example\"]\n              }\n            },\n            {\n              \"not\": {\n                \"required\": [\"examples\"]\n              }\n            }\n          ]\n        }\n      ]\n    },\n    \"Parameter\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"deprecated\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"allowEmptyValue\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"style\": {\n          \"type\": \"string\"\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Schema\"\n            },\n            {\n              \"$ref\": \"#/definitions/Reference\"\n            }\n          ]\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          },\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        },\n        \"example\": {},\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Example\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"name\", \"in\"],\n      \"allOf\": [\n        {\n          \"$ref\": \"#/definitions/ExampleXORExamples\"\n        },\n        {\n          \"$ref\": \"#/definitions/SchemaXORContent\"\n        },\n        {\n          \"$ref\": \"#/definitions/ParameterLocation\"\n        }\n      ]\n    },\n    \"ParameterLocation\": {\n      \"description\": \"Parameter location\",\n      \"oneOf\": [\n        {\n          \"description\": \"Parameter in path\",\n          \"required\": [\"required\"],\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"path\"]\n            },\n            \"style\": {\n              \"enum\": [\"matrix\", \"label\", \"simple\"],\n              \"default\": \"simple\"\n            },\n            \"required\": {\n              \"enum\": [true]\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in query\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"query\"]\n            },\n            \"style\": {\n              \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"],\n              \"default\": \"form\"\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in header\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"header\"]\n            },\n            \"style\": {\n              \"enum\": [\"simple\"],\n              \"default\": \"simple\"\n            }\n          }\n        },\n        {\n          \"description\": \"Parameter in cookie\",\n          \"properties\": {\n            \"in\": {\n              \"enum\": [\"cookie\"]\n            },\n            \"style\": {\n              \"enum\": [\"form\"],\n              \"default\": \"form\"\n            }\n          }\n        }\n      ]\n    },\n    \"RequestBody\": {\n      \"type\": \"object\",\n      \"required\": [\"content\"],\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/MediaType\"\n          }\n        },\n        \"required\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"SecurityScheme\": {\n      \"oneOf\": [\n        {\n          \"$ref\": \"#/definitions/APIKeySecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/HTTPSecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/OAuth2SecurityScheme\"\n        },\n        {\n          \"$ref\": \"#/definitions/OpenIdConnectSecurityScheme\"\n        }\n      ]\n    },\n    \"APIKeySecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"name\", \"in\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"apiKey\"]\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"type\": \"string\",\n          \"enum\": [\"header\", \"query\", \"cookie\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"HTTPSecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"scheme\", \"type\"],\n      \"properties\": {\n        \"scheme\": {\n          \"type\": \"string\"\n        },\n        \"bearerFormat\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"http\"]\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"oneOf\": [\n        {\n          \"description\": \"Bearer\",\n          \"properties\": {\n            \"scheme\": {\n              \"type\": \"string\",\n              \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n            }\n          }\n        },\n        {\n          \"description\": \"Non Bearer\",\n          \"not\": {\n            \"required\": [\"bearerFormat\"]\n          },\n          \"properties\": {\n            \"scheme\": {\n              \"not\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n              }\n            }\n          }\n        }\n      ]\n    },\n    \"OAuth2SecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"flows\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"oauth2\"]\n        },\n        \"flows\": {\n          \"$ref\": \"#/definitions/OAuthFlows\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"OpenIdConnectSecurityScheme\": {\n      \"type\": \"object\",\n      \"required\": [\"type\", \"openIdConnectUrl\"],\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\"openIdConnect\"]\n        },\n        \"openIdConnectUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"OAuthFlows\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"implicit\": {\n          \"$ref\": \"#/definitions/ImplicitOAuthFlow\"\n        },\n        \"password\": {\n          \"$ref\": \"#/definitions/PasswordOAuthFlow\"\n        },\n        \"clientCredentials\": {\n          \"$ref\": \"#/definitions/ClientCredentialsFlow\"\n        },\n        \"authorizationCode\": {\n          \"$ref\": \"#/definitions/AuthorizationCodeOAuthFlow\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ImplicitOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"authorizationUrl\", \"scopes\"],\n      \"properties\": {\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"PasswordOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"ClientCredentialsFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"AuthorizationCodeOAuthFlow\": {\n      \"type\": \"object\",\n      \"required\": [\"authorizationUrl\", \"tokenUrl\", \"scopes\"],\n      \"properties\": {\n        \"authorizationUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"tokenUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"refreshUrl\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"scopes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false\n    },\n    \"Link\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"operationRef\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {}\n        },\n        \"requestBody\": {},\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"server\": {\n          \"$ref\": \"#/definitions/Server\"\n        }\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      },\n      \"additionalProperties\": false,\n      \"not\": {\n        \"description\": \"Operation Id and Operation Ref are mutually exclusive\",\n        \"required\": [\"operationId\", \"operationRef\"]\n      }\n    },\n    \"Callback\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/PathItem\"\n      },\n      \"patternProperties\": {\n        \"^x-\": {}\n      }\n    },\n    \"Encoding\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"contentType\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/Header\"\n              },\n              {\n                \"$ref\": \"#/definitions/Reference\"\n              }\n            ]\n          }\n        },\n        \"style\": {\n          \"type\": \"string\",\n          \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n", "export default {\n  \"$id\": \"https://spec.openapis.org/oas/3.1/schema/2022-10-07\",\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"description\": \"The description of OpenAPI v3.1.x documents without schema validation, as defined by https://spec.openapis.org/oas/v3.1.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"openapi\": {\n      \"type\": \"string\",\n      \"pattern\": \"^3\\\\.1\\\\.\\\\d+(-.+)?$\"\n    },\n    \"info\": {\n      \"$ref\": \"#/$defs/info\"\n    },\n    \"jsonSchemaDialect\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\",\n      \"default\": \"https://spec.openapis.org/oas/3.1/dialect/base\"\n    },\n    \"servers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/server\"\n      },\n      \"default\": [\n        {\n          \"url\": \"/\"\n        }\n      ]\n    },\n    \"paths\": {\n      \"$ref\": \"#/$defs/paths\"\n    },\n    \"webhooks\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/path-item-or-reference\"\n      }\n    },\n    \"components\": {\n      \"$ref\": \"#/$defs/components\"\n    },\n    \"security\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/security-requirement\"\n      }\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/$defs/tag\"\n      }\n    },\n    \"externalDocs\": {\n      \"$ref\": \"#/$defs/external-documentation\"\n    }\n  },\n  \"required\": [\"openapi\", \"info\"],\n  \"anyOf\": [\n    {\n      \"required\": [\"paths\"]\n    },\n    {\n      \"required\": [\"components\"]\n    },\n    {\n      \"required\": [\"webhooks\"]\n    }\n  ],\n  \"$ref\": \"#/$defs/specification-extensions\",\n  \"unevaluatedProperties\": false,\n  \"$defs\": {\n    \"info\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#info-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"termsOfService\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"contact\": {\n          \"$ref\": \"#/$defs/contact\"\n        },\n        \"license\": {\n          \"$ref\": \"#/$defs/license\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"title\", \"version\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"contact\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#contact-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"format\": \"email\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"license\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#license-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"identifier\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"required\": [\"name\"],\n      \"dependentSchemas\": {\n        \"identifier\": {\n          \"not\": {\n            \"required\": [\"url\"]\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"server\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#server-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"variables\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/server-variable\"\n          }\n        }\n      },\n      \"required\": [\"url\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"server-variable\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#server-variable-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"enum\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"minItems\": 1\n        },\n        \"default\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"default\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"components\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#components-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"schemas\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/schema\"\n          }\n        },\n        \"responses\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/response-or-reference\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/example-or-reference\"\n          }\n        },\n        \"requestBodies\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/request-body-or-reference\"\n          }\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"securitySchemes\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/security-scheme-or-reference\"\n          }\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/link-or-reference\"\n          }\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/callbacks-or-reference\"\n          }\n        },\n        \"pathItems\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/path-item-or-reference\"\n          }\n        }\n      },\n      \"patternProperties\": {\n        \"^(schemas|responses|parameters|examples|requestBodies|headers|securitySchemes|links|callbacks|pathItems)$\": {\n          \"$comment\": \"Enumerating all of the property names in the regex above is necessary for unevaluatedProperties to work as expected\",\n          \"propertyNames\": {\n            \"pattern\": \"^[a-zA-Z0-9._-]+$\"\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"paths\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#paths-object\",\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^/\": {\n          \"$ref\": \"#/$defs/path-item\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"path-item\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#path-item-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/server\"\n          }\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"get\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"put\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"post\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"delete\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"options\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"head\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"patch\": {\n          \"$ref\": \"#/$defs/operation\"\n        },\n        \"trace\": {\n          \"$ref\": \"#/$defs/operation\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"path-item-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/path-item\"\n      }\n    },\n    \"operation\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#operation-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/$defs/external-documentation\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/parameter-or-reference\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/$defs/request-body-or-reference\"\n        },\n        \"responses\": {\n          \"$ref\": \"#/$defs/responses\"\n        },\n        \"callbacks\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/callbacks-or-reference\"\n          }\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"security\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/security-requirement\"\n          }\n        },\n        \"servers\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/$defs/server\"\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"external-documentation\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#external-documentation-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"url\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"required\": [\"url\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"parameter\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#parameter-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"in\": {\n          \"enum\": [\"query\", \"header\", \"path\", \"cookie\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\",\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        }\n      },\n      \"required\": [\"name\", \"in\"],\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"]\n        }\n      ],\n      \"if\": {\n        \"properties\": {\n          \"in\": {\n            \"const\": \"query\"\n          }\n        },\n        \"required\": [\"in\"]\n      },\n      \"then\": {\n        \"properties\": {\n          \"allowEmptyValue\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"dependentSchemas\": {\n        \"schema\": {\n          \"properties\": {\n            \"style\": {\n              \"type\": \"string\"\n            },\n            \"explode\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"allOf\": [\n            {\n              \"$ref\": \"#/$defs/examples\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-path\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-header\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-query\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-cookie\"\n            },\n            {\n              \"$ref\": \"#/$defs/parameter/dependentSchemas/schema/$defs/styles-for-form\"\n            }\n          ],\n          \"$defs\": {\n            \"styles-for-path\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"path\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"name\": {\n                    \"pattern\": \"[^/#?]+$\"\n                  },\n                  \"style\": {\n                    \"default\": \"simple\",\n                    \"enum\": [\"matrix\", \"label\", \"simple\"]\n                  },\n                  \"required\": {\n                    \"const\": true\n                  }\n                },\n                \"required\": [\"required\"]\n              }\n            },\n            \"styles-for-header\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"header\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"simple\",\n                    \"const\": \"simple\"\n                  }\n                }\n              }\n            },\n            \"styles-for-query\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"query\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"form\",\n                    \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n                  },\n                  \"allowReserved\": {\n                    \"default\": false,\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            },\n            \"styles-for-cookie\": {\n              \"if\": {\n                \"properties\": {\n                  \"in\": {\n                    \"const\": \"cookie\"\n                  }\n                },\n                \"required\": [\"in\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"style\": {\n                    \"default\": \"form\",\n                    \"const\": \"form\"\n                  }\n                }\n              }\n            },\n            \"styles-for-form\": {\n              \"if\": {\n                \"properties\": {\n                  \"style\": {\n                    \"const\": \"form\"\n                  }\n                },\n                \"required\": [\"style\"]\n              },\n              \"then\": {\n                \"properties\": {\n                  \"explode\": {\n                    \"default\": true\n                  }\n                }\n              },\n              \"else\": {\n                \"properties\": {\n                  \"explode\": {\n                    \"default\": false\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"parameter-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/parameter\"\n      }\n    },\n    \"request-body\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#request-body-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\"content\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"request-body-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/request-body\"\n      }\n    },\n    \"content\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#fixed-fields-10\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/media-type\"\n      },\n      \"propertyNames\": {\n        \"format\": \"media-range\"\n      }\n    },\n    \"media-type\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#media-type-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"encoding\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/encoding\"\n          }\n        }\n      },\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/examples\"\n        }\n      ],\n      \"unevaluatedProperties\": false\n    },\n    \"encoding\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#encoding-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"contentType\": {\n          \"type\": \"string\",\n          \"format\": \"media-range\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"style\": {\n          \"default\": \"form\",\n          \"enum\": [\"form\", \"spaceDelimited\", \"pipeDelimited\", \"deepObject\"]\n        },\n        \"explode\": {\n          \"type\": \"boolean\"\n        },\n        \"allowReserved\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        }\n      },\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/encoding/$defs/explode-default\"\n        }\n      ],\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"explode-default\": {\n          \"if\": {\n            \"properties\": {\n              \"style\": {\n                \"const\": \"form\"\n              }\n            },\n            \"required\": [\"style\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"explode\": {\n                \"default\": true\n              }\n            }\n          },\n          \"else\": {\n            \"properties\": {\n              \"explode\": {\n                \"default\": false\n              }\n            }\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#responses-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"default\": {\n          \"$ref\": \"#/$defs/response-or-reference\"\n        }\n      },\n      \"patternProperties\": {\n        \"^[1-5](?:[0-9]{2}|XX)$\": {\n          \"$ref\": \"#/$defs/response-or-reference\"\n        }\n      },\n      \"minProperties\": 1,\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"response\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#response-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"headers\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/header-or-reference\"\n          }\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\"\n        },\n        \"links\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/link-or-reference\"\n          }\n        }\n      },\n      \"required\": [\"description\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"response-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/response\"\n      }\n    },\n    \"callbacks\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#callback-object\",\n      \"type\": \"object\",\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/$defs/path-item-or-reference\"\n      }\n    },\n    \"callbacks-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/callbacks\"\n      }\n    },\n    \"example\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#example-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"value\": true,\n        \"externalValue\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        }\n      },\n      \"not\": {\n        \"required\": [\"value\", \"externalValue\"]\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"example-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/example\"\n      }\n    },\n    \"link\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#link-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"operationRef\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"operationId\": {\n          \"type\": \"string\"\n        },\n        \"parameters\": {\n          \"$ref\": \"#/$defs/map-of-strings\"\n        },\n        \"requestBody\": true,\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"body\": {\n          \"$ref\": \"#/$defs/server\"\n        }\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"operationRef\"]\n        },\n        {\n          \"required\": [\"operationId\"]\n        }\n      ],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"link-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/link\"\n      }\n    },\n    \"header\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#header-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"required\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"deprecated\": {\n          \"default\": false,\n          \"type\": \"boolean\"\n        },\n        \"schema\": {\n          \"$ref\": \"#/$defs/schema\"\n        },\n        \"content\": {\n          \"$ref\": \"#/$defs/content\",\n          \"minProperties\": 1,\n          \"maxProperties\": 1\n        }\n      },\n      \"oneOf\": [\n        {\n          \"required\": [\"schema\"]\n        },\n        {\n          \"required\": [\"content\"]\n        }\n      ],\n      \"dependentSchemas\": {\n        \"schema\": {\n          \"properties\": {\n            \"style\": {\n              \"default\": \"simple\",\n              \"const\": \"simple\"\n            },\n            \"explode\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          \"$ref\": \"#/$defs/examples\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"header-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/header\"\n      }\n    },\n    \"tag\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#tag-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"externalDocs\": {\n          \"$ref\": \"#/$defs/external-documentation\"\n        }\n      },\n      \"required\": [\"name\"],\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false\n    },\n    \"reference\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#reference-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"$ref\": {\n          \"type\": \"string\",\n          \"format\": \"uri-reference\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"unevaluatedProperties\": false\n    },\n    \"schema\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#schema-object\",\n      \"$dynamicAnchor\": \"meta\",\n      \"type\": [\"object\", \"boolean\"]\n    },\n    \"security-scheme\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#security-scheme-object\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"enum\": [\"apiKey\", \"http\", \"mutualTLS\", \"oauth2\", \"openIdConnect\"]\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"type\"],\n      \"allOf\": [\n        {\n          \"$ref\": \"#/$defs/specification-extensions\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-apikey\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-http\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-http-bearer\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-oauth2\"\n        },\n        {\n          \"$ref\": \"#/$defs/security-scheme/$defs/type-oidc\"\n        }\n      ],\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"type-apikey\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"apiKey\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"in\": {\n                \"enum\": [\"query\", \"header\", \"cookie\"]\n              }\n            },\n            \"required\": [\"name\", \"in\"]\n          }\n        },\n        \"type-http\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"http\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"scheme\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\"scheme\"]\n          }\n        },\n        \"type-http-bearer\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"http\"\n              },\n              \"scheme\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[Bb][Ee][Aa][Rr][Ee][Rr]$\"\n              }\n            },\n            \"required\": [\"type\", \"scheme\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"bearerFormat\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"type-oauth2\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"oauth2\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"flows\": {\n                \"$ref\": \"#/$defs/oauth-flows\"\n              }\n            },\n            \"required\": [\"flows\"]\n          }\n        },\n        \"type-oidc\": {\n          \"if\": {\n            \"properties\": {\n              \"type\": {\n                \"const\": \"openIdConnect\"\n              }\n            },\n            \"required\": [\"type\"]\n          },\n          \"then\": {\n            \"properties\": {\n              \"openIdConnectUrl\": {\n                \"type\": \"string\",\n                \"format\": \"uri-reference\"\n              }\n            },\n            \"required\": [\"openIdConnectUrl\"]\n          }\n        }\n      }\n    },\n    \"security-scheme-or-reference\": {\n      \"if\": {\n        \"type\": \"object\",\n        \"required\": [\"$ref\"]\n      },\n      \"then\": {\n        \"$ref\": \"#/$defs/reference\"\n      },\n      \"else\": {\n        \"$ref\": \"#/$defs/security-scheme\"\n      }\n    },\n    \"oauth-flows\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"implicit\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/implicit\"\n        },\n        \"password\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/password\"\n        },\n        \"clientCredentials\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/client-credentials\"\n        },\n        \"authorizationCode\": {\n          \"$ref\": \"#/$defs/oauth-flows/$defs/authorization-code\"\n        }\n      },\n      \"$ref\": \"#/$defs/specification-extensions\",\n      \"unevaluatedProperties\": false,\n      \"$defs\": {\n        \"implicit\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"authorizationUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"authorizationUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"password\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"client-credentials\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        },\n        \"authorization-code\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"authorizationUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"tokenUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"refreshUrl\": {\n              \"type\": \"string\",\n              \"format\": \"uri-reference\"\n            },\n            \"scopes\": {\n              \"$ref\": \"#/$defs/map-of-strings\"\n            }\n          },\n          \"required\": [\"authorizationUrl\", \"tokenUrl\", \"scopes\"],\n          \"$ref\": \"#/$defs/specification-extensions\",\n          \"unevaluatedProperties\": false\n        }\n      }\n    },\n    \"security-requirement\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#security-requirement-object\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"specification-extensions\": {\n      \"$comment\": \"https://spec.openapis.org/oas/v3.1.0#specification-extensions\",\n      \"patternProperties\": {\n        \"^x-\": true\n      }\n    },\n    \"examples\": {\n      \"properties\": {\n        \"example\": true,\n        \"examples\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/$defs/example-or-reference\"\n          }\n        }\n      }\n    },\n    \"map-of-strings\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n", "import Swagger20 from '@/schemas/v2.0/schema'\nimport OpenApi30 from '@/schemas/v3.0/schema'\nimport OpenApi31 from '@/schemas/v3.1/schema'\n\n/**\n * A list of the supported OpenAPI specifications\n */\nexport const OpenApiSpecifications = {\n  '2.0': Swagger20,\n  '3.0': OpenApi30,\n  '3.1': OpenApi31,\n}\n\nexport type OpenApiVersion = keyof typeof OpenApiSpecifications\n\nexport const OpenApiVersions = Object.keys(OpenApiSpecifications) as OpenApiVersion[]\n\n/**\n * List of error messages used in the Validator\n */\nexport const ERRORS = {\n  EMPTY_OR_INVALID: 'Can\u2019t find JSON, YAML or filename in data.',\n  // URI_MUST_BE_STRING: 'uri parameter or $id attribute must be a string',\n  OPENAPI_VERSION_NOT_SUPPORTED:\n    'Can\u2019t find supported Swagger/OpenAPI version in the provided document, version must be a string.',\n  INVALID_REFERENCE: 'Can\u2019t resolve reference: %s',\n  EXTERNAL_REFERENCE_NOT_FOUND: 'Can\u2019t resolve external reference: %s',\n  FILE_DOES_NOT_EXIST: 'File does not exist: %s',\n  NO_CONTENT: 'No content found',\n} as const\n\nexport type ValidationError = keyof typeof ERRORS\n", "/**\n * Check if the given value is an object\n */\nexport const isObject = (obj: any) => typeof obj === 'object' && !Array.isArray(obj) && obj !== null\n", "import { OpenApiVersions } from '@/configuration'\nimport type { DetailsResult } from '@/types/index'\nimport { isObject } from './is-object'\n\n/**\n * Get versions of the OpenAPI document.\n */\nexport function details(specification: unknown): DetailsResult {\n  if (specification === null) {\n    return {\n      version: undefined,\n      specificationType: undefined,\n      specificationVersion: undefined,\n    }\n  }\n\n  if (isObject(specification)) {\n    for (const version of new Set(OpenApiVersions)) {\n      const specificationType = version === '2.0' ? 'swagger' : 'openapi'\n      const value = specification[specificationType]\n\n      if (typeof value === 'string' && value.startsWith(version)) {\n        return {\n          version: version,\n          specificationType,\n          specificationVersion: value,\n        }\n      }\n    }\n  }\n\n  return {\n    version: undefined,\n    specificationType: undefined,\n    specificationVersion: undefined,\n  }\n}\n", "import type { Filesystem, FilesystemEntry } from '@/types/index'\n\n/**\n * Return just the entrypoint of the filesystem.\n */\nexport function getEntrypoint(filesystem?: Filesystem): FilesystemEntry | undefined {\n  return filesystem?.find((file) => file.isEntrypoint)\n}\n", "import type { AnyObject } from '@/types/index'\nimport type { UnknownObject } from '@scalar/types/utils'\n\n/**\n * Recursively traverses the content and applies the transform function to each node.\n */\nexport function traverse(\n  content: UnknownObject,\n  transform: (content: UnknownObject, path?: string[]) => UnknownObject,\n  path: string[] = [],\n) {\n  const result: AnyObject = {}\n\n  for (const [key, value] of Object.entries(content)) {\n    const currentPath = [...path, key]\n\n    if (Array.isArray(value)) {\n      result[key] = value.map((item, index) => {\n        if (typeof item === 'object' && !Array.isArray(item) && item !== null) {\n          return traverse(item, transform, [...currentPath, index.toString()])\n        }\n\n        return item\n      })\n\n      continue\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      result[key] = traverse(value as UnknownObject, transform, currentPath)\n\n      continue\n    }\n\n    result[key] = value\n  }\n\n  return transform(result, path)\n}\n", "import type { AnyObject } from '@/types/index'\nimport { traverse } from './traverse'\n\n/**\n * Walks through the specification and returns all references as an array.\n *\n * Warning: Doesn\u2019t return internal references.\n */\nexport function getListOfReferences(specification: AnyObject) {\n  const references: string[] = []\n\n  // Make sure we\u2019re dealing with an object\n  if (!specification || typeof specification !== 'object') {\n    return references\n  }\n\n  // Traverse the specification and collect all references\n  traverse(specification, (value: any) => {\n    if (value.$ref && typeof value.$ref === 'string' && !value.$ref.startsWith('#')) {\n      references.push(value.$ref.split('#')[0])\n    }\n\n    return value\n  })\n\n  // Remove duplicates\n  return [...new Set(references)]\n}\n", "import type { Filesystem } from '@/types'\n\n/**\n * Check if the value is a filesystem\n */\nexport function isFilesystem(value: any): value is Filesystem {\n  return (\n    typeof value !== 'undefined' &&\n    Array.isArray(value) &&\n    value.length > 0 &&\n    value.some((file) => file.isEntrypoint === true)\n  )\n}\n", "import type { UnknownObject } from '@scalar/types/utils'\nimport { parse } from 'yaml'\n\nimport type { Filesystem } from '@/types/index'\nimport { isFilesystem } from './is-filesystem'\n\n/**\n * Normalize the OpenAPI document (YAML, JSON, object) to a JavaScript object.\n *\n * Doesn\u2019t modify the object if it\u2019s a `Filesystem` (multiple files) already.\n */\nexport function normalize(content: string | UnknownObject | Filesystem): UnknownObject | Filesystem {\n  if (content === null) {\n    return undefined\n  }\n\n  if (typeof content === 'string') {\n    if (content.trim() === '') {\n      return undefined\n    }\n\n    try {\n      return JSON.parse(content)\n    } catch (_error) {\n      // Does it look like YAML?\n      const hasColon = /^[^:]+:/.test(content)\n      const isJson = content.slice(0, 50).trimStart().startsWith('{')\n\n      if (!hasColon || isJson) {\n        return undefined\n      }\n\n      return parse(content, {\n        maxAliasCount: 10000,\n      })\n    }\n  }\n\n  if (isFilesystem(content)) {\n    return content\n  }\n\n  return content\n}\n", "import type { AnyObject, Filesystem, FilesystemEntry } from '@/types/index'\nimport { getListOfReferences } from './get-list-of-references'\nimport { isFilesystem } from './is-filesystem'\nimport { normalize } from './normalize'\n\nexport function makeFilesystem(\n  value: string | AnyObject | Filesystem,\n  overwrites: Partial<FilesystemEntry> = {},\n): Filesystem {\n  // Keep as is\n  if (isFilesystem(value)) {\n    return value as Filesystem\n  }\n\n  // Make an object\n  const specification = normalize(value)\n\n  // Create fake filesystem\n  return [\n    {\n      isEntrypoint: true,\n      specification,\n      filename: null,\n      dir: './',\n      references: getListOfReferences(specification),\n      ...overwrites,\n    },\n  ]\n}\n", "/**\n * Unescape JSON pointer\n *\n * Examples:\n * /foo~1bar~0baz -> /foo/bar~baz\n */\nexport function unescapeJsonPointer(uri: string) {\n  return decodeURI(uri.replace(/~1/g, '/').replace(/~0/g, '~'))\n}\n", "import { unescapeJsonPointer } from './unescape-json-pointer'\n\n/**\n * Translate `/paths/~1test` to `['paths', '/test']`\n */\nexport function getSegmentsFromPath(path: string) {\n  return (\n    // /paths/~1test\n    path\n      // ['', 'paths', '~1test']\n      .split('/')\n      // ['paths', '~test']\n      .slice(1)\n      // ['paths', '/test']\n      .map(unescapeJsonPointer)\n  )\n}\n", "import type { OpenAPI } from '@scalar/openapi-types'\n\nimport { ERRORS } from '@/configuration'\nimport type { AnyObject, ErrorObject, Filesystem, FilesystemEntry, ThrowOnErrorOption } from '@/types/index'\nimport { getEntrypoint } from './get-entrypoint'\nimport { getSegmentsFromPath } from './get-segments-from-path'\nimport { isObject } from './is-object'\nimport { makeFilesystem } from './make-filesystem'\n\n// TODO: Add support for all pointer words\n// export const pointerWords = new Set([\n//   '$ref',\n//   '$id',\n//   '$anchor',\n//   '$dynamicRef',\n//   '$dynamicAnchor',\n//   '$schema',\n// ])\n\nexport type ResolveReferencesResult = {\n  valid: boolean\n  errors: ErrorObject[]\n  schema: OpenAPI.Document\n}\n\nexport type ResolveReferencesOptions = ThrowOnErrorOption & {\n  /**\n   * Fired when dereferenced a schema.\n   *\n   * Note that for object schemas, its properties may not be dereferenced when the hook is called.\n   */\n  onDereference?: (data: { schema: AnyObject; ref: string }) => void\n}\n\n/**\n * Takes a specification and resolves all references.\n */\nexport function resolveReferences(\n  // Just a specification, or a set of files.\n  input: AnyObject | Filesystem,\n  // Additional options to control the behaviour\n  options?: ResolveReferencesOptions,\n  // Fallback to the entrypoint\n  file?: FilesystemEntry,\n  // Errors that occurred during the process\n  errors: ErrorObject[] = [],\n): ResolveReferencesResult {\n  // Detach from input\n  const clonedInput = structuredClone(input)\n\n  // Make it a filesystem, even if it\u2019s just one file\n  const filesystem = makeFilesystem(clonedInput)\n\n  // Get the main file\n  const entrypoint = getEntrypoint(filesystem)\n\n  const finalInput = file?.specification ?? entrypoint.specification\n\n  // Does it look like an OpenAPI document?\n  if (!isObject(finalInput)) {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.NO_CONTENT)\n    }\n\n    return {\n      valid: false,\n      errors,\n      schema: finalInput as OpenAPI.Document,\n    }\n  }\n\n  // Recursively resolve all references\n  dereference(finalInput, filesystem, file ?? entrypoint, new WeakSet(), errors, options)\n\n  // Remove duplicats (according to message) from errors\n  errors = errors.filter(\n    (error, index, self) => index === self.findIndex((t) => t.message === error.message && t.code === error.code),\n  )\n\n  // Return the resolved specification\n  return {\n    valid: errors.length === 0,\n    errors,\n    schema: finalInput as OpenAPI.Document,\n  }\n}\n\n/**\n * Resolves the circular reference to an object and deletes the $ref properties (in-place).\n */\nfunction dereference(\n  schema: AnyObject,\n  filesystem: Filesystem,\n  entrypoint: FilesystemEntry,\n  // references to resolved object\n  resolvedSchemas: WeakSet<object>,\n  // error output\n  errors: ErrorObject[],\n\n  options?: ResolveReferencesOptions,\n): void {\n  if (schema === null || resolvedSchemas.has(schema)) {\n    return\n  }\n  resolvedSchemas.add(schema)\n\n  function resolveExternal(externalFile: FilesystemEntry) {\n    dereference(externalFile.specification, filesystem, externalFile, resolvedSchemas, errors, options)\n\n    return externalFile\n  }\n\n  while (schema.$ref !== undefined) {\n    // Find the referenced content\n    const resolved = resolveUri(schema.$ref, options, entrypoint, filesystem, resolveExternal, errors)\n\n    // invalid\n    if (typeof resolved !== 'object' || resolved === null) {\n      break\n    }\n    const dereferencedRef = schema.$ref\n\n    // Get rid of the reference\n    delete schema.$ref\n\n    for (const key of Object.keys(resolved)) {\n      if (schema[key] === undefined) {\n        schema[key] = resolved[key]\n      }\n    }\n\n    if (dereferencedRef) {\n      options?.onDereference?.({ schema, ref: dereferencedRef })\n    }\n  }\n\n  // Iterate over the whole object\n  for (const value of Object.values(schema)) {\n    if (typeof value === 'object' && value !== null) {\n      dereference(value, filesystem, entrypoint, resolvedSchemas, errors, options)\n    }\n  }\n}\n\n/**\n * Resolves a URI to a part of the specification\n *\n * The output is not necessarily dereferenced\n */\nfunction resolveUri(\n  // 'foobar.json#/foo/bar'\n  uri: string,\n  options: ResolveReferencesOptions,\n  // { filename: './foobar.json '}\n  file: FilesystemEntry,\n  // [ { filename: './foobar.json '} ]\n  filesystem: Filesystem,\n\n  // a function to resolve references in external file\n  resolve: (file: FilesystemEntry) => FilesystemEntry,\n\n  errors: ErrorObject[],\n): AnyObject | undefined {\n  // Ignore invalid URIs\n  if (typeof uri !== 'string') {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.INVALID_REFERENCE.replace('%s', uri))\n    }\n\n    errors.push({\n      code: 'INVALID_REFERENCE',\n      message: ERRORS.INVALID_REFERENCE.replace('%s', uri),\n    })\n\n    return undefined\n  }\n\n  // Understand the URI\n  const [prefix, path] = uri.split('#', 2)\n\n  /** Check whether the file is pointing to itself */\n  const isDifferentFile = prefix !== file.filename\n\n  // External references\n  if (prefix && isDifferentFile) {\n    const externalReference = filesystem.find((entry) => {\n      return entry.filename === prefix\n    })\n\n    if (!externalReference) {\n      if (options?.throwOnError) {\n        throw new Error(ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', prefix))\n      }\n\n      errors.push({\n        code: 'EXTERNAL_REFERENCE_NOT_FOUND',\n        message: ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', prefix),\n      })\n\n      return undefined\n    }\n    // $ref: 'other-file.yaml'\n    if (path === undefined) {\n      return externalReference.specification\n    }\n\n    // $ref: 'other-file.yaml#/foo/bar'\n    // resolve refs first before accessing properties directly\n    return resolveUri(`#${path}`, options, resolve(externalReference), filesystem, resolve, errors)\n  }\n\n  // Pointers\n  const segments = getSegmentsFromPath(path)\n\n  // Try to find the URI\n  try {\n    return segments.reduce((acc, key) => {\n      return acc[key]\n    }, file.specification)\n  } catch (_error) {\n    if (options?.throwOnError) {\n      throw new Error(ERRORS.INVALID_REFERENCE.replace('%s', uri))\n    }\n\n    errors.push({\n      code: 'INVALID_REFERENCE',\n      message: ERRORS.INVALID_REFERENCE.replace('%s', uri),\n    })\n  }\n\n  return undefined\n}\n", "import type { AnyApiDefinitionFormat, DereferenceResult, Filesystem } from '@/types/index'\nimport { details } from './details'\nimport { getEntrypoint } from './get-entrypoint'\nimport { makeFilesystem } from './make-filesystem'\nimport { type ResolveReferencesOptions, resolveReferences } from './resolve-references'\n\nexport type DereferenceOptions = ResolveReferencesOptions\n\n/**\n * Resolves all references in an OpenAPI document\n */\nexport async function dereference(\n  value: AnyApiDefinitionFormat | Filesystem,\n  options?: DereferenceOptions,\n): Promise<DereferenceResult> {\n  const filesystem = makeFilesystem(value)\n\n  const entrypoint = getEntrypoint(filesystem)\n  const result = resolveReferences(filesystem, options)\n\n  return {\n    specification: entrypoint.specification,\n    errors: result.errors,\n    schema: result.schema,\n    ...details(entrypoint.specification),\n  }\n}\n", "/**\n * Escapes a JSON pointer string.\n *\n * Example: `/foo/bar~baz` -> `/foo~1bar~0baz`\n */\nexport function escapeJsonPointer(str: string) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1')\n}\n", "export function isJson(value: string) {\n  try {\n    JSON.parse(value)\n\n    return true\n  } catch {\n    return false\n  }\n}\n", "import { parse } from 'yaml'\n\nexport function isYaml(value: string) {\n  // Line breaks\n  if (!value.includes('\\n')) {\n    return false\n  }\n\n  try {\n    parse(value, {\n      maxAliasCount: 10000,\n    })\n\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n", "import { ERRORS } from '@/configuration'\nimport type {\n  AnyApiDefinitionFormat,\n  AnyObject,\n  ErrorObject,\n  Filesystem,\n  LoadResult,\n  ThrowOnErrorOption,\n} from '@/types/index'\nimport { getEntrypoint } from '@/utils/get-entrypoint'\nimport { getListOfReferences } from '@/utils/get-list-of-references'\nimport { makeFilesystem } from '@/utils/make-filesystem'\nimport { normalize } from '@/utils/normalize'\n\nexport type LoadPlugin = {\n  check: (value?: any) => boolean\n  get: (value: any) => any\n  resolvePath?: (value: any, reference: string) => string\n  getDir?: (value: any) => string\n  getFilename?: (value: any) => string\n}\n\nexport type LoadOptions = {\n  plugins?: LoadPlugin[]\n  filename?: string\n  filesystem?: Filesystem\n} & ThrowOnErrorOption\n\n/**\n * @deprecated This function is deprecated and will be removed in a future version.\n * Please use the new bundler utility instead:\n * ```ts\n * import { bundle } from \"@scalar/openapi-parser\"\n * ```\n *\n * Loads an OpenAPI document, including any external references.\n *\n * This function handles loading content from various sources, normalizes the content,\n * and recursively loads any external references found within the definition.\n *\n * It builds a filesystem representation of all loaded content and collects any errors\n * encountered during the process.\n */\nexport async function load(value: AnyApiDefinitionFormat, options?: LoadOptions): Promise<LoadResult> {\n  const errors: ErrorObject[] = []\n\n  // Don\u2019t load a reference twice, check the filesystem before fetching something\n  if (options?.filesystem?.find((entry) => entry.filename === value)) {\n    return {\n      specification: getEntrypoint(options.filesystem)?.specification,\n      filesystem: options.filesystem,\n      errors,\n    }\n  }\n\n  // Check whether the value is an URL or file path\n  const plugin = options?.plugins?.find((thisPlugin) => thisPlugin.check(value))\n\n  let content: AnyObject\n\n  if (plugin) {\n    try {\n      content = normalize(await plugin.get(value))\n    } catch (_error) {\n      if (options?.throwOnError) {\n        throw new Error(ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', value as string))\n      }\n\n      errors.push({\n        code: 'EXTERNAL_REFERENCE_NOT_FOUND',\n        message: ERRORS.EXTERNAL_REFERENCE_NOT_FOUND.replace('%s', value as string),\n      })\n\n      return {\n        specification: null,\n        filesystem: [],\n        errors,\n      }\n    }\n  } else {\n    content = normalize(value)\n  }\n\n  // No content\n  if (content === undefined) {\n    if (options?.throwOnError) {\n      throw new Error('No content to load')\n    }\n\n    errors.push({\n      code: 'NO_CONTENT',\n      message: ERRORS.NO_CONTENT,\n    })\n\n    return {\n      specification: null,\n      filesystem: [],\n      errors,\n    }\n  }\n\n  let filesystem = makeFilesystem(content, {\n    filename: options?.filename ?? null,\n  })\n\n  // Get references from file system entry, or from the content\n  const newEntry = options?.filename\n    ? filesystem.find((entry) => entry.filename === options?.filename)\n    : getEntrypoint(filesystem)\n\n  const listOfReferences = newEntry.references ?? getListOfReferences(content)\n\n  // No other references\n  if (listOfReferences.length === 0) {\n    return {\n      specification: getEntrypoint(filesystem)?.specification,\n      filesystem,\n      errors,\n    }\n  }\n\n  // Load other external references\n  for (const reference of listOfReferences) {\n    // Find a matching plugin\n    const otherPlugin = options?.plugins?.find((thisPlugin) => thisPlugin.check(reference))\n\n    // Skip if no plugin is found (internal references don\u2019t need a plugin for example)\n    if (!otherPlugin) {\n      continue\n    }\n\n    const target =\n      otherPlugin.check(reference) && otherPlugin.resolvePath ? otherPlugin.resolvePath(value, reference) : reference\n\n    // Don\u2019t load a reference twice, check the filesystem before fetching something\n    if (filesystem.find((entry) => entry.filename === reference)) {\n      continue\n    }\n\n    const { filesystem: referencedFiles, errors: newErrors } = await load(target, {\n      ...options,\n      // Make the filename the exact same value as the $ref\n      // TODO: This leads to problems, if there are multiple references with the same file name but in different folders\n      filename: reference,\n    })\n\n    errors.push(...newErrors)\n\n    filesystem = [\n      ...filesystem,\n      ...referencedFiles.map((file) => {\n        return {\n          ...file,\n          isEntrypoint: false,\n        }\n      }),\n    ]\n  }\n\n  return {\n    specification: getEntrypoint(filesystem)?.specification,\n    filesystem,\n    errors,\n  }\n}\n", "import type { AnyObject } from '@/types/index'\n\nexport const toJson = (value: AnyObject) => JSON.stringify(value, null, 2)\n", "import { stringify } from 'yaml'\n\nimport type { AnyObject } from '@/types/index'\n\nexport const toYaml = (value: AnyObject) => stringify(value)\n", "import type { OpenAPIV3_1 } from '@scalar/openapi-types'\nimport type { UnknownObject } from '@scalar/types/utils'\n\nimport { traverse } from './traverse'\n\n// Create Sets for faster schema path lookups\nconst SCHEMA_SEGMENTS = new Set([\n  'properties',\n  'items',\n  'allOf',\n  'anyOf',\n  'oneOf',\n  'not',\n  'additionalProperties',\n  'schema',\n])\n\n/** Determine if the current path is within a schema - optimized version */\nexport function isSchemaPath(path: string[]): boolean {\n  // Check for schema segments first (most common case)\n  if (path.some((segment) => SCHEMA_SEGMENTS.has(segment))) {\n    return true\n  }\n\n  // Check for schema suffix\n  if (path.some((segment) => segment.endsWith('Schema'))) {\n    return true\n  }\n\n  // Check for components/schemas path\n  if (path.length >= 2 && path[0] === 'components' && path[1] === 'schemas') {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Upgrade from OpenAPI 3.0.x to 3.1.1\n *\n * https://www.openapis.org/blog/2021/02/16/migrating-from-openapi-3-0-to-3-1-0\n */\nexport function upgradeFromThreeToThreeOne(originalContent: UnknownObject) {\n  let content = originalContent\n\n  // Version check - early return if not 3.0.x\n  if (content === null || typeof content.openapi !== 'string' || !content.openapi.startsWith('3.0')) {\n    return content\n  }\n\n  content.openapi = '3.1.1'\n\n  // Single traversal that handles all transformations\n  content = traverse(content, applyChangesToDocument)\n\n  return content as OpenAPIV3_1.Document\n}\n\nconst applyChangesToDocument = (schema: UnknownObject, path: string[]) => {\n  // 1. Handle nullable types\n  if (schema.type !== 'undefined' && schema.nullable === true) {\n    schema.type = [schema.type, 'null']\n    delete schema.nullable\n  }\n\n  // 2. Handle exclusiveMinimum and exclusiveMaximum\n  if (schema.exclusiveMinimum === true) {\n    schema.exclusiveMinimum = schema.minimum\n    delete schema.minimum\n  } else if (schema.exclusiveMinimum === false) {\n    delete schema.exclusiveMinimum\n  }\n\n  if (schema.exclusiveMaximum === true) {\n    schema.exclusiveMaximum = schema.maximum\n    delete schema.maximum\n  } else if (schema.exclusiveMaximum === false) {\n    delete schema.exclusiveMaximum\n  }\n\n  // 3. Handle examples\n  if (schema.example !== undefined) {\n    if (isSchemaPath(path)) {\n      schema.examples = [schema.example]\n    } else {\n      schema.examples = {\n        default: {\n          value: schema.example,\n        },\n      }\n    }\n    delete schema.example\n  }\n\n  // 4. Handle multipart file uploads\n  if (schema.type === 'object' && schema.properties !== undefined) {\n    const parentPath = path.slice(0, -1)\n    const isMultipart = parentPath.some((segment, index) => {\n      return segment === 'content' && path[index + 1] === 'multipart/form-data'\n    })\n\n    if (isMultipart) {\n      for (const value of Object.values(schema.properties)) {\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          'type' in value &&\n          'format' in value &&\n          value.type === 'string' &&\n          value.format === 'binary'\n        ) {\n          ;(value as any).contentMediaType = 'application/octet-stream'\n          delete (value as any).format\n        }\n      }\n    }\n  }\n\n  // 5. Handle binary file uploads\n  if (path.includes('content') && path.includes('application/octet-stream')) {\n    return {}\n  }\n\n  if (schema.type === 'string') {\n    if (schema.format === 'binary') {\n      return {\n        type: 'string',\n        contentMediaType: 'application/octet-stream',\n      }\n    }\n\n    if (schema.format === 'base64') {\n      return {\n        type: 'string',\n        contentEncoding: 'base64',\n      }\n    }\n\n    if (schema.format === 'byte') {\n      const parentPath = path.slice(0, -1)\n      const contentMediaType = parentPath.find((_, index) => path[index - 1] === 'content')\n      return {\n        type: 'string',\n        contentEncoding: 'base64',\n        contentMediaType,\n      }\n    }\n  }\n\n  // 6. Handle x-webhooks\n  if (schema['x-webhooks'] !== undefined) {\n    schema.webhooks = schema['x-webhooks']\n    delete schema['x-webhooks']\n  }\n\n  return schema\n}\n", "import type { OpenAPIV2, OpenAPIV3 } from '@scalar/openapi-types'\nimport type { UnknownObject } from '@scalar/types/utils'\n\nimport { traverse } from './traverse'\n\n/**\n * Upgrade Swagger 2.0 to OpenAPI 3.0\n *\n * https://swagger.io/blog/news/whats-new-in-openapi-3-0/\n */\nexport function upgradeFromTwoToThree(originalSpecification: UnknownObject) {\n  let specification = originalSpecification\n\n  // Version\n  if (\n    specification !== null &&\n    typeof specification === 'object' &&\n    typeof specification.swagger === 'string' &&\n    specification.swagger?.startsWith('2.0')\n  ) {\n    specification.openapi = '3.0.4'\n    delete specification.swagger\n  } else {\n    // Skip if it\u2019s something else than 3.0.x\n    return specification\n  }\n\n  // Servers\n  if (specification.host) {\n    const schemes =\n      Array.isArray(specification.schemes) && specification.schemes?.length ? specification.schemes : ['http']\n\n    specification.servers = schemes.map((scheme: string[]) => ({\n      url: `${scheme}://${specification.host}${specification.basePath ?? ''}`,\n    }))\n\n    delete specification.basePath\n    delete specification.schemes\n    delete specification.host\n  } else if (specification.basePath) {\n    specification.servers = [{ url: specification.basePath }]\n    delete specification.basePath\n  }\n\n  // Schemas\n  if (specification.definitions) {\n    specification.components = Object.assign({}, specification.components, {\n      schemas: specification.definitions,\n    })\n\n    delete specification.definitions\n\n    // Rewrite $refs to definitions\n    specification = traverse(specification, (schema) => {\n      // Rewrite $refs to components\n      if (typeof schema.$ref === 'string' && schema.$ref.startsWith('#/definitions/')) {\n        schema.$ref = schema.$ref.replace(/^#\\/definitions\\//, '#/components/schemas/')\n      }\n\n      return schema\n    })\n  }\n\n  // Transform file type to string with binary format\n  specification = traverse(specification, (schema) => {\n    if (schema.type === 'file') {\n      schema.type = 'string'\n      schema.format = 'binary'\n    }\n\n    return schema\n  })\n\n  // Paths\n  if (typeof specification.paths === 'object') {\n    for (const path in specification.paths) {\n      if (Object.hasOwn(specification.paths, path)) {\n        const pathItem = specification.paths[path]\n\n        for (const method in pathItem) {\n          if (Object.hasOwn(pathItem, method)) {\n            const operationItem = pathItem[method]\n\n            // Request bodies\n            if (operationItem.parameters) {\n              const bodyParameter = structuredClone(\n                operationItem.parameters.find((parameter: OpenAPIV3.ParameterObject) => parameter.in === 'body') ?? {},\n              )\n\n              if (bodyParameter && Object.keys(bodyParameter).length) {\n                delete bodyParameter.name\n                delete bodyParameter.in\n\n                const consumes = specification.consumes ?? operationItem.consumes ?? ['application/json']\n\n                if (typeof operationItem.requestBody !== 'object') {\n                  operationItem.requestBody = {}\n                }\n\n                if (typeof operationItem.requestBody.content !== 'object') {\n                  operationItem.requestBody.content = {}\n                }\n\n                const { schema, ...requestBody } = bodyParameter\n\n                operationItem.requestBody = {\n                  ...operationItem.requestBody,\n                  ...requestBody,\n                }\n\n                for (const type of consumes) {\n                  operationItem.requestBody.content[type] = {\n                    schema: schema,\n                  }\n                }\n              }\n\n              // Delete body parameter\n              operationItem.parameters = operationItem.parameters.filter(\n                (parameter: OpenAPIV2.ParameterObject) => parameter.in !== 'body',\n              )\n\n              delete operationItem.consumes\n\n              // formData parameters\n              const formDataParameters = operationItem.parameters.filter(\n                (parameter: OpenAPIV2.ParameterObject) => parameter.in === 'formData',\n              )\n\n              if (formDataParameters.length > 0) {\n                if (typeof operationItem.requestBody !== 'object') {\n                  operationItem.requestBody = {}\n                }\n\n                if (typeof operationItem.requestBody.content !== 'object') {\n                  operationItem.requestBody.content = {}\n                }\n\n                operationItem.requestBody.content['application/x-www-form-urlencoded'] = {\n                  schema: {\n                    type: 'object',\n                    properties: {},\n                    required: [], // Initialize required array\n                  },\n                }\n\n                for (const param of formDataParameters) {\n                  operationItem.requestBody.content['application/x-www-form-urlencoded'].schema.properties[param.name] =\n                    {\n                      type: param.type,\n                      description: param.description,\n                    }\n\n                  // Add to required array if param is required\n                  if (param.required) {\n                    operationItem.requestBody.content['application/x-www-form-urlencoded'].schema.required.push(\n                      param.name,\n                    )\n                  }\n                }\n\n                // Remove formData parameters from the parameters array\n                operationItem.parameters = operationItem.parameters.filter(\n                  (parameter: OpenAPIV2.ParameterObject) => parameter.in !== 'formData',\n                )\n              }\n\n              operationItem.parameters = operationItem.parameters.map((parameter) =>\n                transformParameterObject(parameter),\n              )\n            }\n\n            // Responses\n            if (operationItem.responses) {\n              for (const response in operationItem.responses) {\n                if (Object.hasOwn(operationItem.responses, response)) {\n                  const responseItem = operationItem.responses[response]\n\n                  if (responseItem.headers) {\n                    responseItem.headers = Object.entries(responseItem.headers).reduce((acc, [name, header]) => {\n                      return {\n                        [name]: transformParameterObject(header),\n                        ...acc,\n                      }\n                    }, {})\n                  }\n                  if (responseItem.schema) {\n                    const produces = specification.produces ?? operationItem.produces ?? ['application/json']\n\n                    if (typeof responseItem.content !== 'object') {\n                      responseItem.content = {}\n                    }\n\n                    for (const type of produces) {\n                      responseItem.content[type] = {\n                        schema: responseItem.schema,\n                      }\n                    }\n\n                    delete responseItem.schema\n                  }\n                }\n              }\n            }\n\n            delete operationItem.produces\n\n            // Delete empty parameters\n            if (operationItem.parameters?.length === 0) {\n              delete operationItem.parameters\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Upgrade securityDefinitions\n  if (specification.securityDefinitions) {\n    if (typeof specification.components !== 'object') {\n      specification.components = {}\n    }\n\n    // Assert that components is of type OpenAPIV3.ComponentsObject\n    specification.components = specification.components as OpenAPIV3.ComponentsObject\n\n    Object.assign(specification.components, { securitySchemes: {} })\n\n    for (const [key, securityScheme] of Object.entries(specification.securityDefinitions)) {\n      if (typeof securityScheme === 'object') {\n        if ('type' in securityScheme && securityScheme.type === 'oauth2') {\n          const { flow, authorizationUrl, tokenUrl, scopes } = securityScheme as {\n            type: 'oauth2'\n            flow?: string\n            authorizationUrl?: string\n            tokenUrl?: string\n            scopes?: Record<string, string>\n          }\n\n          // Assert that securitySchemes is of type OpenAPIV3.SecuritySchemeObject\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: {\n              type: 'oauth2',\n              flows: {\n                [flow as string]: Object.assign(\n                  {},\n                  authorizationUrl && { authorizationUrl },\n                  tokenUrl && { tokenUrl },\n                  scopes && { scopes },\n                ),\n              },\n            },\n          })\n        } else if ('type' in securityScheme && securityScheme.type === 'basic') {\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: {\n              type: 'http',\n              scheme: 'basic',\n            },\n          })\n        } else {\n          Object.assign((specification.components as OpenAPIV3.ComponentsObject).securitySchemes, {\n            [key]: securityScheme,\n          })\n        }\n      }\n    }\n\n    delete specification.securityDefinitions\n  }\n\n  return specification as OpenAPIV3.Document\n}\n\nfunction transformItemsObject<T extends Record<PropertyKey, unknown>>(obj: T): OpenAPIV3.SchemaObject {\n  const schemaProperties = [\n    'type',\n    'format',\n    'items',\n    'maximum',\n    'exclusiveMaximum',\n    'minimum',\n    'exclusiveMinimum',\n    'maxLength',\n    'minLength',\n    'pattern',\n    'maxItems',\n    'minItems',\n    'uniqueItems',\n    'enum',\n    'multipleOf',\n  ]\n\n  return schemaProperties.reduce((acc, property) => {\n    if (Object.hasOwn(obj, property)) {\n      acc[property] = obj[property]\n      delete obj[property]\n    }\n\n    return acc\n  }, {} as OpenAPIV3.SchemaObject)\n}\n\nfunction transformParameterObject(parameter: OpenAPIV2.ParameterObject): OpenAPIV3.ParameterObject {\n  // it is important to call getParameterSerializationStyle first because transformItemsObject modifies properties on which getParameterSerializationStyle rely on\n  const serializationStyle = getParameterSerializationStyle(parameter)\n  const schema = transformItemsObject(parameter)\n\n  delete parameter.collectionFormat\n  delete parameter.default\n\n  return {\n    schema,\n    ...serializationStyle,\n    ...parameter,\n  }\n}\n\ntype CollectionFormat = 'csv' | 'ssv' | 'tsv' | 'pipes' | 'multi'\n\ntype ParameterSerializationStyle = { style?: string; explode?: boolean }\n\nconst querySerialization: Record<CollectionFormat, ParameterSerializationStyle> = {\n  ssv: {\n    style: 'spaceDelimited',\n    explode: false,\n  },\n  pipes: {\n    style: 'pipeDelimited',\n    explode: false,\n  },\n  multi: {\n    style: 'form',\n    explode: true,\n  },\n  csv: {\n    style: 'form',\n    explode: false,\n  },\n  tsv: {},\n}\n\nconst pathAndHeaderSerialization: Record<CollectionFormat, ParameterSerializationStyle> = {\n  ssv: {},\n  pipes: {},\n  multi: {},\n  csv: {\n    style: 'simple',\n    explode: false,\n  },\n  tsv: {},\n}\n\nconst serializationStyles = {\n  header: pathAndHeaderSerialization,\n  query: querySerialization,\n  path: pathAndHeaderSerialization,\n} as const\n\nfunction getParameterSerializationStyle(parameter: OpenAPIV2.ParameterObject): ParameterSerializationStyle {\n  if (\n    parameter.type !== 'array' ||\n    !(parameter.in === 'query' || parameter.in === 'path' || parameter.in === 'header')\n  ) {\n    return {}\n  }\n\n  const collectionFormat = parameter.collectionFormat ?? 'csv'\n\n  return serializationStyles[parameter.in][collectionFormat]\n}\n", "import type { OpenAPIV3_1 } from '@scalar/openapi-types'\n\nimport type { AnyObject, Filesystem, UpgradeResult } from '@/types/index'\nimport type { UnknownObject } from '@scalar/types/utils'\nimport { getEntrypoint } from './get-entrypoint'\nimport { isFilesystem } from './is-filesystem'\nimport { normalize } from './normalize'\nimport { upgradeFromThreeToThreeOne } from './upgrade-from-three-to-three-one'\nimport { upgradeFromTwoToThree } from './upgrade-from-two-to-three'\n\nconst upgraders = [\n  // Swagger 2.0 -> OpenAPI 3.0\n  upgradeFromTwoToThree,\n  // OpenAPI 3.0 -> OpenAPI 3.1\n  upgradeFromThreeToThreeOne,\n]\n\n/**\n * Upgrade specification to OpenAPI 3.1.0\n */\nexport function upgrade(value: string | AnyObject | Filesystem): UpgradeResult<OpenAPIV3_1.Document> {\n  if (!value) {\n    return {\n      specification: null,\n      version: '3.1',\n    }\n  }\n\n  // TODO: Run upgrade over the whole filesystem\n  const result = upgraders.reduce(\n    (currentSpecification, upgrader) => upgrader(currentSpecification as UnknownObject),\n    isFilesystem(value) ? getEntrypoint(value).specification : normalize(value),\n  ) as OpenAPIV3_1.Document\n\n  return {\n    specification: result,\n    // TODO: Make dynamic\n    version: '3.1',\n  } as UpgradeResult<OpenAPIV3_1.Document>\n}\n", "import Ajv04 from 'ajv-draft-04'\nimport addFormats from 'ajv-formats'\nimport Ajv2020 from 'ajv/dist/2020.js'\n\nimport { ERRORS, OpenApiSpecifications, type OpenApiVersion, OpenApiVersions } from '@/configuration'\nimport type { AnyObject, Filesystem, ThrowOnErrorOption, ValidateResult } from '@/types/index'\nimport { details as getOpenApiVersion } from '@/utils/details'\nimport { resolveReferences } from '@/utils/resolve-references'\nimport { transformErrors } from '@/utils/transform-errors'\n\n/**\n * Configure available JSON Schema versions\n */\nexport const jsonSchemaVersions = {\n  'http://json-schema.org/draft-04/schema#': Ajv04,\n  'https://json-schema.org/draft/2020-12/schema': Ajv2020,\n}\n\nexport class Validator {\n  public version: '2.0' | '3.0' | '3.1'\n\n  public static supportedVersions = OpenApiVersions\n\n  // Object with function *or* object { errors: string }\n  protected ajvValidators: Record<\n    string,\n    ((specification: AnyObject) => boolean) & {\n      errors: string\n    }\n  > = {}\n\n  protected errors: string\n\n  protected specificationVersion: string\n\n  protected specificationType: string\n\n  public specification: AnyObject\n\n  /**\n   * Checks whether a specification is valid and all references can be resolved.\n   */\n  async validate(filesystem: Filesystem, options?: ThrowOnErrorOption): Promise<ValidateResult> {\n    const entrypoint = filesystem.find((file) => file.isEntrypoint)\n    const specification = entrypoint?.specification\n\n    // TODO: How does this work with a filesystem?\n    this.specification = specification\n\n    // TODO: defaulting info.version to keep parser compatible with the previous one\n    // we should bubble this error up and not throw on it\n    if (this.specification?.info && !this.specification.info.version) {\n      this.specification.info.version = '0.0.1'\n    }\n\n    try {\n      // AnyObject is empty or invalid\n      if (specification === undefined || specification === null) {\n        if (options?.throwOnError) {\n          throw new Error(ERRORS.EMPTY_OR_INVALID)\n        }\n\n        return {\n          valid: false,\n          errors: transformErrors(entrypoint, ERRORS.EMPTY_OR_INVALID),\n        }\n      }\n\n      // Meta data about the specification\n      const { version, specificationType, specificationVersion } = getOpenApiVersion(specification)\n\n      this.version = version\n      this.specificationVersion = specificationVersion\n      this.specificationType = specificationType\n\n      // AnyObject is not supported\n      if (!version) {\n        if (options?.throwOnError) {\n          throw new Error(ERRORS.OPENAPI_VERSION_NOT_SUPPORTED)\n        }\n\n        return {\n          valid: false,\n          errors: transformErrors(entrypoint, ERRORS.OPENAPI_VERSION_NOT_SUPPORTED),\n        }\n      }\n\n      // Get the correct OpenAPI validator\n      const validateSchema = await this.getAjvValidator(version)\n      const schemaResult = validateSchema(specification)\n\n      // Error handling\n      if (validateSchema.errors) {\n        if (validateSchema.errors.length > 0) {\n          if (options?.throwOnError) {\n            throw new Error(validateSchema.errors[0])\n          }\n\n          return {\n            valid: false,\n            errors: transformErrors(entrypoint, validateSchema.errors),\n          }\n        }\n      }\n\n      // Check if the references are valid\n      const resolvedReferences = resolveReferences(filesystem, options)\n\n      return {\n        valid: schemaResult && resolvedReferences.valid,\n        errors: [...(schemaResult.errors ?? []), ...resolvedReferences.errors],\n        schema: resolvedReferences.schema,\n      }\n    } catch (error) {\n      // Something went horribly wrong!\n      if (options?.throwOnError) {\n        throw error\n      }\n\n      return {\n        valid: false,\n        errors: transformErrors(entrypoint, error.message ?? error),\n      }\n    }\n  }\n\n  /**\n   * Ajv JSON schema validator\n   */\n  async getAjvValidator(version: OpenApiVersion) {\n    // Schema loaded already\n    if (this.ajvValidators[version]) {\n      return this.ajvValidators[version]\n    }\n\n    // Load OpenAPI Schema\n    const schema = OpenApiSpecifications[version]\n\n    // Load JSON Schema\n    const AjvClass = jsonSchemaVersions[schema.$schema]\n\n    // Get the correct Ajv validator\n    const ajv = new AjvClass({\n      // Ajv is a bit too strict in its strict validation of OpenAPI schemas.\n      // Switch strict mode off.\n      strict: false,\n    })\n\n    // Register formats\n    // https://ajv.js.org/packages/ajv-formats.html#formats\n    addFormats(ajv)\n\n    // OpenAPI 3.1 uses media-range format\n    if (version === '3.1') {\n      ajv.addFormat('media-range', true)\n    }\n\n    return (this.ajvValidators[version] = ajv.compile(schema))\n  }\n}\n", "// Basic\nconst eq = (x) => (y) => x === y\nconst not = (fn) => (x) => !fn(x)\n\nconst getValues = (o) => Object.values(o)\n\nexport const notUndefined = (x) => x !== undefined\n\n// Error\nconst isXError = (x) => (error) => error.keyword === x\nexport const isRequiredError = isXError('required')\nexport const isAnyOfError = isXError('anyOf')\nexport const isEnumError = isXError('enum')\nexport const getErrors = (node) => node?.errors || []\n\n// Node\nexport const getChildren = (node) => (node && getValues(node.children)) || []\n\nexport const getSiblings = (parent /*: Node */) => (node /*: Node */) /*: $ReadOnlyArray<Node> */ =>\n  getChildren(parent).filter(not(eq(node)))\n\nexport const concatAll =\n  /* ::<T> */\n\n  (xs /*: $ReadOnlyArray<T> */) => (ys /* : $ReadOnlyArray<T> */) /* : $ReadOnlyArray<T> */ =>\n    ys.reduce((zs, z) => zs.concat(z), xs)\n", "import pointer from 'jsonpointer'\nimport leven from 'leven'\n\nimport BaseValidationError from './base'\n\nexport default class EnumValidationError extends BaseValidationError {\n  constructor(...args) {\n    super(...args)\n    this.name = 'EnumValidationError'\n  }\n\n  getError() {\n    const { message, params } = this.options\n    const bestMatch = this.findBestMatch()\n    const allowedValues = params.allowedValues.join(', ')\n\n    const output = {\n      message: `${message}: ${allowedValues}`,\n      path: this.instancePath,\n    }\n\n    if (bestMatch !== null) {\n      output.suggestion = `Did you mean ${bestMatch}?`\n    }\n\n    return output\n  }\n\n  findBestMatch() {\n    const {\n      params: { allowedValues },\n    } = this.options\n\n    const currentValue = this.instancePath === '' ? this.data : pointer.get(this.data, this.instancePath)\n\n    if (!currentValue) {\n      return null\n    }\n\n    const bestMatch = allowedValues\n      .map((value) => ({\n        value,\n        weight: leven(value, currentValue.toString()),\n      }))\n      .sort((x, y) => (x.weight > y.weight ? 1 : x.weight < y.weight ? -1 : 0))[0]\n\n    return allowedValues.length === 1 || bestMatch.weight < bestMatch.value.length ? bestMatch.value : null\n  }\n}\n", "// @ts-nocheck\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i]\n    if (last === '.') {\n      parts.splice(i, 1)\n    } else if (last === '..') {\n      parts.splice(i, 1)\n      up++\n    } else if (up) {\n      parts.splice(i, 1)\n      up--\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..')\n    }\n  }\n\n  return parts\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/\nconst splitPath = (filename) => splitPathRe.exec(filename).slice(1)\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve(...parameters) {\n  let resolvedPath = '',\n    resolvedAbsolute = false\n\n  for (let i = parameters.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? parameters[i] : '/'\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings')\n    }\n    if (!path) {\n      continue\n    }\n\n    resolvedPath = path + '/' + resolvedPath\n    resolvedAbsolute = path.charAt(0) === '/'\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    filter(resolvedPath.split('/'), (p) => !!p),\n    !resolvedAbsolute,\n  ).join('/')\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.'\n}\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  const isPathAbsolute = isAbsolute(path),\n    trailingSlash = substr(path, -1) === '/'\n\n  // Normalize the path\n  path = normalizeArray(\n    filter(path.split('/'), (p) => !!p),\n    !isPathAbsolute,\n  ).join('/')\n\n  if (!path && !isPathAbsolute) {\n    path = '.'\n  }\n  if (path && trailingSlash) {\n    path += '/'\n  }\n\n  return (isPathAbsolute ? '/' : '') + path\n}\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/'\n}\n\n// posix version\nexport function join(...paths: string[]) {\n  return normalize(\n    filter(paths, (p, _index) => {\n      if (typeof p !== 'string') {\n        throw new TypeError('Arguments to path.join must be strings')\n      }\n      return p\n    }).join('/'),\n  )\n}\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1)\n  to = resolve(to).substr(1)\n\n  function trim(arr) {\n    let start = 0\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') {\n        break\n      }\n    }\n\n    let end = arr.length - 1\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') {\n        break\n      }\n    }\n\n    if (start > end) {\n      return []\n    }\n    return arr.slice(start, end - start + 1)\n  }\n\n  const fromParts = trim(from.split('/'))\n  const toParts = trim(to.split('/'))\n\n  const length = Math.min(fromParts.length, toParts.length)\n  let samePartsLength = length\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i\n      break\n    }\n  }\n\n  let outputParts = []\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..')\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength))\n\n  return outputParts.join('/')\n}\n\nexport const sep = '/'\nexport const delimiter = ':'\n\nexport function dirname(path) {\n  const result = splitPath(path),\n    root = result[0]\n\n  let dir = result[1]\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.'\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1)\n  }\n\n  return root + dir\n}\n\nexport function basename(path, ext) {\n  let f = splitPath(path)[2]\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length)\n  }\n  return f\n}\n\nexport function extname(path) {\n  return splitPath(path)[3]\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve,\n}\nfunction filter(xs, f) {\n  if (xs.filter) {\n    return xs.filter(f)\n  }\n  const res = []\n  for (let i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) {\n      res.push(xs[i])\n    }\n  }\n  return res\n}\n\n// String.prototype.substr - negative index don't work in IE8\nconst substr =\n  'ab'.substr(-1) === 'b'\n    ? (str, start, len) => str.substr(start, len)\n    : (str, start, len) => {\n        if (start < 0) {\n          start = str.length + start\n        }\n        return str.substr(start, len)\n      }\n", "/**\n * Generates a short SHA-1 hash from a string value.\n * This function is used to create unique identifiers for external references\n * while keeping the hash length manageable. It uses the Web Crypto API to\n * generate a SHA-1 hash and returns the first 7 characters of the hex string.\n * If the hash would be all numbers, it ensures at least one letter is included.\n *\n * @param value - The string to hash\n * @returns A 7-character hexadecimal hash with at least one letter\n * @example\n * // Returns \"2ae91d7\"\n * await getHash(\"https://example.com/schema.json\")\n */\nexport async function getHash(value: string) {\n  // Convert string to ArrayBuffer\n  const encoder = new TextEncoder()\n  const data = encoder.encode(value)\n\n  // Hash the data\n  const hashBuffer = await crypto.subtle.digest('SHA-1', data)\n\n  // Convert buffer to hex string\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('')\n\n  // Return first 7 characters of the hash, ensuring at least one letter\n  const hash = hashHex.substring(0, 7)\n  return hash.match(/^\\d+$/) ? 'a' + hash.substring(1) : hash\n}\n\n/**\n * Generates a unique compressed value for a string, handling collisions by recursively compressing\n * until a unique value is found. This is used to create unique identifiers for external\n * references in the bundled OpenAPI document.\n *\n * @param compress - Function that generates a compressed value from a string\n * @param value - The original string value to compress\n * @param compressedToValue - Object mapping compressed values to their original values\n * @param prevCompressedValue - Optional previous compressed value to use as input for generating a new value\n * @param depth - Current recursion depth to prevent infinite loops\n * @returns A unique compressed value that doesn't conflict with existing values\n *\n * @example\n * const valueMap = {}\n * // First call generates compressed value for \"example.com/schema.json\"\n * const value1 = await generateUniqueValue(compress, \"example.com/schema.json\", valueMap)\n * // Returns something like \"2ae91d7\"\n *\n * // Second call with same value returns same compressed value\n * const value2 = await generateUniqueValue(compress, \"example.com/schema.json\", valueMap)\n * // Returns same value as value1\n *\n * // Call with different value generates new unique compressed value\n * const value3 = await generateUniqueValue(compress, \"example.com/other.json\", valueMap)\n * // Returns different value like \"3bf82e9\"\n */\nexport async function generateUniqueValue(\n  compress: (value: string) => Promise<string> | string,\n  value: string,\n  compressedToValue: Record<string, string>,\n  prevCompressedValue?: string,\n  depth = 0,\n) {\n  // Prevent infinite recursion by limiting depth\n  const MAX_DEPTH = 100\n\n  if (depth >= MAX_DEPTH) {\n    throw 'Can not generate unique compressed values'\n  }\n\n  // Compress the value, using previous compressed value if provided\n  const compressedValue = await compress(prevCompressedValue ?? value)\n\n  // Handle collision by recursively trying with compressed value as input\n  if (compressedToValue[compressedValue] !== undefined && compressedToValue[compressedValue] !== value) {\n    return generateUniqueValue(compress, value, compressedToValue, compressedValue, depth + 1)\n  }\n\n  // Store mapping and return unique compressed value\n  compressedToValue[compressedValue] = value\n  return compressedValue\n}\n\n/**\n * Factory function that creates a value generator with caching capabilities.\n * The generator maintains a bidirectional mapping between original values and their compressed forms.\n *\n * @param compress - Function that generates a compressed value from a string\n * @param compressedToValue - Initial mapping of compressed values to their original values\n * @returns An object with a generate method that produces unique compressed values\n *\n * @example\n * const compress = (value) => value.substring(0, 6) // Simple compression example\n * const initialMap = { 'abc123': 'example.com/schema.json' }\n * const generator = uniqueValueGeneratorFactory(compress, initialMap)\n *\n * // Generate compressed value for new string\n * const compressed = await generator.generate('example.com/other.json')\n * // Returns something like 'example'\n *\n * // Generate compressed value for existing string\n * const cached = await generator.generate('example.com/schema.json')\n * // Returns 'abc123' from cache\n */\nexport const uniqueValueGeneratorFactory = (\n  compress: (value: string) => Promise<string> | string,\n  compressedToValue: Record<string, string>,\n) => {\n  // Create a reverse mapping from original values to their compressed forms\n  const valueToCompressed = Object.fromEntries(Object.entries(compressedToValue).map(([key, value]) => [value, key]))\n\n  return {\n    /**\n     * Generates a unique compressed value for the given input string.\n     * First checks if a compressed value already exists in the cache.\n     * If not, generates a new unique compressed value and stores it in the cache.\n     *\n     * @param value - The original string value to compress\n     * @returns A Promise that resolves to the compressed string value\n     *\n     * @example\n     * const generator = uniqueValueGeneratorFactory(compress, {})\n     * const compressed = await generator.generate('example.com/schema.json')\n     * // Returns a unique compressed value like 'example'\n     */\n    generate: async (value: string) => {\n      // Check if we already have a compressed value for this input\n      const cache = valueToCompressed[value]\n      if (cache) {\n        return cache\n      }\n\n      // Generate a new unique compressed value\n      const generatedValue = await generateUniqueValue(compress, value, compressedToValue)\n\n      // Ensure the generated string contains at least one non-numeric character\n      // This prevents the `setValueAtPath` function from interpreting the value as an array index\n      // by forcing it to be treated as an object property name\n      const compressedValue = generatedValue.match(/^\\d+$/) ? `a${generatedValue}` : generatedValue\n\n      // Store the new mapping in our cache\n      valueToCompressed[value] = compressedValue\n\n      return compressedValue\n    },\n  }\n}\n", "import type { UnknownObject } from '@/types'\nimport { escapeJsonPointer } from '@/utils/escape-json-pointer'\nimport path from '@/polyfills/path'\nimport { getSegmentsFromPath } from '@/utils/get-segments-from-path'\nimport { isObject } from '@/utils/is-object'\nimport { isYaml } from '@/utils/is-yaml'\nimport { isJson } from '@/utils/is-json'\nimport { getHash, uniqueValueGeneratorFactory } from '@/utils/bundle/value-generator'\n\n/**\n * Checks if a string is a remote URL (starts with http:// or https://)\n * @param value - The URL string to check\n * @returns true if the string is a remote URL, false otherwise\n * @example\n * ```ts\n * isRemoteUrl('https://example.com/schema.json') // true\n * isRemoteUrl('http://api.example.com/schemas/user.json') // true\n * isRemoteUrl('#/components/schemas/User') // false\n * isRemoteUrl('./local-schema.json') // false\n * ```\n */\nexport function isRemoteUrl(value: string) {\n  try {\n    const url = new URL(value)\n    return url.protocol === 'http:' || url.protocol === 'https:'\n  } catch {\n    return false\n  }\n}\n\n/**\n * Checks if a string represents a file path by ensuring it's not a remote URL,\n * YAML content, or JSON content.\n *\n * @param value - The string to check\n * @returns true if the string appears to be a file path, false otherwise\n * @example\n * ```ts\n * isFilePath('./schemas/user.json') // true\n * isFilePath('https://example.com/schema.json') // false\n * isFilePath('{\"type\": \"object\"}') // false\n * isFilePath('type: object') // false\n * ```\n */\nexport function isFilePath(value: string) {\n  return !isRemoteUrl(value) && !isYaml(value) && !isJson(value)\n}\n\n/**\n * Checks if a string is a local reference (starts with #)\n * @param value - The reference string to check\n * @returns true if the string is a local reference, false otherwise\n * @example\n * ```ts\n * isLocalRef('#/components/schemas/User') // true\n * isLocalRef('https://example.com/schema.json') // false\n * isLocalRef('./local-schema.json') // false\n * ```\n */\nexport function isLocalRef(value: string): boolean {\n  return value.startsWith('#')\n}\n\nexport type ResolveResult = { ok: true; data: unknown } | { ok: false }\n\n/**\n * Resolves a string by finding and executing the appropriate plugin.\n * @param value - The string to resolve (URL, file path, etc)\n * @param plugins - Array of plugins that can handle different types of strings\n * @returns A promise that resolves to either the content or an error result\n * @example\n * // Using a URL plugin\n * await resolveContents('https://example.com/schema.json', [urlPlugin])\n * // Using a file plugin\n * await resolveContents('./schemas/user.json', [filePlugin])\n * // No matching plugin returns { ok: false }\n * await resolveContents('#/components/schemas/User', [urlPlugin, filePlugin])\n */\nasync function resolveContents(value: string, plugins: Plugin[]): Promise<ResolveResult> {\n  const plugin = plugins.find((p) => p.validate(value))\n\n  if (plugin) {\n    return plugin.exec(value)\n  }\n\n  return {\n    ok: false,\n  }\n}\n\n/**\n * Retrieves a nested value from an object using an array of property segments.\n * @param target - The target object to traverse\n * @param segments - Array of property names representing the path to the desired value\n * @returns The value at the specified path, or undefined if the path doesn't exist\n * @example\n * const obj = { foo: { bar: { baz: 42 } } };\n * getNestedValue(obj, ['foo', 'bar', 'baz']); // returns 42\n */\nexport function getNestedValue(target: Record<string, any>, segments: string[]) {\n  return segments.reduce<any>((acc, key) => {\n    if (acc === undefined) {\n      return undefined\n    }\n    return acc[key]\n  }, target)\n}\n\n/**\n * Sets a value at a specified path in an object, creating intermediate objects/arrays as needed.\n * This function traverses the object structure and creates any missing intermediate objects\n * or arrays based on the path segments. If the next segment is a numeric string, it creates\n * an array instead of an object.\n *\n * \u26A0\uFE0F Warning: Be careful with object keys that look like numbers (e.g. \"123\") as this function\n * will interpret them as array indices and create arrays instead of objects. If you need to\n * use numeric-looking keys, consider prefixing them with a non-numeric character.\n *\n * @param obj - The target object to set the value in\n * @param path - The JSON pointer path where the value should be set\n * @param value - The value to set at the specified path\n * @throws {Error} If attempting to set a value at the root path ('')\n *\n * @example\n * const obj = {}\n * setValueAtPath(obj, '/foo/bar/0', 'value')\n * // Result:\n * // {\n * //   foo: {\n * //     bar: ['value']\n * //   }\n * // }\n *\n * @example\n * const obj = { existing: { path: 'old' } }\n * setValueAtPath(obj, '/existing/path', 'new')\n * // Result:\n * // {\n * //   existing: {\n * //     path: 'new'\n * //   }\n * // }\n *\n * @example\n * // \u26A0\uFE0F Warning: This will create an array instead of an object with key \"123\"\n * setValueAtPath(obj, '/foo/123/bar', 'value')\n * // Result:\n * // {\n * //   foo: [\n * //     undefined,\n * //     undefined,\n * //     undefined,\n * //     { bar: 'value' }\n * //   ]\n * // }\n */\nexport function setValueAtPath(obj: any, path: string, value: any): void {\n  if (path === '') {\n    throw new Error(\"Cannot set value at root ('') pointer\")\n  }\n\n  const parts = getSegmentsFromPath(path)\n\n  let current = obj\n\n  for (let i = 0; i < parts.length; i++) {\n    const key = parts[i]\n    const isLast = i === parts.length - 1\n\n    const nextKey = parts[i + 1]\n    const shouldBeArray = /^\\d+$/.test(nextKey ?? '')\n\n    if (isLast) {\n      current[key] = value\n    } else {\n      if (!(key in current) || typeof current[key] !== 'object') {\n        current[key] = shouldBeArray ? [] : {}\n      }\n      current = current[key]\n    }\n  }\n}\n\n/**\n * Resolves a reference path by combining a base path with a relative path.\n * Handles both remote URLs and local file paths.\n *\n * @param base - The base path (can be a URL or local file path)\n * @param relativePath - The relative path to resolve against the base\n * @returns The resolved absolute path\n * @example\n * // Resolve remote URL\n * resolveReferencePath('https://example.com/api/schema.json', 'user.json')\n * // Returns: 'https://example.com/api/user.json'\n *\n * // Resolve local path\n * resolveReferencePath('/path/to/schema.json', 'user.json')\n * // Returns: '/path/to/user.json'\n */\nfunction resolveReferencePath(base: string, relativePath: string) {\n  if (isRemoteUrl(relativePath)) {\n    return relativePath\n  }\n\n  if (isRemoteUrl(base)) {\n    const url = new URL(base)\n\n    const mergedPath = path.join(path.dirname(url.pathname), relativePath)\n    return new URL(mergedPath, base).toString()\n  }\n\n  return path.join(path.dirname(base), relativePath)\n}\n\n/**\n * Prefixes an internal JSON reference with a given path prefix.\n * Takes a local reference (starting with #) and prepends the provided prefix segments.\n *\n * @param input - The internal reference string to prefix (must start with #)\n * @param prefix - Array of path segments to prepend to the reference\n * @returns The prefixed reference string\n * @throws Error if input is not a local reference\n * @example\n * prefixInternalRef('#/components/schemas/User', ['definitions'])\n * // Returns: '#/definitions/components/schemas/User'\n */\nexport function prefixInternalRef(input: string, prefix: string[]) {\n  if (!isLocalRef(input)) {\n    throw 'Please provide an internal ref'\n  }\n\n  return `#/${prefix.map(escapeJsonPointer).join('/')}${input.substring(1)}`\n}\n\n/**\n * Updates internal references in an object by adding a prefix to their paths.\n * Recursively traverses the input object and modifies any local $ref references\n * by prepending the given prefix to their paths. This is used when embedding external\n * documents to maintain correct reference paths relative to the main document.\n *\n * @param input - The object to update references in\n * @param prefix - Array of path segments to prepend to internal reference paths\n * @returns void\n * @example\n * ```ts\n * const input = {\n *   foo: {\n *     $ref: '#/components/schemas/User'\n *   }\n * }\n * prefixInternalRefRecursive(input, ['definitions'])\n * // Result:\n * // {\n * //   foo: {\n * //     $ref: '#/definitions/components/schemas/User'\n * //   }\n * // }\n * ```\n */\nexport function prefixInternalRefRecursive(input: unknown, prefix: string[]) {\n  if (!isObject(input)) {\n    return\n  }\n\n  Object.values(input).forEach((el) => prefixInternalRefRecursive(el, prefix))\n\n  if (typeof input === 'object' && '$ref' in input && typeof input['$ref'] === 'string') {\n    const ref = input['$ref']\n\n    if (!isLocalRef(ref)) {\n      return\n    }\n\n    return (input['$ref'] = prefixInternalRef(ref, prefix))\n  }\n}\n\n/**\n * Resolves and copies referenced values from a source document to a target document.\n * This function traverses the document and copies referenced values to the target document,\n * while tracking processed references to avoid duplicates. It only processes references\n * that belong to the same external document.\n *\n * @param targetDocument - The document to copy referenced values to\n * @param sourceDocument - The source document containing the references\n * @param referencePath - The JSON pointer path to the reference\n * @param externalRefsKey - The key used for external references (e.g. 'x-ext')\n * @param documentKey - The key identifying the external document\n * @param processedNodes - Set of already processed nodes to prevent duplicates\n * @example\n * ```ts\n * const source = {\n *   components: {\n *     schemas: {\n *       User: {\n *         $ref: '#/x-ext/users~1schema/definitions/Person'\n *       }\n *     }\n *   }\n * }\n *\n * const target = {}\n * resolveAndCopyReferences(\n *   target,\n *   source,\n *   '/components/schemas/User',\n *   'x-ext',\n *   'users/schema'\n * )\n * // Result: target will contain the User schema with resolved references\n * ```\n */\nconst resolveAndCopyReferences = (\n  targetDocument: unknown,\n  sourceDocument: unknown,\n  referencePath: string,\n  externalRefsKey: string,\n  documentKey: string,\n  processedNodes = new Set(),\n) => {\n  const referencedValue = getNestedValue(sourceDocument, getSegmentsFromPath(referencePath))\n\n  if (processedNodes.has(referencedValue)) {\n    return\n  }\n  processedNodes.add(referencedValue)\n\n  setValueAtPath(targetDocument, referencePath, referencedValue)\n\n  // Do the same for each local ref\n  const traverse = (node: unknown) => {\n    if (!node || typeof node !== 'object') {\n      return\n    }\n\n    if ('$ref' in node && typeof node['$ref'] === 'string') {\n      // We only process references from the same external document because:\n      // 1. Other documents will be handled in separate recursive branches\n      // 2. The source document only contains the current document's content\n      // This prevents undefined behavior and maintains proper document boundaries\n      if (node['$ref'].startsWith(`#/${externalRefsKey}/${escapeJsonPointer(documentKey)}`)) {\n        resolveAndCopyReferences(\n          targetDocument,\n          sourceDocument,\n          node['$ref'].substring(1),\n          documentKey,\n          externalRefsKey,\n          processedNodes,\n        )\n      }\n    }\n\n    for (const value of Object.values(node)) {\n      traverse(value)\n    }\n  }\n\n  traverse(referencedValue)\n}\n\n/**\n * Represents a plugin that handles resolving references from external sources.\n * Plugins are responsible for fetching and processing data from different sources\n * like URLs or the filesystem. Each plugin must implement validation to determine\n * if it can handle a specific reference, and an execution function to perform\n * the actual resolution.\n *\n * @property validate - Determines if this plugin can handle the given reference\n * @property exec - Fetches and processes the reference, returning the resolved data\n */\nexport type Plugin = {\n  // Determines if this plugin can handle the given reference value\n  validate: (value: string) => boolean\n  // Fetches and processes the reference, returning the resolved data\n  exec: (value: string) => Promise<ResolveResult>\n}\n\n/**\n * Configuration options for the bundler.\n * Controls how external references are resolved and processed during bundling.\n */\ntype Config = {\n  /**\n   * Array of plugins that handle resolving references from different sources.\n   * Each plugin is responsible for fetching and processing data from specific sources\n   * like URLs or the filesystem.\n   */\n  plugins: Plugin[]\n\n  /**\n   * Optional root object that serves as the base document when bundling a subpart.\n   * This allows resolving references relative to the root document's location,\n   * ensuring proper path resolution for nested references.\n   */\n  root?: UnknownObject\n\n  /**\n   * Optional cache to store promises of resolved references.\n   * Helps avoid duplicate fetches/reads of the same resource by storing\n   * the resolution promises for reuse.\n   */\n  cache?: Map<string, Promise<ResolveResult>>\n\n  /**\n   * Cache of visited nodes during partial bundling.\n   * Used to prevent re-bundling the same tree multiple times when doing partial bundling,\n   * improving performance by avoiding redundant processing of already bundled sections.\n   */\n  visitedNodes?: Set<unknown>\n\n  /**\n   * Enable tree shaking to optimize the bundle size.\n   * When enabled, only the parts of external documents that are actually referenced\n   * will be included in the final bundle.\n   */\n  treeShake: boolean\n\n  /**\n   * Optional flag to generate a URL map.\n   * When enabled, tracks the original source URLs of bundled references\n   * in an x-ext-urls section for reference mapping.\n   */\n  urlMap?: boolean\n\n  /**\n   * Optional function to compress input URLs or file paths before bundling.\n   * Returns either a Promise resolving to the compressed string or the compressed string directly.\n   */\n  compress?: (value: string) => Promise<string> | string\n\n  /**\n   * Optional hooks to monitor the bundler's lifecycle.\n   * Allows tracking the progress and status of reference resolution.\n   */\n  hooks?: Partial<{\n    /** Called when starting to resolve a reference */\n    onResolveStart: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n    /** Called when a reference resolution fails */\n    onResolveError: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n    /** Called when a reference is successfully resolved */\n    onResolveSuccess: (node: Record<string, unknown> & Record<'$ref', unknown>) => void\n  }>\n}\n\n/**\n * Extension keys used for bundling external references in OpenAPI documents.\n * These custom extensions help maintain the structure and traceability of bundled documents.\n */\nconst extensions = {\n  /**\n   * Custom OpenAPI extension key used to store external references.\n   * This key will contain all bundled external documents.\n   * The x-ext key is used to maintain a clean separation between the main\n   * OpenAPI document and its bundled external references.\n   */\n  externalDocuments: 'x-ext',\n\n  /**\n   * Custom OpenAPI extension key used to maintain a mapping between\n   * hashed keys and their original URLs in x-ext.\n   * This mapping is essential for tracking the source of bundled references\n   */\n  externalDocumentsMappings: 'x-ext-urls',\n} as const\n\n/**\n * Bundles an OpenAPI specification by resolving all external references.\n * This function traverses the input object recursively and embeds external $ref\n * references into an x-ext section. External references can be URLs or local files.\n * The original $refs are updated to point to their embedded content in the x-ext section.\n * If the input is an object, it will be modified in place by adding an x-ext\n * property to store resolved external references.\n *\n * @param input - The OpenAPI specification to bundle. Can be either an object or string.\n *                If a string is provided, it will be resolved using the provided plugins.\n *                If no plugin can process the input, the onReferenceError hook will be invoked\n *                and an error will be emitted to the console.\n * @param config - Configuration object containing plugins and options for bundling OpenAPI specifications\n * @returns A promise that resolves to the bundled specification with all references embedded\n * @example\n * // Example with object input\n * const spec = {\n *   paths: {\n *     '/users': {\n *       $ref: 'https://example.com/schemas/users.yaml'\n *     }\n *   }\n * }\n *\n * const bundled = await bundle(spec, {\n *   plugins: [fetchUrls()],\n *   treeShake: true,\n *   urlMap: true,\n *   hooks: {\n *     onResolveStart: (ref) => console.log('Resolving:', ref.$ref),\n *     onResolveSuccess: (ref) => console.log('Resolved:', ref.$ref),\n *     onResolveError: (ref) => console.log('Failed to resolve:', ref.$ref)\n *   }\n * })\n * // Result:\n * // {\n * //   paths: {\n * //     '/users': {\n * //       $ref: '#/x-ext/abc123'\n * //     }\n * //   },\n * //   'x-ext': {\n * //     'abc123': {\n * //       // Resolved content from users.yaml\n * //     }\n * //   },\n * //   'x-ext-urls': {\n * //     'https://example.com/schemas/users.yaml': 'abc123'\n * //   }\n * // }\n *\n * // Example with URL input\n * const bundledFromUrl = await bundle('https://example.com/openapi.yaml', {\n *   plugins: [fetchUrls()],\n *   treeShake: true,\n *   urlMap: true,\n *   hooks: {\n *     onResolveStart: (ref) => console.log('Resolving:', ref.$ref),\n *     onResolveSuccess: (ref) => console.log('Resolved:', ref.$ref),\n *     onResolveError: (ref) => console.log('Failed to resolve:', ref.$ref)\n *   }\n * })\n * // The function will first fetch the OpenAPI spec from the URL,\n * // then bundle all its external references into the x-ext section\n */\nexport async function bundle(input: UnknownObject | string, config: Config) {\n  // Cache for storing promises of resolved external references (URLs and local files)\n  // to avoid duplicate fetches/reads of the same resource\n  const cache = config.cache ?? new Map<string, Promise<ResolveResult>>()\n\n  /**\n   * Resolves the input value by either returning it directly if it's not a string,\n   * or attempting to resolve it using the provided plugins if it is a string.\n   * @returns The resolved input data or throws an error if resolution fails\n   */\n  const resolveInput = async () => {\n    if (typeof input !== 'string') {\n      return input\n    }\n    const result = await resolveContents(input, config.plugins)\n\n    if (result.ok && typeof result.data === 'object') {\n      return result.data\n    }\n\n    throw new Error(\n      'Failed to resolve input: Please provide a valid string value or pass a loader to process the input',\n    )\n  }\n\n  // Resolve the input specification, which could be either a direct object or a string URL/path\n  const rawSpecification = await resolveInput()\n\n  // Document root used to write all external documents\n  // We need this when we want to do a partial bundle of a document\n  const documentRoot = config.root ?? rawSpecification\n\n  // Indicates whether we're performing a partial bundle operation, which occurs when\n  // a root document is provided that differs from the raw specification being bundled\n  const isPartialBundling = config.root !== undefined && config.root !== rawSpecification\n\n  // Set of nodes that have already been processed during bundling to prevent duplicate processing\n  const processedNodes = config.visitedNodes ?? new Set()\n\n  // Determines the initial origin path for the bundler based on the input type.\n  // For string inputs that are URLs or file paths, uses the input as the origin.\n  // For non-string inputs or other string types, returns an empty string.\n  const defaultOrigin = () => {\n    if (typeof input !== 'string') {\n      return ''\n    }\n\n    if (isRemoteUrl(input) || isFilePath(input)) {\n      return input\n    }\n\n    return ''\n  }\n\n  // Create the cache to store the compressed values to their map values\n  if (documentRoot[extensions.externalDocumentsMappings] === undefined) {\n    documentRoot[extensions.externalDocumentsMappings] = {}\n  }\n  const { generate } = uniqueValueGeneratorFactory(\n    config.compress ?? getHash,\n    documentRoot[extensions.externalDocumentsMappings],\n  )\n\n  const bundler = async (root: unknown, origin: string = defaultOrigin(), isChunkParent = false) => {\n    if (!isObject(root) && !Array.isArray(root)) {\n      return\n    }\n\n    // Skip if this node has already been processed to prevent infinite recursion\n    // and duplicate processing of the same node\n    if (processedNodes.has(root)) {\n      return\n    }\n    // Mark this node as processed before continuing\n    processedNodes.add(root)\n\n    if (typeof root === 'object' && '$ref' in root && typeof root['$ref'] === 'string') {\n      const ref = root['$ref']\n      const isChunk = '$global' in root && typeof root['$global'] === 'boolean' && root['$global']\n\n      if (isLocalRef(ref)) {\n        if (isPartialBundling) {\n          // When doing partial bundling, we need to recursively bundle all dependencies\n          // referenced by this local reference to ensure the partial bundle is complete.\n          // This includes not just the direct reference but also all its dependencies,\n          // creating a complete and self-contained partial bundle.\n          await bundler(getNestedValue(documentRoot, getSegmentsFromPath(ref.substring(1))), origin, isChunkParent)\n        }\n        return\n      }\n\n      const [prefix, path = ''] = ref.split('#', 2)\n\n      // Combine the current origin with the new path to resolve relative references\n      // correctly within the context of the external file being processed\n      const resolvedPath = resolveReferencePath(origin, prefix)\n\n      // Generate a unique compressed path for the external document\n      // This is used as a key to store and reference the bundled external document\n      // The compression helps reduce the overall file size of the bundled document\n      const compressedPath = await generate(resolvedPath)\n\n      const seen = cache.has(resolvedPath)\n\n      if (!seen) {\n        cache.set(resolvedPath, resolveContents(resolvedPath, config.plugins))\n      }\n\n      config?.hooks?.onResolveStart?.(root)\n\n      // Resolve the remote document\n      const result = await cache.get(resolvedPath)\n\n      if (result.ok) {\n        // Process the result only once to avoid duplicate processing and prevent multiple prefixing\n        // of internal references, which would corrupt the reference paths\n        if (!seen) {\n          // Skip prefixing for chunks since they are meant to be self-contained and their\n          // internal references should remain relative to their original location. Chunks\n          // are typically used for modular components that need to maintain their own\n          // reference context without being affected by the main document's structure.\n          if (!isChunk) {\n            // Update internal references in the resolved document to use the correct base path.\n            // When we embed external documents, their internal references need to be updated to\n            // maintain the correct path context relative to the main document. This is crucial\n            // because internal references in the external document are relative to its original\n            // location, but when embedded, they need to be relative to their new location in\n            // the main document's x-ext section. Without this update, internal references\n            // would point to incorrect locations and break the document structure.\n            prefixInternalRefRecursive(result.data, [extensions.externalDocuments, compressedPath])\n          }\n\n          // Recursively process the resolved content\n          // to handle any nested references it may contain. We pass the resolvedPath as the new origin\n          // to ensure any relative references within this content are resolved correctly relative to\n          // their new location in the bundled document.\n          await bundler(result.data, isChunk ? origin : resolvedPath, isChunk)\n\n          // Store the mapping between hashed keys and original URLs in x-ext-urls\n          // This allows tracking which external URLs were bundled and their corresponding locations\n          setValueAtPath(\n            documentRoot,\n            `/${extensions.externalDocumentsMappings}/${escapeJsonPointer(compressedPath)}`,\n            resolvedPath,\n          )\n        }\n\n        if (config.treeShake === true) {\n          // Store only the subtree that is actually used\n          // This optimizes the bundle size by only including the parts of the external document\n          // that are referenced, rather than the entire document\n          resolveAndCopyReferences(\n            documentRoot,\n            { [extensions.externalDocuments]: { [compressedPath]: result.data } },\n            prefixInternalRef(`#${path}`, [extensions.externalDocuments, compressedPath]).substring(1),\n            extensions.externalDocuments,\n            compressedPath,\n          )\n        } else if (!seen) {\n          // Store the external document in the main document's x-ext key\n          // When tree shaking is disabled, we include the entire external document\n          // This preserves all content and is faster since we don't need to analyze and copy\n          // specific parts. This approach is ideal when storing the result in memory\n          // as it avoids the overhead of tree shaking operations\n          setValueAtPath(documentRoot, `/${extensions.externalDocuments}/${compressedPath}`, result.data)\n        }\n\n        // Update the $ref to point to the embedded document in x-ext\n        // This is necessary because we need to maintain the correct path context\n        // for the embedded document while preserving its internal structure\n        root.$ref = prefixInternalRef(`#${path}`, [extensions.externalDocuments, compressedPath])\n        config?.hooks?.onResolveSuccess?.(root)\n        return\n      }\n\n      config?.hooks?.onResolveError?.(root)\n      return console.warn(\n        `Failed to resolve external reference \"${resolvedPath}\". The reference may be invalid, inaccessible, or missing a loader for this type of reference.`,\n      )\n    }\n\n    // Recursively process all child objects to handle nested references\n    // This ensures we catch and resolve any $refs that exist deeper in the object tree\n    // We skip EXTERNAL_KEY to avoid processing already bundled content\n    await Promise.all(\n      Object.entries(root).map(async ([key, value]) => {\n        if (key === extensions.externalDocuments) {\n          return\n        }\n\n        await bundler(value, origin, isChunkParent)\n      }),\n    )\n  }\n\n  await bundler(rawSpecification)\n\n  // Keep urlMappings when doing partial bundling to track hash values and handle collisions\n  // For full bundling without urlMap config, remove the mappings to clean up the output\n  if (!config.urlMap && !isPartialBundling) {\n    // Remove the external document mappings from the output when doing a full bundle without urlMap config\n    delete documentRoot[extensions.externalDocumentsMappings]\n  }\n\n  return rawSpecification\n}\n", "import { isDefined } from '@scalar/helpers/array/is-defined'\nimport { isHttpMethod } from '@scalar/helpers/http/is-http-method'\nimport { combineUrlAndPath } from '@scalar/helpers/url/merge-urls'\nimport { keysOf } from '@scalar/object-utils/arrays'\nimport { type LoadResult, dereference, load, upgrade } from '@scalar/openapi-parser'\nimport type { OpenAPIV3_1 } from '@scalar/openapi-types'\nimport type { ApiReferenceConfiguration } from '@scalar/types/api-reference'\nimport type { SecuritySchemeOauth2 } from '@scalar/types/entities'\nimport {\n  type Oauth2FlowPayload,\n  type SecurityScheme,\n  type SecuritySchemePayload,\n  securitySchemeSchema,\n} from '@scalar/types/entities'\nimport type { UnknownObject } from '@scalar/types/utils'\nimport type { Entries } from 'type-fest'\n\nimport type { SelectedSecuritySchemeUids } from '@/entities/shared/utility'\nimport { type Collection, type CollectionPayload, collectionSchema } from '@/entities/spec/collection'\nimport type { RequestParameterPayload } from '@/entities/spec/parameters'\nimport { type RequestExample, createExampleFromRequest } from '@/entities/spec/request-examples'\nimport { type Request, type RequestPayload, requestSchema } from '@/entities/spec/requests'\nimport { type Server, serverSchema } from '@/entities/spec/server'\nimport { type Tag, tagSchema } from '@/entities/spec/spec-objects'\nimport { schemaModel } from '@/helpers/schema-model'\n\nconst dereferenceDocument = async (\n  document: string | UnknownObject,\n  { shouldLoad = true }: { shouldLoad?: boolean } = {},\n) => {\n  if (document === null || (typeof document === 'string' && document.trim() === '')) {\n    console.warn('[@scalar/oas-utils] Empty OpenAPI document provided.')\n\n    return {\n      schema: {} as OpenAPIV3_1.Document,\n      errors: [],\n    }\n  }\n\n  let filesystem: LoadResult['filesystem'] | string | UnknownObject = document\n  let loadErrors: LoadResult['errors'] = []\n\n  if (shouldLoad) {\n    // TODO: Plugins for URLs and files with the proxy are missing here.\n    // @see packages/api-reference/src/helpers/parse.ts\n    const response = await load(document).catch((e) => ({\n      errors: [\n        {\n          code: e.code,\n          message: e.message,\n        },\n      ],\n      filesystem: [],\n    }))\n    filesystem = response.filesystem\n    loadErrors = response.errors ?? []\n  }\n\n  const { specification } = upgrade(filesystem)\n  const { schema, errors: derefErrors = [] } = await dereference(specification)\n\n  return {\n    schema,\n    errors: [...loadErrors, ...derefErrors],\n  }\n}\n\n/** Takes a string or object and parses it into an openapi spec compliant schema */\nexport const parseSchema = async (\n  originalDocument: string | UnknownObject | undefined,\n  {\n    shouldLoad = true,\n    /** If a dereferenced document is provided, we will skip the dereferencing step. */\n    dereferencedDocument = undefined,\n  }: { shouldLoad?: boolean; dereferencedDocument?: OpenAPIV3_1.Document } = {},\n) => {\n  // Skip, if a dereferenced document is provided\n  const { schema, errors } = dereferencedDocument\n    ? {\n        schema: dereferencedDocument,\n        errors: [],\n      }\n    : // Otherwise, dereference the original document\n      await dereferenceDocument(originalDocument ?? '', {\n        shouldLoad,\n      })\n\n  if (!schema) {\n    console.warn('[@scalar/oas-utils] OpenAPI Parser Warning: Schema is undefined')\n  }\n\n  return {\n    /**\n     * Temporary fix for the parser returning an empty array\n     * TODO: remove this once the parser is fixed\n     */\n    schema: (Array.isArray(schema) ? {} : schema) as OpenAPIV3_1.Document,\n    errors,\n  }\n}\n\n/** Converts selected security requirements to uids */\nexport const getSelectedSecuritySchemeUids = (\n  securityRequirements: (string | string[])[],\n  preferredSecurityNames: (string | string[])[] = [],\n  securitySchemeMap: Record<string, SecurityScheme['uid']>,\n): SelectedSecuritySchemeUids => {\n  // Set the first security requirement if no preferred security schemes are set\n  const names =\n    securityRequirements[0] && !preferredSecurityNames.length ? [securityRequirements[0]] : preferredSecurityNames\n\n  // Map names to uids\n  const uids = names\n    .map((name) =>\n      Array.isArray(name) ? name.map((k) => securitySchemeMap[k]).filter(isDefined) : securitySchemeMap[name],\n    )\n    .filter(isDefined)\n\n  return uids\n}\n\n/** Create a \"uid\" from a slug */\nexport const getSlugUid = (slug: string) => `slug-uid-${slug}` as Collection['uid']\n\nexport type ImportSpecToWorkspaceArgs = Pick<CollectionPayload, 'documentUrl' | 'watchMode'> &\n  Pick<ApiReferenceConfiguration, 'authentication' | 'baseServerURL' | 'servers' | 'slug'> & {\n    /** The dereferenced document */\n    dereferencedDocument?: OpenAPIV3_1.Document\n    /** Sets the preferred security scheme on the collection instead of the requests */\n    useCollectionSecurity?: boolean\n    /** Call the load step from the parser */\n    shouldLoad?: boolean\n  }\n\n/**\n * Imports an OpenAPI document and converts it to workspace entities (Collection, Request, Server, etc.)\n *\n * The imported entities maintain a close mapping to the original OpenAPI specification to enable:\n * - Bi-directional translation between spec and workspace entities\n * - Preservation of specification details and structure\n * - Accurate representation of relationships between components\n *\n * Relationships between entities are maintained through unique identifiers (UIDs) which allow:\n * - Flexible organization at different levels (workspace, collection, request)\n * - Proper linking between related components\n * - Easy lookup and reference of dependent entities\n */\nexport async function importSpecToWorkspace(\n  content: string | UnknownObject | undefined,\n  {\n    /** If a dereferenced document is provided, we will skip the dereferencing step. */\n    dereferencedDocument,\n    authentication,\n    baseServerURL,\n    documentUrl,\n    servers: configuredServers,\n    useCollectionSecurity = false,\n    slug,\n    shouldLoad,\n    watchMode = false,\n  }: ImportSpecToWorkspaceArgs = {},\n): Promise<\n  | {\n      error: false\n      collection: Collection\n      requests: Request[]\n      schema: OpenAPIV3_1.Document\n      examples: RequestExample[]\n      servers: Server[]\n      tags: Tag[]\n      securitySchemes: SecurityScheme[]\n    }\n  | { error: true; importWarnings: string[]; collection: undefined }\n> {\n  const { schema, errors } = await parseSchema(content, { shouldLoad, dereferencedDocument })\n  const importWarnings: string[] = [...errors.map((e) => e.message)]\n\n  if (!schema) {\n    return { importWarnings, error: true, collection: undefined }\n  }\n  // ---------------------------------------------------------------------------\n  // Some entities will be broken out as individual lists for modification in the workspace\n  const start = performance.now()\n  const requests: Request[] = []\n\n  // Add the base server url to collection servers\n  const collectionServers: Server[] = getServersFromOpenApiDocument(configuredServers || schema.servers, {\n    baseServerURL,\n  })\n\n  // Store operation servers\n  const operationServers: Server[] = []\n\n  // Fallback to the current window.location.origin if no servers are provided\n  if (!collectionServers.length) {\n    const fallbackUrl = getFallbackUrl()\n\n    if (fallbackUrl) {\n      collectionServers.push(serverSchema.parse({ url: fallbackUrl }))\n    }\n  }\n\n  /**\n   * List of all tag strings. For non compliant specs we may need to\n   * add top level tag objects for missing tag objects\n   */\n  const tagNames: Set<string> = new Set()\n\n  // ---------------------------------------------------------------------------\n  // SECURITY HANDLING\n\n  const security = schema.components?.securitySchemes ?? schema?.securityDefinitions ?? {}\n\n  // @ts-expect-error - Toss out a deprecated warning for the old authentication state\n  if (authentication?.oAuth2 || authentication?.apiKey || authentication?.http) {\n    console.warn(\n      `DEPRECATION WARNING: It looks like you're using legacy authentication config. Please migrate to use the updated config. See https://github.com/scalar/scalar/blob/main/documentation/configuration.md#authentication-partial This will be removed in a future version.`,\n    )\n  }\n\n  const securitySchemes = (Object.entries(security) as Entries<Record<string, OpenAPIV3_1.SecuritySchemeObject>>)\n    .map?.(([nameKey, _scheme]) => {\n      // Apply any transforms we need before parsing\n      const payload = {\n        ..._scheme,\n        // Add the new auth config overrides, we keep the old code below for backwards compatibility\n        ...(authentication?.securitySchemes?.[nameKey] ?? {}),\n        nameKey,\n      } as SecuritySchemePayload\n\n      // For oauth2 we need to add the type to the flows + prefill from authentication\n      if (payload.type === 'oauth2' && payload.flows) {\n        const flowKeys = Object.keys(payload.flows) as Array<keyof typeof payload.flows>\n\n        flowKeys.forEach((key) => {\n          if (!payload.flows?.[key] || _scheme.type !== 'oauth2') {\n            return\n          }\n          const authFlow = (authentication?.securitySchemes?.[nameKey] as SecuritySchemeOauth2)?.flows?.[key] ?? {}\n\n          // This part handles setting of flows via the new auth config, the rest can be removed in a future version\n          payload.flows[key] = {\n            ...(_scheme.flows?.[key] ?? {}),\n            ...authFlow,\n          } satisfies Oauth2FlowPayload\n\n          const flow = payload.flows[key] as Oauth2FlowPayload\n\n          // Set the type\n          flow.type = key\n\n          // Prefill values from authorization config - old deprecated config\n          // @ts-expect-error - deprecated\n          if (authentication?.oAuth2) {\n            // @ts-expect-error - deprecated\n            if (authentication.oAuth2.accessToken) {\n              // @ts-expect-error - deprecated\n              flow.token = authentication.oAuth2.accessToken\n            }\n\n            // @ts-expect-error - deprecated\n            if (authentication.oAuth2.clientId) {\n              // @ts-expect-error - deprecated\n              flow['x-scalar-client-id'] = authentication.oAuth2.clientId\n            }\n\n            // @ts-expect-error - deprecated\n            if (authentication.oAuth2.scopes) {\n              // @ts-expect-error - deprecated\n              flow.selectedScopes = authentication.oAuth2.scopes\n            }\n\n            if (flow.type === 'password') {\n              // @ts-expect-error - deprecated\n              flow.username = authentication.oAuth2.username\n              // @ts-expect-error - deprecated\n              flow.password = authentication.oAuth2.password\n            }\n          }\n\n          // Convert scopes to an object\n          if (Array.isArray(flow.scopes)) {\n            flow.scopes = flow.scopes.reduce((prev, s) => ({ ...prev, [s]: '' }), {})\n          }\n\n          // Handle x-defaultClientId\n          if (flow['x-defaultClientId']) {\n            flow['x-scalar-client-id'] = flow['x-defaultClientId']\n          }\n        })\n      }\n      // Otherwise we just prefill  - old deprecated config\n      else if (authentication) {\n        // ApiKey\n        // @ts-expect-error - deprecated\n        if (payload.type === 'apiKey' && authentication.apiKey?.token) {\n          // @ts-expect-error - deprecated\n          payload.value = authentication.apiKey.token\n        }\n        // HTTP\n        else if (payload.type === 'http') {\n          // @ts-expect-error - deprecated\n          if (payload.scheme === 'basic' && authentication.http?.basic) {\n            // @ts-expect-error - deprecated\n            payload.username = authentication.http.basic.username ?? ''\n            // @ts-expect-error - deprecated\n            payload.password = authentication.http.basic.password ?? ''\n          }\n          // Bearer\n          // @ts-expect-error - deprecated\n          else if (payload.scheme === 'bearer' && authentication.http?.bearer?.token) {\n            // @ts-expect-error - deprecated\n            payload.token = authentication.http.bearer.token ?? ''\n          }\n        }\n      }\n\n      const scheme = schemaModel(payload, securitySchemeSchema, false)\n      if (!scheme) {\n        importWarnings.push(`Security scheme ${nameKey} is invalid.`)\n      }\n\n      return scheme\n    })\n    .filter((v) => !!v)\n\n  // Map of security scheme names to UIDs\n  const securitySchemeMap: Record<string, SecurityScheme['uid']> = {}\n  securitySchemes.forEach((s) => {\n    securitySchemeMap[s.nameKey] = s.uid\n  })\n\n  // ---------------------------------------------------------------------------\n  // REQUEST HANDLING\n\n  keysOf(schema.paths ?? {}).forEach((pathString) => {\n    const path = schema?.paths?.[pathString]\n\n    if (!path) {\n      return\n    }\n    // Path level servers must be saved\n    const pathServers = serverSchema.array().parse(path.servers ?? [])\n    for (const server of pathServers) {\n      collectionServers.push(server)\n    }\n\n    // Creates a sorted array of methods based on the path object.\n    const methods = Object.keys(path).filter(isHttpMethod)\n\n    methods.forEach((method) => {\n      const operation = path[method]\n      if (!operation) {\n        return\n      }\n\n      const operationLevelServers = serverSchema.array().parse(operation.servers ?? [])\n\n      for (const server of operationLevelServers) {\n        operationServers.push(server)\n      }\n\n      // We will save a list of all tags to ensure they exists at the top level\n      // TODO: make sure we add any loose requests with no tags to the collection children\n      operation.tags?.forEach((t: string) => tagNames.add(t))\n\n      // Remove security here and add it correctly below\n      const { security: operationSecurity, ...operationWithoutSecurity } = operation\n\n      const securityRequirements: (string | string[])[] = (operationSecurity ?? schema.security ?? [])\n        .map((s: OpenAPIV3_1.SecurityRequirementObject) => {\n          const keys = Object.keys(s)\n          return keys.length > 1 ? keys : keys[0]\n        })\n        .filter(isDefined)\n\n      // Filter the preferred security schemes to only include the ones that are in the security requirements\n      const preferredSecurityNames = [authentication?.preferredSecurityScheme ?? []].flat().filter((name) => {\n        // Match up complex security requirements, array to array\n        if (Array.isArray(name)) {\n          // We match every element in the array\n          return securityRequirements.some(\n            (r) => Array.isArray(r) && r.length === name.length && r.every((v, i) => v === name[i]),\n          )\n        }\n        return securityRequirements.includes(name)\n      })\n\n      // Set the initially selected security scheme\n      const selectedSecuritySchemeUids =\n        securityRequirements.length && !useCollectionSecurity\n          ? getSelectedSecuritySchemeUids(securityRequirements, preferredSecurityNames, securitySchemeMap)\n          : []\n\n      const requestPayload: RequestPayload = {\n        ...operationWithoutSecurity,\n        method,\n        path: pathString,\n        security: operationSecurity,\n        selectedServerUid: operationLevelServers?.[0]?.uid,\n        selectedSecuritySchemeUids,\n        // Merge path and operation level parameters\n        parameters: [...(path?.parameters ?? []), ...(operation.parameters ?? [])] as RequestParameterPayload[],\n        servers: [...pathServers, ...operationLevelServers].map((s) => s.uid),\n      }\n\n      // Remove any examples from the request payload as they conflict with our examples property and are not valid\n      if (requestPayload.examples) {\n        console.warn('[@scalar/api-client] operation.examples is not a valid openapi property')\n        delete requestPayload.examples\n      }\n\n      // Save parse the request\n      const request = schemaModel(requestPayload, requestSchema, false)\n\n      if (!request) {\n        importWarnings.push(`${method} Request at ${path} is invalid.`)\n      } else {\n        requests.push(request)\n      }\n    })\n  })\n\n  // ---------------------------------------------------------------------------\n  // TAG HANDLING\n\n  // TODO: We may need to handle de-duping tags\n  const tags = schemaModel(schema?.tags ?? [], tagSchema.array(), false) ?? []\n\n  // Delete any tag names that already have a definition\n  tags.forEach((t) => tagNames.delete(t.name))\n\n  // Add an entry for any tags that are used but do not have a definition\n  tagNames.forEach((name) => name && tags.push(tagSchema.parse({ name })))\n\n  // Tag name to UID map\n  const tagMap: Record<string, Tag> = {}\n  tags.forEach((t) => {\n    tagMap[t.name] = t\n  })\n\n  // Add all tags by default. We will remove nested ones\n  const collectionChildren = new Set<Collection['children'][number]>(tags.map((t) => t.uid))\n\n  // Nested folders go before any requests\n  tags.forEach((t) => {\n    t['x-scalar-children']?.forEach((c) => {\n      // Add the uid to the appropriate parent.children\n      const nestedUid = tagMap[c.tagName]?.uid\n\n      if (nestedUid) {\n        t.children.push(nestedUid)\n\n        // Remove the nested uid from the root folder\n        collectionChildren.delete(nestedUid)\n      }\n    })\n  })\n\n  // Add the request UIDs to the tag children (or collection root)\n  requests.forEach((r) => {\n    if (r.tags?.length) {\n      r.tags.forEach((t) => {\n        tagMap[t]?.children.push(r.uid)\n      })\n    } else {\n      collectionChildren.add(r.uid)\n    }\n  })\n\n  // ---------------------------------------------------------------------------\n\n  const examples: RequestExample[] = []\n\n  // Ensure each request has at least 1 example\n  requests.forEach((request) => {\n    // TODO: Need to handle parsing examples\n    // if (request['x-scalar-examples']) return\n\n    // Create the initial example\n    const example = createExampleFromRequest(request, 'Default Example')\n\n    examples.push(example)\n    request.examples.push(example.uid)\n  })\n\n  // ---------------------------------------------------------------------------\n  // Generate Collection\n\n  // Grab the security requirements for this operation\n  const securityRequirements: SelectedSecuritySchemeUids = (schema.security ?? [])\n    .map((s: OpenAPIV3_1.SecurityRequirementObject) => {\n      const keys = Object.keys(s)\n      return keys.length > 1 ? keys : keys[0]\n    })\n    .filter(isDefined)\n\n  // Here we do not filter these as we let the preferredSecurityScheme override the requirements\n  const preferredSecurityNames = [authentication?.preferredSecurityScheme ?? []].flat()\n\n  // Set the initially selected security scheme\n  const selectedSecuritySchemeUids =\n    (securityRequirements.length || preferredSecurityNames?.length) && useCollectionSecurity\n      ? getSelectedSecuritySchemeUids(securityRequirements, preferredSecurityNames, securitySchemeMap)\n      : []\n\n  // Set the uid as a prefixed slug if we have one\n  const slugObj = slug?.length ? { uid: getSlugUid(slug) } : {}\n\n  const collection = collectionSchema.parse({\n    ...slugObj,\n    ...schema,\n    watchMode,\n    documentUrl,\n    useCollectionSecurity,\n    requests: requests.map((r) => r.uid),\n    servers: collectionServers.map((s) => s.uid),\n    tags: tags.map((t) => t.uid),\n    children: [...collectionChildren],\n    security: schema.security ?? [{}],\n    selectedServerUid: collectionServers?.[0]?.uid,\n    selectedSecuritySchemeUids,\n    components: {\n      ...schema.components,\n    },\n    securitySchemes: securitySchemes.map((s) => s.uid),\n  })\n\n  const end = performance.now()\n  console.log(`workspace: ${Math.round(end - start)} ms`)\n\n  /**\n   * Servers and requests will be saved in top level maps and indexed via UID to\n   * maintain specification relationships\n   */\n  return {\n    error: false,\n    servers: [...collectionServers, ...operationServers],\n    schema,\n    requests,\n    examples,\n    collection,\n    tags,\n    securitySchemes,\n  }\n}\n\n/**\n * Retrieves a list of servers from an OpenAPI document and converts them to a list of Server entities.\n */\nexport function getServersFromOpenApiDocument(\n  servers: OpenAPIV3_1.ServerObject[] | undefined,\n  { baseServerURL }: Pick<ApiReferenceConfiguration, 'baseServerURL'> = {},\n): Server[] {\n  if (!servers || !Array.isArray(servers)) {\n    return []\n  }\n\n  return servers\n    .map((server): Server | undefined => {\n      try {\n        // Validate the server against the schema\n        const parsedSchema = serverSchema.parse(server)\n\n        // Prepend with the base server URL (if the given URL is relative)\n        if (parsedSchema?.url?.startsWith('/')) {\n          // Use the base server URL (if provided)\n          if (baseServerURL) {\n            parsedSchema.url = combineUrlAndPath(baseServerURL, parsedSchema.url)\n\n            return parsedSchema\n          }\n\n          // Fallback to the current window origin\n          const fallbackUrl = getFallbackUrl()\n\n          if (fallbackUrl) {\n            parsedSchema.url = combineUrlAndPath(fallbackUrl, parsedSchema.url.replace(/^\\//, ''))\n\n            return parsedSchema\n          }\n        }\n\n        // Must be good, return it\n        return parsedSchema\n      } catch (error) {\n        console.warn('Oops, that\u2019s an invalid server configuration.')\n        console.warn('Server:', server)\n        console.warn('Error:', error)\n\n        // Return undefined to remove the server\n        return undefined\n      }\n    })\n    .filter(isDefined)\n}\n\n/**\n * Fallback to the current window.location.origin, if available\n */\nfunction getFallbackUrl() {\n  if (typeof window === 'undefined') {\n    return undefined\n  }\n\n  if (typeof window?.location?.origin !== 'string') {\n    return undefined\n  }\n\n  return window.location.origin\n}\n", "import { fetchDocument as y, createHash as R } from \"@scalar/oas-utils/helpers\";\nimport { importSpecToWorkspace as S } from \"@scalar/oas-utils/transforms\";\nimport { toRaw as g } from \"vue\";\nimport { normalizeError as w } from \"../libs/errors.js\";\nconst F = {};\nfunction O({\n  requestMutators: s,\n  collectionMutators: l,\n  serverMutators: m,\n  tagMutators: p,\n  securitySchemeMutators: d,\n  requestExampleMutators: f,\n  workspaceMutators: u,\n  workspaces: h\n}) {\n  const n = async (t, a, e = {}) => {\n    var i;\n    const c = g(t), r = await S(c, e);\n    if (r.error) {\n      console.group(\"IMPORT ERRORS\"), r.importWarnings.forEach((o) => console.warn(o)), console.groupEnd();\n      return;\n    }\n    return e.documentUrl && typeof c == \"string\" && (F[e.documentUrl] = {\n      hash: R(c),\n      schema: r.schema\n    }), r.examples.forEach((o) => f.add(o)), r.requests.forEach((o) => s.add(o)), r.tags.forEach((o) => p.add(o)), r.servers.forEach((o) => m.add(o)), r.securitySchemes.forEach((o) => d.add(o)), l.add(r.collection), u.edit(a, \"collections\", [\n      ...((i = h[a]) == null ? void 0 : i.collections) ?? [],\n      r.collection.uid\n    ]), r;\n  };\n  async function E(t, a, {\n    proxyUrl: e,\n    ...c\n  } = {}) {\n    try {\n      const r = await y(t, e);\n      return [\n        null,\n        await n(r, a, {\n          documentUrl: t,\n          ...c\n        })\n      ];\n    } catch (r) {\n      return console.error(\"Failed to fetch spec from URL:\", r), [w(r), null];\n    }\n  }\n  return {\n    importSpecFile: n,\n    importSpecFromUrl: E\n  };\n}\nexport {\n  O as importSpecFileFactory,\n  F as specDictionary\n};\n", "import { createExampleFromRequest as c } from \"@scalar/oas-utils/entities/spec\";\nimport { LS_KEYS as x } from \"@scalar/helpers/object/local-storage\";\nimport { iterateTitle as u } from \"@scalar/helpers/string/iterate-title\";\nimport { mutationFactory as E } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as n } from \"vue\";\nfunction T(o) {\n  const t = n({}), m = E(\n    t,\n    n({}),\n    o && x.REQUEST_EXAMPLE\n  );\n  return {\n    requestExamples: t,\n    requestExampleMutators: m\n  };\n}\nfunction _({\n  requestExamples: o,\n  requestExampleMutators: t,\n  requestMutators: m,\n  requests: p\n}) {\n  return {\n    addRequestExample: (e, a) => {\n      const r = a ?? u(\n        (e.summary ?? \"Example\") + \" #1\",\n        (l) => e.examples.some((s) => {\n          var d;\n          return ((d = o[s]) == null ? void 0 : d.name) === l;\n        })\n      ), i = c(e, r);\n      return t.add(i), m.edit(e.uid, \"examples\", [...e.examples, i.uid]), i;\n    },\n    deleteRequestExample: (e) => {\n      var a;\n      e.requestUid && (m.edit(\n        e.requestUid,\n        \"examples\",\n        ((a = p[e.requestUid]) == null ? void 0 : a.examples.filter((r) => r !== e.uid)) || []\n      ), t.delete(e.uid));\n    }\n  };\n}\nexport {\n  T as createStoreRequestExamples,\n  _ as extendedExampleDataFactory\n};\n", "import { requestSchema as y, createExampleFromRequest as F } from \"@scalar/oas-utils/entities/spec\";\nimport { schemaModel as T } from \"@scalar/oas-utils/helpers\";\nimport { LS_KEYS as A } from \"@scalar/helpers/object/local-storage\";\nimport { iterateTitle as D } from \"@scalar/helpers/string/iterate-title\";\nimport { mutationFactory as I } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as S } from \"vue\";\nfunction Q(p) {\n  const f = S({}), q = I(f, S({}), p && A.REQUEST);\n  return {\n    requests: f,\n    requestMutators: q\n  };\n}\nfunction g({\n  requestExamples: p,\n  requestExampleMutators: f,\n  requestMutators: q,\n  collectionMutators: c,\n  collections: n,\n  tags: m,\n  tagMutators: R\n}, E) {\n  return {\n    addRequest: (r, t) => {\n      var l;\n      const e = T(r, y, !1);\n      if (!e)\n        return console.error(\"INVALID REQUEST DATA\", r);\n      const s = n[t], u = F(\n        e,\n        D(\n          (e.summary ?? \"Example\") + \" #1\",\n          (h) => e.examples.some((a) => {\n            var o;\n            return h === ((o = p[a]) == null ? void 0 : o.name);\n          })\n        )\n      );\n      return e.examples.push(u.uid), q.add(e), f.add(u), s && c.edit(t, \"requests\", [...s.requests, e.uid]), (l = e.tags) != null && l.length ? e.tags.forEach((h) => {\n        const a = s == null ? void 0 : s.tags.find((o) => {\n          var x;\n          return ((x = m[o]) == null ? void 0 : x.name) === h;\n        });\n        a && m[a] ? R.edit(a, \"children\", [...m[a].children, e.uid]) : E({ name: h, children: [e.uid] }, t);\n      }) : s && c.edit(t, \"children\", [...s.children, e.uid]), e;\n    },\n    deleteRequest: (r, t) => {\n      var s;\n      const e = n[t];\n      r.examples.forEach((u) => f.delete(u)), e && (c.edit(\n        t,\n        \"requests\",\n        e.requests.filter((u) => u !== r.uid)\n      ), c.edit(\n        t,\n        \"children\",\n        e.children.filter((u) => u !== r.uid)\n      ), (s = r.tags) == null || s.forEach((u) => {\n        var h;\n        const l = e.tags.find((a) => {\n          var o;\n          return ((o = m[a]) == null ? void 0 : o.name) === u;\n        });\n        l && R.edit(l, \"children\", ((h = m[l]) == null ? void 0 : h.children.filter((a) => a !== r.uid)) || []);\n      })), q.delete(r.uid);\n    },\n    findRequestParents: O({ collections: n, tags: m })\n  };\n}\nfunction O({\n  collections: p,\n  tags: f\n}) {\n  function q(c) {\n    const n = Object.values(p).find((i) => {\n      var d;\n      return (d = i.requests) == null ? void 0 : d.includes(c.uid);\n    });\n    if (!n)\n      return [];\n    const m = Object.keys(f).reduce(\n      (i, d) => (i[d] = [], i),\n      { [n == null ? void 0 : n.uid]: [] }\n    );\n    function R(i, d) {\n      d.forEach((r) => {\n        var t;\n        return (t = m[r]) == null ? void 0 : t.push(...i.children);\n      }), i.children.forEach((r) => {\n        f[r] && R(f[r], [...d, r]);\n      });\n    }\n    R(n, [n.uid]);\n    const E = /* @__PURE__ */ new Set();\n    return Object.entries(m).forEach(([i, d]) => {\n      d.includes(c.uid) && E.add(i);\n    }), [...E];\n  }\n  return q;\n}\nfunction k() {\n  return { request: y.parse({\n    method: \"get\",\n    parameters: [],\n    path: \"\",\n    summary: \"My First Request\",\n    examples: []\n  }) };\n}\nexport {\n  k as createInitialRequest,\n  Q as createStoreRequests,\n  g as extendedRequestDataFactory,\n  O as findRequestParentsFactory\n};\n", "import { securitySchemeSchema as n } from \"@scalar/oas-utils/entities/spec\";\nimport { LS_KEYS as h } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as o } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as f } from \"vue\";\nfunction v(S) {\n  const i = f({}), u = o(\n    i,\n    f({}),\n    S && h.SECURITY_SCHEME\n  );\n  return {\n    securitySchemes: i,\n    securitySchemeMutators: u\n  };\n}\nfunction k({\n  securitySchemeMutators: S,\n  collectionMutators: i,\n  collections: u,\n  requests: s,\n  requestMutators: y\n}) {\n  return {\n    addSecurityScheme: (t, e) => {\n      const r = n.parse(t);\n      return S.add(r), e && u[e] && i.edit(e, \"securitySchemes\", [\n        ...u[e].securitySchemes,\n        r.uid\n      ]), r;\n    },\n    deleteSecurityScheme: (t) => {\n      Object.values(u).forEach((e) => {\n        e.securitySchemes.includes(t) && i.edit(\n          e.uid,\n          \"securitySchemes\",\n          e.securitySchemes.filter((r) => r !== t)\n        );\n      }), Object.values(s).forEach((e) => {\n        var r, m, d, a;\n        (r = e.security) != null && r.some((c) => Object.keys(c).includes(t)) && y.edit(\n          e.uid,\n          \"security\",\n          (d = (m = s[e.uid]) == null ? void 0 : m.security) == null ? void 0 : d.filter((c) => !Object.keys(c).includes(t))\n        ), e.selectedSecuritySchemeUids.flat().includes(t) && y.edit(\n          e.uid,\n          \"selectedSecuritySchemeUids\",\n          (a = e.selectedSecuritySchemeUids) == null ? void 0 : a.filter((c) => Array.isArray(c) ? !c.includes(t) : c !== t)\n        );\n      }), S.delete(t);\n    }\n  };\n}\nexport {\n  v as createStoreSecuritySchemes,\n  k as extendedSecurityDataFactory\n};\n", "import { serverSchema as o } from \"@scalar/oas-utils/entities/spec\";\nimport { LS_KEYS as u } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as a } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as m } from \"vue\";\nfunction R(s) {\n  const r = m({}), v = a(r, m({}), s && u.SERVER);\n  return {\n    servers: r,\n    serverMutators: v\n  };\n}\nfunction h({\n  serverMutators: s,\n  collections: r,\n  collectionMutators: v,\n  requests: f,\n  requestMutators: d\n}) {\n  return {\n    addServer: (S, e) => {\n      const t = o.parse(S);\n      return r[e] ? v.edit(e, \"servers\", [\n        ...r[e].servers,\n        t.uid\n      ]) : f[e] && d.edit(e, \"servers\", [...f[e].servers, t.uid]), s.add(t), t;\n    },\n    deleteServer: (S, e) => {\n      r[e] && (v.edit(\n        e,\n        \"servers\",\n        r[e].servers.filter((t) => t !== S)\n      ), s.delete(S));\n    }\n  };\n}\nexport {\n  R as createStoreServers,\n  h as extendedServerDataFactory\n};\n", "import { tagSchema as o } from \"@scalar/oas-utils/entities/spec\";\nimport { schemaModel as T } from \"@scalar/oas-utils/helpers\";\nimport { LS_KEYS as p } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as A } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as g } from \"vue\";\nfunction L(d) {\n  const a = g({}), s = A(a, g({}), d && p.TAG);\n  return {\n    tags: a,\n    tagMutators: s\n  };\n}\nfunction q({\n  collectionMutators: d,\n  collections: a,\n  requests: s,\n  requestMutators: c,\n  tagMutators: m\n}) {\n  return { addTag: (t, n) => {\n    const r = a[n], e = T(t, o, !1);\n    return !e || !r ? console.error(\"INVALID TAG DATA\", t) : (d.edit(n, \"tags\", [...r.tags, e.uid]), d.edit(n, \"children\", [...r.children, e.uid]), m.add(e), e);\n  }, deleteTag: (t, n) => {\n    const r = a[n];\n    r && (d.edit(\n      n,\n      \"tags\",\n      r.tags.filter((e) => e !== t.uid)\n    ), d.edit(\n      n,\n      \"children\",\n      r.children.filter((e) => e !== t.uid)\n    ), t.children.forEach((e) => {\n      var u;\n      const f = s[e];\n      if (!f)\n        return;\n      const i = (u = f.tags) == null ? void 0 : u.filter((h) => h !== t.name);\n      c.edit(f.uid, \"tags\", i), !(i != null && i.length) && !r.children.includes(e) && d.edit(n, \"children\", [...r.children, e]);\n    }), m.delete(t.uid));\n  } };\n}\nexport {\n  L as createStoreTags,\n  q as extendedTagDataFactory\n};\n", "const defaultFonts = '/* Inter (--scalar-font) */\\n/* cyrillic-ext */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-cyrillic-ext.woff2) format(\"woff2\");\\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\\n}\\n/* cyrillic */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-cyrillic.woff2) format(\"woff2\");\\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\\n}\\n/* greek-ext */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-greek-ext.woff2) format(\"woff2\");\\n  unicode-range: U+1F00-1FFF;\\n}\\n/* greek */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-greek.woff2) format(\"woff2\");\\n  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;\\n}\\n/* vietnamese */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-vietnamese.woff2) format(\"woff2\");\\n  unicode-range:\\n    U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169,\\n    U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323,\\n    U+0329, U+1EA0-1EF9, U+20AB;\\n}\\n/* latin-ext */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-latin-ext.woff2) format(\"woff2\");\\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,\\n    U+2C60-2C7F, U+A720-A7FF;\\n}\\n/* latin */\\n@font-face {\\n  font-family: \"Inter\";\\n  font-style: normal;\\n  font-weight: 100 900;\\n  font-display: swap;\\n  src: url(https://fonts.scalar.com/inter-latin.woff2) format(\"woff2\");\\n  unicode-range:\\n    U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\\n    U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191,\\n    U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n/* JetBrains Mono (--scalar-font-code) */\\n/* cyrillic-ext */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-cyrillic-ext.woff2) format(\"woff2\");\\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\\n}\\n/* cyrillic */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-cyrillic.woff2) format(\"woff2\");\\n  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\\n}\\n/* greek */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-greek.woff2) format(\"woff2\");\\n  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;\\n}\\n/* vietnamese */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-vietnamese.woff2) format(\"woff2\");\\n  unicode-range:\\n    U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169,\\n    U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323,\\n    U+0329, U+1EA0-1EF9, U+20AB;\\n}\\n/* latin-ext */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-latin-ext.woff2) format(\"woff2\");\\n  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,\\n    U+2C60-2C7F, U+A720-A7FF;\\n}\\n/* latin */\\n@font-face {\\n  font-family: \"JetBrains Mono\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.scalar.com/mono-latin.woff2) format(\"woff2\");\\n  unicode-range:\\n    U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\\n    U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191,\\n    U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n';\nexport {\n  defaultFonts as default\n};\n", "const alternateTheme = \"/* basic theme */\\n:root {\\n  --scalar-text-decoration: underline;\\n  --scalar-text-decoration-hover: underline;\\n}\\n\\n.dark-mode {\\n  --scalar-background-1: #131313;\\n  --scalar-background-2: #1d1d1d;\\n  --scalar-background-3: #272727;\\n  --scalar-background-card: #1d1d1d;\\n\\n  --scalar-color-1: rgba(255, 255, 255, 0.9);\\n  --scalar-color-2: rgba(255, 255, 255, 0.62);\\n  --scalar-color-3: rgba(255, 255, 255, 0.44);\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-background-accent: var(--scalar-background-3);\\n\\n  --scalar-border-color: #2a2b2a;\\n}\\n\\n.light-mode,\\n.light-mode .dark-mode {\\n  --scalar-background-1: #f9f9f9;\\n  --scalar-background-2: #f1f1f1;\\n  --scalar-background-3: #e7e7e7;\\n  --scalar-background-card: #fff;\\n\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-background-accent: var(--scalar-background-3);\\n\\n  --scalar-border-color: rgba(0, 0, 0, 0.1);\\n}\\n\\n/* Document Sidebar */\\n.t-doc__sidebar {\\n  --scalar-color-green: var(--scalar-color-1);\\n  --scalar-color-red: var(--scalar-color-1);\\n  --scalar-color-yellow: var(--scalar-color-1);\\n  --scalar-color-blue: var(--scalar-color-1);\\n  --scalar-color-orange: var(--scalar-color-1);\\n  --scalar-color-purple: var(--scalar-color-1);\\n}\\n\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: transparent;\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n}\\n/* advanced */\\n.light-mode .dark-mode,\\n.light-mode {\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: #00b648;\\n  --scalar-color-red: #dd2f2c;\\n  --scalar-color-yellow: #ffc90d;\\n  --scalar-color-blue: #4eb3ec;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n\\n.scalar-api-client__item,\\n.scalar-card,\\n.dark-mode .dark-mode.scalar-card {\\n  --scalar-background-1: var(--scalar-background-card);\\n  --scalar-background-2: var(--scalar-background-1);\\n  --scalar-background-3: var(--scalar-background-1);\\n}\\n.dark-mode .dark-mode.scalar-card {\\n  --scalar-background-3: var(--scalar-background-3);\\n}\\n\\n.light-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-blue), transparent 70%);\\n}\\n.dark-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-blue), transparent 50%);\\n}\\n\";\nexport {\n  alternateTheme as default\n};\n", "const bluePlanetTheme = \"/* basic theme */\\n:root {\\n  --scalar-text-decoration: underline;\\n  --scalar-text-decoration-hover: underline;\\n}\\n.light-mode {\\n  --scalar-background-1: #f0f2f5;\\n  --scalar-background-2: #eaecf0;\\n  --scalar-background-3: #e0e2e6;\\n  --scalar-border-color: rgb(213 213 213);\\n\\n  --scalar-color-1: rgb(9, 9, 11);\\n  --scalar-color-2: rgb(113, 113, 122);\\n  --scalar-color-3: rgba(25, 25, 28, 0.5);\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-background-accent: #8ab4f81f;\\n}\\n.light-mode .scalar-card.dark-mode,\\n.dark-mode {\\n  --scalar-background-1: #000e23;\\n  --scalar-background-2: #01132e;\\n  --scalar-background-3: #03193b;\\n  --scalar-border-color: #2e394c;\\n\\n  --scalar-color-1: #fafafa;\\n  --scalar-color-2: rgb(161, 161, 170);\\n  --scalar-color-3: rgba(255, 255, 255, 0.533);\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-background-accent: #8ab4f81f;\\n\\n  --scalar-code-language-color-supersede: var(--scalar-color-1);\\n}\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-3);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: rgba(255, 255, 255, 0.1);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  z-index: 1;\\n}\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-search-background: white;\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: rgba(69, 255, 165, 0.823);\\n  --scalar-color-red: #ff8589;\\n  --scalar-color-yellow: #ffcc4d;\\n  --scalar-color-blue: #6bc1fe;\\n  --scalar-color-orange: #f98943;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n/* Custom theme */\\n/* Document header */\\n@keyframes headerbackground {\\n  from {\\n    background: transparent;\\n    backdrop-filter: none;\\n  }\\n  to {\\n    background: var(--scalar-header-background-1);\\n    backdrop-filter: blur(12px);\\n  }\\n}\\n\\n.light-mode .t-doc__header,\\n.dark-mode .t-doc__header {\\n  animation: headerbackground forwards;\\n  animation-timeline: scroll();\\n  animation-range: 0px 200px;\\n}\\n\\n/* Document Layout */\\n.dark-mode .t-doc .layout-content {\\n  background: transparent;\\n}\\n\\n.dark-mode h2.t-editor__heading,\\n.dark-mode .t-editor__page-title h1,\\n.dark-mode h1.section-header:not(::selection),\\n.dark-mode .markdown h1,\\n.dark-mode .markdown h2,\\n.dark-mode .markdown h3,\\n.dark-mode .markdown h4,\\n.dark-mode .markdown h5,\\n.dark-mode .markdown h6 {\\n  -webkit-text-fill-color: transparent;\\n  background-image: linear-gradient(to right bottom, rgb(255, 255, 255) 30%, rgba(255, 255, 255, 0.38));\\n  -webkit-background-clip: text;\\n  background-clip: text;\\n}\\n/* Hero Section Flare */\\n.section-flare-item:nth-of-type(1) {\\n  --c1: #ffffff;\\n  --c2: #babfd8;\\n  --c3: #2e8bb2;\\n  --c4: #1a8593;\\n  --c5: #0a143e;\\n  --c6: #0a0f52;\\n  --c7: #2341b8;\\n\\n  --solid: var(--c1), var(--c2), var(--c3), var(--c4), var(--c5), var(--c6), var(--c7);\\n  --solid-wrap: var(--solid), var(--c1);\\n  --trans:\\n    var(--c1), transparent, var(--c2), transparent, var(--c3),\\n    transparent, var(--c4), transparent, var(--c5), transparent, var(--c6),\\n    transparent, var(--c7);\\n  --trans-wrap: var(--trans), transparent, var(--c1);\\n\\n  background: radial-gradient(circle, var(--trans)), conic-gradient(from 180deg, var(--trans-wrap)),\\n    radial-gradient(circle, var(--trans)), conic-gradient(var(--solid-wrap));\\n  width: 70vw;\\n  height: 700px;\\n  border-radius: 50%;\\n  filter: blur(100px);\\n  z-index: 0;\\n  right: 0;\\n  position: absolute;\\n  transform: rotate(-45deg);\\n  top: -300px;\\n  opacity: 0.3;\\n}\\n.section-flare-item:nth-of-type(3) {\\n  --star-color: #6b9acc;\\n  --star-color2: #446b8d;\\n  --star-color3: #3e5879;\\n  background-image: radial-gradient(2px 2px at 20px 30px, var(--star-color2), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 40px 70px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 50px 160px, var(--star-color3), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 90px 40px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 130px 80px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 160px 120px, var(--star-color3), rgba(0, 0, 0, 0));\\n  background-repeat: repeat;\\n  background-size: 200px 200px;\\n  width: 100%;\\n  height: 100%;\\n  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n}\\n.section-flare {\\n  top: -150px !important;\\n  height: 100vh;\\n  background: linear-gradient(#000, var(--scalar-background-1));\\n  width: 100vw;\\n  overflow-x: hidden;\\n}\\n.light-mode .section-flare {\\n  display: none;\\n}\\n.light-mode .scalar-card {\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #fff;\\n  --scalar-background-3: #fff;\\n}\\n\\n*::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-blue), transparent 60%);\\n}\\n\\n@media (max-width: 1000px) {\\n  .light-mode .t-doc__sidebar,\\n  .dark-mode .t-doc__sidebar {\\n    --scalar-sidebar-background-1: var(--scalar-background-1);\\n  }\\n  .light-mode .t-doc__header,\\n  .dark-mode .t-doc__header {\\n    animation: none;\\n    background: var(--scalar-header-background-1);\\n    backdrop-filter: blur(12px);\\n  }\\n}\\n\";\nexport {\n  bluePlanetTheme as default\n};\n", "const deepSpaceTheme = '/* basic theme */\\n:root {\\n  --scalar-text-decoration: underline;\\n  --scalar-text-decoration-hover: underline;\\n}\\n.light-mode {\\n  --scalar-color-1: rgb(9, 9, 11);\\n  --scalar-color-2: rgb(113, 113, 122);\\n  --scalar-color-3: rgba(25, 25, 28, 0.5);\\n  --scalar-color-accent: var(--scalar-color-1);\\n\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f4f4f5;\\n  --scalar-background-3: #e3e3e6;\\n  --scalar-background-accent: #8ab4f81f;\\n\\n  --scalar-border-color: rgb(228, 228, 231);\\n  --scalar-code-language-color-supersede: var(--scalar-color-1);\\n}\\n.dark-mode {\\n  --scalar-color-1: #fafafa;\\n  --scalar-color-2: rgb(161, 161, 170);\\n  --scalar-color-3: rgba(255, 255, 255, 0.533);\\n  --scalar-color-accent: var(--scalar-color-1);\\n\\n  --scalar-background-1: #09090b;\\n  --scalar-background-2: #18181b;\\n  --scalar-background-3: #2c2c30;\\n  --scalar-background-accent: #8ab4f81f;\\n\\n  --scalar-border-color: rgba(255, 255, 255, 0.16);\\n  --scalar-code-language-color-supersede: var(--scalar-color-1);\\n}\\n\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-3);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: transparent;\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n}\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-item-active-background: var(--scalar-background-2);\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: rgba(69, 255, 165, 0.823);\\n  --scalar-color-red: #ff8589;\\n  --scalar-color-yellow: #ffcc4d;\\n  --scalar-color-blue: #6bc1fe;\\n  --scalar-color-orange: #f98943;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n/* Custom theme */\\n.dark-mode h2.t-editor__heading,\\n.dark-mode .t-editor__page-title h1,\\n.dark-mode h1.section-header:not(::selection),\\n.dark-mode .markdown h1,\\n.dark-mode .markdown h2,\\n.dark-mode .markdown h3,\\n.dark-mode .markdown h4,\\n.dark-mode .markdown h5,\\n.dark-mode .markdown h6 {\\n  -webkit-text-fill-color: transparent;\\n  background-image: linear-gradient(to right bottom, rgb(255, 255, 255) 30%, rgba(255, 255, 255, 0.38));\\n  -webkit-background-clip: text;\\n  background-clip: text;\\n}\\n.examples .scalar-card-footer {\\n  --scalar-background-3: transparent;\\n  padding-top: 0;\\n}\\n/* Hero section flare */\\n.section-flare {\\n  width: 100vw;\\n  height: 550px;\\n  position: absolute;\\n}\\n.section-flare-item:nth-of-type(1) {\\n  position: absolute;\\n  width: 100vw;\\n  height: 550px;\\n  --stripesDark: repeating-linear-gradient(100deg, #000 0%, #000 7%, transparent 10%, transparent 12%, #000 16%);\\n  --rainbow: repeating-linear-gradient(100deg, #fff 10%, #fff 16%, #fff 22%, #fff 30%);\\n  background-image: var(--stripesDark), var(--rainbow);\\n  background-size: 300%, 200%;\\n  background-position: 50% 50%, 50% 50%;\\n  filter: invert(100%);\\n  -webkit-mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n  pointer-events: none;\\n  opacity: 0.07;\\n}\\n.dark-mode .section-flare-item:nth-of-type(1) {\\n  background-image: var(--stripesDark), var(--rainbow);\\n  filter: opacity(50%) saturate(200%);\\n  opacity: 0.25;\\n  height: 350px;\\n}\\n.section-flare-item:nth-of-type(1):after {\\n  content: \"\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-image: var(--stripesDark), var(--rainbow);\\n  background-size: 200%, 100%;\\n  background-attachment: fixed;\\n  mix-blend-mode: difference;\\n}\\n.dark-mode .section-flare:after {\\n  background-image: var(--stripesDark), var(--rainbow);\\n}\\n.section-flare-item:nth-of-type(2) {\\n  --star-color: #fff;\\n  --star-color2: #fff;\\n  --star-color3: #fff;\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  background-image: radial-gradient(2px 2px at 20px 30px, var(--star-color2), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 40px 70px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 50px 160px, var(--star-color3), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 90px 40px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 130px 80px, var(--star-color), rgba(0, 0, 0, 0)),\\n    radial-gradient(2px 2px at 160px 120px, var(--star-color3), rgba(0, 0, 0, 0));\\n  background-repeat: repeat;\\n  background-size: 200px 200px;\\n  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n  opacity: 0.2;\\n}\\n.light-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-blue), transparent 70%);\\n}\\n.dark-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-blue), transparent 50%);\\n}\\n\\n/* document header */\\n.light-mode .t-doc__header,\\n.dark-mode .t-doc__header {\\n  animation: headerbackground forwards;\\n  animation-timeline: scroll();\\n  animation-range: 0px 200px;\\n}\\n@keyframes headerbackground {\\n  from {\\n    background: transparent;\\n    backdrop-filter: none;\\n  }\\n  to {\\n    background: var(--scalar-header-background-1);\\n    backdrop-filter: blur(12px);\\n  }\\n}\\n/* remove flare on safari to prevent dropped frames on scroll */\\n@supports (-webkit-hyphens: none) {\\n  .section-flare {\\n    display: none;\\n  }\\n}\\n\\n/* document background */\\n.light-mode .t-doc .layout-content,\\n.dark-mode .t-doc .layout-content {\\n  background: transparent;\\n}\\n';\nexport {\n  deepSpaceTheme as default\n};\n", "const defaultTheme = \"/* basic theme */\\n:root {\\n  --scalar-text-decoration: underline;\\n  --scalar-text-decoration-hover: underline;\\n}\\n.light-mode {\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f6f6f6;\\n  --scalar-background-3: #e7e7e7;\\n  --scalar-background-accent: #8ab4f81f;\\n\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-border-color: #dfdfdf;\\n}\\n.dark-mode {\\n  --scalar-background-1: #0f0f0f;\\n  --scalar-background-2: #1a1a1a;\\n  --scalar-background-3: #272727;\\n\\n  --scalar-color-1: #e7e7e7;\\n  --scalar-color-2: #a4a4a4;\\n  --scalar-color-3: #797979;\\n\\n  --scalar-color-accent: var(--scalar-color-1);\\n  --scalar-background-accent: #3ea6ff1f;\\n\\n  --scalar-border-color: #2d2d2d;\\n}\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-1);\\n\\n  --scalar-sidebar-indent-border: var(--scalar-sidebar-border-color);\\n  --scalar-sidebar-indent-border-hover: var(--scalar-sidebar-border-color);\\n  --scalar-sidebar-indent-border-active: var(--scalar-sidebar-border-color);\\n\\n  --scalar-sidebar-search-background: transparent;\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n\\n  --scalar-tooltip-background: color-mix(in srgb, #1a1a1a, transparent 10%);\\n  --scalar-tooltip-color: color-mix(in srgb, #fff, transparent 15%);\\n\\n  --scalar-color-alert: color-mix(in srgb, var(--scalar-color-orange), var(--scalar-color-1) 20%);\\n  --scalar-color-danger: color-mix(in srgb, var(--scalar-color-red), var(--scalar-color-1) 20%);\\n\\n  --scalar-background-alert: color-mix(in srgb, var(--scalar-color-orange), var(--scalar-background-1) 95%);\\n  --scalar-background-danger: color-mix(in srgb, var(--scalar-color-red), var(--scalar-background-1) 95%);\\n}\\n.dark-mode {\\n  --scalar-color-green: #00b648;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #ffc90d;\\n  --scalar-color-blue: #4eb3ec;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n\\n  --scalar-tooltip-background: color-mix(in srgb, var(--scalar-background-1), #fff 10%);\\n  --scalar-tooltip-color: color-mix(in srgb, #fff, transparent 5%);\\n\\n  --scalar-color-danger: color-mix(in srgb, var(--scalar-color-red), var(--scalar-background-1) 20%);\\n\\n  --scalar-background-alert: color-mix(in srgb, var(--scalar-color-orange), var(--scalar-background-1) 95%);\\n  --scalar-background-danger: color-mix(in srgb, var(--scalar-color-red), var(--scalar-background-1) 95%);\\n}\\n@supports (color: color(display-p3 1 1 1)) {\\n  .light-mode {\\n    --scalar-color-accent: var(--scalar-color-1);\\n    --scalar-color-green: color(display-p3 0.023529 0.564706 0.380392 / 1.0);\\n    --scalar-color-red: color(display-p3 0.937255 0.0 0.023529 / 1.0);\\n    --scalar-color-yellow: color(display-p3 0.929412 0.745098 0.12549 / 1.0);\\n    --scalar-color-blue: color(display-p3 0.0 0.509804 0.815686 / 1.0);\\n    --scalar-color-orange: color(display-p3 0.984314 0.537255 0.172549 / 1.0);\\n    --scalar-color-purple: color(display-p3 0.321569 0.011765 0.819608 / 1.0);\\n  }\\n  .dark-mode {\\n    --scalar-color-accent: var(--scalar-color-1);\\n    --scalar-color-green: color(display-p3 0.0 0.713725 0.282353 / 1.0);\\n    --scalar-color-red: color(display-p3 0.862745 0.105882 0.098039 / 1.0);\\n    --scalar-color-yellow: color(display-p3 1.0 0.788235 0.05098 / 1.0);\\n    --scalar-color-blue: color(display-p3 0.305882 0.701961 0.92549 / 1.0);\\n    --scalar-color-orange: color(display-p3 1.0 0.552941 0.301961 / 1.0);\\n    --scalar-color-purple: color(display-p3 0.694118 0.568627 0.976471 / 1.0);\\n  }\\n}\\n\";\nexport {\n  defaultTheme as default\n};\n", "const elysiajsTheme = '.light-mode {\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n  --scalar-color-accent: #f06292;\\n\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f6f6f6;\\n  --scalar-background-3: #e7e7e7;\\n\\n  --scalar-border-color: rgba(0, 0, 0, 0.1);\\n}\\n.dark-mode {\\n  --scalar-color-1: rgba(255, 255, 255, 0.9);\\n  --scalar-color-2: rgba(156, 163, 175, 1);\\n  --scalar-color-3: rgba(255, 255, 255, 0.44);\\n  --scalar-color-accent: #f06292;\\n\\n  --scalar-background-1: #111728;\\n  --scalar-background-2: #1e293b;\\n  --scalar-background-3: #334155;\\n  --scalar-background-accent: #f062921f;\\n\\n  --scalar-border-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: #f062921f;\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: transparent;\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n}\\n\\n/* advanced */\\n.light-mode {\\n  --scalar-button-1: rgb(49 53 56);\\n  --scalar-button-1-color: #fff;\\n  --scalar-button-1-hover: rgb(28 31 33);\\n\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-scrollbar-color: rgba(0, 0, 0, 0.18);\\n  --scalar-scrollbar-color-active: rgba(0, 0, 0, 0.36);\\n}\\n.dark-mode {\\n  --scalar-button-1: #f6f6f6;\\n  --scalar-button-1-color: #000;\\n  --scalar-button-1-hover: #e7e7e7;\\n\\n  --scalar-color-green: #a3ffa9;\\n  --scalar-color-red: #ffa3a3;\\n  --scalar-color-yellow: #fffca3;\\n  --scalar-color-blue: #a5d6ff;\\n  --scalar-color-orange: #e2ae83;\\n  --scalar-color-purple: #d2a8ff;\\n\\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\\n}\\n.section-flare {\\n  width: 100%;\\n  height: 400px;\\n  position: absolute;\\n}\\n.section-flare-item:first-of-type:before {\\n  content: \"\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  --stripes: repeating-linear-gradient(100deg, #fff 0%, #fff 0%, transparent 2%, transparent 12%, #fff 17%);\\n  --stripesDark: repeating-linear-gradient(100deg, #000 0%, #000 0%, transparent 10%, transparent 12%, #000 17%);\\n  --rainbow: repeating-linear-gradient(100deg, #60a5fa 10%, #e879f9 16%, #5eead4 22%, #60a5fa 30%);\\n  contain: strict;\\n  contain-intrinsic-size: 100vw 40vh;\\n  background-image: var(--stripesDark), var(--rainbow);\\n  background-size: 300%, 200%;\\n  background-position: 50% 50%, 50% 50%;\\n  filter: opacity(20%) saturate(200%);\\n  -webkit-mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);\\n  pointer-events: none;\\n}\\n.section-flare-item:first-of-type:after {\\n  content: \"\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-image: var(--stripes), var(--rainbow);\\n  background-size: 200%, 100%;\\n  background-attachment: fixed;\\n  mix-blend-mode: difference;\\n  background-image: var(--stripesDark), var(--rainbow);\\n  pointer-events: none;\\n}\\n.light-mode .section-flare-item:first-of-type:after,\\n.light-mode .section-flare-item:first-of-type:before {\\n  background-image: var(--stripes), var(--rainbow);\\n  filter: opacity(4%) saturate(200%);\\n}\\n';\nexport {\n  elysiajsTheme as default\n};\n", "const fastifyTheme = \".light-mode {\\n  color-scheme: light;\\n  --scalar-color-1: #1c1e21;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n  --scalar-color-disabled: #b4b1b1;\\n  --scalar-color-ghost: #a7a7a7;\\n  --scalar-color-accent: #2f8555;\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f5f5f5;\\n  --scalar-background-3: #ededed;\\n  --scalar-background-4: rgba(0, 0, 0, 0.06);\\n  --scalar-background-accent: #2f85551f;\\n\\n  --scalar-border-color: rgba(0, 0, 0, 0.1);\\n  --scalar-scrollbar-color: rgba(0, 0, 0, 0.18);\\n  --scalar-scrollbar-color-active: rgba(0, 0, 0, 0.36);\\n  --scalar-lifted-brightness: 1;\\n  --scalar-backdrop-brightness: 1;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.11);\\n  --scalar-shadow-2: rgba(0, 0, 0, 0.08) 0px 13px 20px 0px, rgba(0, 0, 0, 0.08) 0px 3px 8px 0px, #eeeeed 0px 0 0 1px;\\n\\n  --scalar-button-1: rgb(49 53 56);\\n  --scalar-button-1-color: #fff;\\n  --scalar-button-1-hover: rgb(28 31 33);\\n\\n  --scalar-color-green: #007300;\\n  --scalar-color-red: #af272b;\\n  --scalar-color-yellow: #b38200;\\n  --scalar-color-blue: #3b8ba5;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n}\\n\\n.dark-mode {\\n  color-scheme: dark;\\n  --scalar-color-1: rgba(255, 255, 255, 0.9);\\n  --scalar-color-2: rgba(255, 255, 255, 0.62);\\n  --scalar-color-3: rgba(255, 255, 255, 0.44);\\n  --scalar-color-disabled: rgba(255, 255, 255, 0.34);\\n  --scalar-color-ghost: rgba(255, 255, 255, 0.26);\\n  --scalar-color-accent: #27c2a0;\\n  --scalar-background-1: #1b1b1d;\\n  --scalar-background-2: #242526;\\n  --scalar-background-3: #3b3b3b;\\n  --scalar-background-4: rgba(255, 255, 255, 0.06);\\n  --scalar-background-accent: #27c2a01f;\\n\\n  --scalar-border-color: rgba(255, 255, 255, 0.1);\\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\\n  --scalar-lifted-brightness: 1.45;\\n  --scalar-backdrop-brightness: 0.5;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgb(0, 0, 0, 0.1);\\n  --scalar-shadow-2: rgba(15, 15, 15, 0.2) 0px 3px 6px, rgba(15, 15, 15, 0.4) 0px 9px 24px, 0 0 0 1px\\n    rgba(255, 255, 255, 0.1);\\n\\n  --scalar-button-1: #f6f6f6;\\n  --scalar-button-1-color: #000;\\n  --scalar-button-1-hover: #e7e7e7;\\n\\n  --scalar-color-green: #26b226;\\n  --scalar-color-red: #fb565b;\\n  --scalar-color-yellow: #ffc426;\\n  --scalar-color-blue: #6ecfef;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n}\\n\";\nexport {\n  fastifyTheme as default\n};\n", "const keplerTheme = \"/* basic theme */\\n.light-mode {\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n  --scalar-color-accent: #7070ff;\\n\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f6f6f6;\\n  --scalar-background-3: #e7e7e7;\\n  --scalar-background-accent: #7070ff1f;\\n\\n  --scalar-border-color: rgba(0, 0, 0, 0.1);\\n\\n  --scalar-code-language-color-supersede: var(--scalar-color-3);\\n}\\n.dark-mode {\\n  --scalar-color-1: #f7f8f8;\\n  --scalar-color-2: rgb(180, 188, 208);\\n  --scalar-color-3: #b4bcd099;\\n  --scalar-color-accent: #828fff;\\n\\n  --scalar-background-1: #000212;\\n  --scalar-background-2: #0d0f1e;\\n  --scalar-background-3: #232533;\\n  --scalar-background-accent: #8ab4f81f;\\n\\n  --scalar-border-color: #313245;\\n  --scalar-code-language-color-supersede: var(--scalar-color-3);\\n}\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n  --scalar-sidebar-search-background: rgba(0, 0, 0, 0.05);\\n  --scalar-sidebar-search-border-color: 1px solid rgba(0, 0, 0, 0.05);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-background-2: rgba(0, 0, 0, 0.03);\\n}\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: rgba(255, 255, 255, 0.1);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n  --scalar-sidebar-search-background: rgba(255, 255, 255, 0.1);\\n  --scalar-sidebar-search-border-color: 1px solid rgba(255, 255, 255, 0.05);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #069061;\\n  --scalar-color-red: #ef0006;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #0082d0;\\n  --scalar-color-orange: #fb892c;\\n  --scalar-color-purple: #5203d1;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: #00b648;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #ffc90d;\\n  --scalar-color-blue: #4eb3ec;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n/* Custom Theme */\\n.dark-mode h2.t-editor__heading,\\n.dark-mode .t-editor__page-title h1,\\n.dark-mode h1.section-header:not(::selection),\\n.dark-mode .markdown h1,\\n.dark-mode .markdown h2,\\n.dark-mode .markdown h3,\\n.dark-mode .markdown h4,\\n.dark-mode .markdown h5,\\n.dark-mode .markdown h6 {\\n  -webkit-text-fill-color: transparent;\\n  background-image: linear-gradient(to right bottom, rgb(255, 255, 255) 30%, rgba(255, 255, 255, 0.38));\\n  -webkit-background-clip: text;\\n  background-clip: text;\\n}\\n.sidebar-search {\\n  backdrop-filter: blur(12px);\\n}\\n@keyframes headerbackground {\\n  from {\\n    background: transparent;\\n    backdrop-filter: none;\\n  }\\n  to {\\n    background: var(--scalar-header-background-1);\\n    backdrop-filter: blur(12px);\\n  }\\n}\\n.dark-mode .scalar-card {\\n  background: rgba(255, 255, 255, 0.05) !important;\\n}\\n.dark-mode .scalar-card * {\\n  --scalar-background-2: transparent !important;\\n  --scalar-background-1: transparent !important;\\n}\\n.light-mode .dark-mode.scalar-card *,\\n.light-mode .dark-mode.scalar-card {\\n  --scalar-background-1: #0d0f1e !important;\\n  --scalar-background-2: #0d0f1e !important;\\n  --scalar-background-3: #191b29 !important;\\n}\\n.light-mode .dark-mode.scalar-card {\\n  background: #191b29 !important;\\n}\\n.badge {\\n  box-shadow: 0 0 0 1px var(--scalar-border-color);\\n  margin-right: 6px;\\n}\\n\\n.table-row.required-parameter .table-row-item:nth-of-type(2):after {\\n  background: transparent;\\n  box-shadow: none;\\n}\\n/* Hero Section Flare */\\n.section-flare {\\n  width: 100vw;\\n  background: radial-gradient(ellipse 80% 50% at 50% -20%, rgba(120, 119, 198, 0.3), transparent);\\n  height: 100vh;\\n}\\n.light-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 70%);\\n}\\n.dark-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 50%);\\n}\\n\\n/* document layout */\\n.light-mode .t-doc .layout-content,\\n.dark-mode .t-doc .layout-content {\\n  background: transparent;\\n}\\n\";\nexport {\n  keplerTheme as default\n};\n", "const marsTheme = \"/* basic theme */\\n:root {\\n  --scalar-text-decoration: underline;\\n  --scalar-text-decoration-hover: underline;\\n}\\n.light-mode {\\n  --scalar-background-1: #f9f6f0;\\n  --scalar-background-2: #f2efe8;\\n  --scalar-background-3: #e9e7e2;\\n  --scalar-border-color: rgba(203, 165, 156, 0.6);\\n\\n  --scalar-color-1: #c75549;\\n  --scalar-color-2: #c75549;\\n  --scalar-color-3: #c75549;\\n\\n  --scalar-color-accent: #c75549;\\n  --scalar-background-accent: #dcbfa81f;\\n\\n  --scalar-code-language-color-supersede: var(--scalar-color-1);\\n}\\n.dark-mode {\\n  --scalar-background-1: #140507;\\n  --scalar-background-2: #20090c;\\n  --scalar-background-3: #321116;\\n  --scalar-border-color: #3c3031;\\n\\n  --scalar-color-1: rgba(255, 255, 255, 0.9);\\n  --scalar-color-2: rgba(255, 255, 255, 0.62);\\n  --scalar-color-3: rgba(255, 255, 255, 0.44);\\n\\n  --scalar-color-accent: rgba(255, 255, 255, 0.9);\\n  --scalar-background-accent: #441313;\\n\\n  --scalar-code-language-color-supersede: var(--scalar-color-1);\\n}\\n\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-3);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: rgba(255, 255, 255, 0.1);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n  z-index: 1;\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #09533a;\\n  --scalar-color-red: #aa181d;\\n  --scalar-color-yellow: #ab8d2b;\\n  --scalar-color-blue: #19689a;\\n  --scalar-color-orange: #b26c34;\\n  --scalar-color-purple: #4c2191;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: rgba(69, 255, 165, 0.823);\\n  --scalar-color-red: #ff8589;\\n  --scalar-color-yellow: #ffcc4d;\\n  --scalar-color-blue: #6bc1fe;\\n  --scalar-color-orange: #f98943;\\n  --scalar-color-purple: #b191f9;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n/* Custom Theme */\\n.dark-mode h2.t-editor__heading,\\n.dark-mode .t-editor__page-title h1,\\n.dark-mode h1.section-header:not(::selection),\\n.dark-mode .markdown h1,\\n.dark-mode .markdown h2,\\n.dark-mode .markdown h3,\\n.dark-mode .markdown h4,\\n.dark-mode .markdown h5,\\n.dark-mode .markdown h6 {\\n  -webkit-text-fill-color: transparent;\\n  background-image: linear-gradient(to right bottom, rgb(255, 255, 255) 30%, rgba(255, 255, 255, 0.38));\\n  -webkit-background-clip: text;\\n  background-clip: text;\\n}\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-search-background: white;\\n}\\n.examples .scalar-card-footer {\\n  --scalar-background-3: transparent;\\n  padding-top: 0;\\n}\\n/* Hero section flare */\\n.section-flare {\\n  overflow-x: hidden;\\n  height: 100vh;\\n  left: initial;\\n}\\n.section-flare-item:nth-of-type(1) {\\n  background: #d25019;\\n  position: relative;\\n  top: -150px;\\n  right: -400px;\\n  width: 80vw;\\n  height: 500px;\\n  margin-top: -150px;\\n  border-radius: 50%;\\n  filter: blur(100px);\\n  z-index: 0;\\n}\\n.light-mode .section-flare {\\n  display: none;\\n}\\n*::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-red), transparent 75%);\\n}\\n\\n/* document layout */\\n.dark-mode .t-doc .layout-content {\\n  background: transparent;\\n}\\n\";\nexport {\n  marsTheme as default\n};\n", "const moonTheme = \".light-mode {\\n  color-scheme: light;\\n  --scalar-color-1: #000000;\\n  --scalar-color-2: #000000;\\n  --scalar-color-3: #000000;\\n  --scalar-color-accent: #645b0f;\\n  --scalar-background-1: #ccc9b3;\\n  --scalar-background-2: #c2bfaa;\\n  --scalar-background-3: #b8b5a1;\\n  --scalar-background-accent: #000000;\\n\\n  --scalar-border-color: rgba(0, 0, 0, 0.2);\\n  --scalar-scrollbar-color: rgba(0, 0, 0, 0.18);\\n  --scalar-scrollbar-color-active: rgba(0, 0, 0, 0.36);\\n  --scalar-lifted-brightness: 1;\\n  --scalar-backdrop-brightness: 1;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.11);\\n  --scalar-shadow-2: rgba(0, 0, 0, 0.08) 0px 13px 20px 0px, rgba(0, 0, 0, 0.08) 0px 3px 8px 0px,\\n    var(--scalar-border-color) 0px 0 0 1px;\\n\\n  --scalar-button-1: rgb(49 53 56);\\n  --scalar-button-1-color: #fff;\\n  --scalar-button-1-hover: rgb(28 31 33);\\n\\n  --scalar-color-red: #b91c1c;\\n  --scalar-color-orange: #a16207;\\n  --scalar-color-green: #047857;\\n  --scalar-color-blue: #1d4ed8;\\n  --scalar-color-orange: #c2410c;\\n  --scalar-color-purple: #6d28d9;\\n}\\n\\n.dark-mode {\\n  color-scheme: dark;\\n  --scalar-color-1: #fffef3;\\n  --scalar-color-2: #fffef3;\\n  --scalar-color-3: #fffef3;\\n  --scalar-color-accent: #c3b531;\\n  --scalar-background-1: #313332;\\n  --scalar-background-2: #393b3a;\\n  --scalar-background-3: #414342;\\n  --scalar-background-accent: #fffef3;\\n\\n  --scalar-border-color: #505452;\\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\\n  --scalar-lifted-brightness: 1.45;\\n  --scalar-backdrop-brightness: 0.5;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.11);\\n  --scalar-shadow-2: rgba(15, 15, 15, 0.2) 0px 3px 6px, rgba(15, 15, 15, 0.4) 0px 9px 24px, 0 0 0 1px\\n    rgba(255, 255, 255, 0.1);\\n\\n  --scalar-button-1: #f6f6f6;\\n  --scalar-button-1-color: #000;\\n  --scalar-button-1-hover: #e7e7e7;\\n\\n  --scalar-color-green: #00b648;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #ffc90d;\\n  --scalar-color-blue: #4eb3ec;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n}\\n\\n/* Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-3);\\n  --scalar-sidebar-color-active: var(--scalar-color-1);\\n\\n  --scalar-sidebar-search-background: transparent;\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n}\\n*::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 80%);\\n}\\n\";\nexport {\n  moonTheme as default\n};\n", "const laserwaveTheme = \"/* basic theme */\\n.light-mode {\\n  color-scheme: light;\\n  --scalar-color-1: #322b3b;\\n  --scalar-color-2: #645676;\\n  --scalar-color-3: #9789a9;\\n  --scalar-color-accent: #40b4c4;\\n\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f4f2f7;\\n  --scalar-background-3: #cfc7dc;\\n  --scalar-background-accent: #f3fafb;\\n\\n  --scalar-border-color: #e4e0eb;\\n}\\n.dark-mode {\\n  color-scheme: dark;\\n  --scalar-color-1: #fff;\\n  --scalar-color-2: #b8b6ba;\\n  --scalar-color-3: #706c74;\\n  --scalar-color-accent: #ed78c2;\\n\\n  --scalar-background-1: #27212e;\\n  --scalar-background-2: #322c39;\\n  --scalar-background-3: #4c4059;\\n  --scalar-background-accent: #eb64b91f;\\n\\n  --scalar-border-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n/* Sidebar */\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n  --scalar-sidebar-search-background: var(--scalar-background-2);\\n  --scalar-sidebar-search-border-color: var(--scalar-sidebar-border-color);\\n  --scalar-sidebar-search--color: var(--scalar-color-3);\\n}\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n  --scalar-sidebar-search-background: var(--scalar-background-2);\\n  --scalar-sidebar-search-border-color: #514c56;\\n  --scalar-sidebar-search--color: var(--scalar-color-3);\\n}\\n/* advanced */\\n.light-mode {\\n  --scalar-button-1: rgb(49 53 56);\\n  --scalar-button-1-color: #fff;\\n  --scalar-button-1-hover: rgb(28 31 33);\\n\\n  --scalar-color-green: #74dfc4;\\n  --scalar-color-red: #d887f5;\\n  --scalar-color-yellow: #ffe261;\\n  --scalar-color-blue: #40b4c4;\\n  --scalar-color-orange: #ff52bf;\\n  --scalar-color-purple: #91889b;\\n\\n  --scalar-scrollbar-color: rgba(0, 0, 0, 0.18);\\n  --scalar-scrollbar-color-active: rgba(0, 0, 0, 0.36);\\n}\\n.dark-mode {\\n  --scalar-button-1: #f6f6f6;\\n  --scalar-button-1-color: #27212e;\\n  --scalar-button-1-hover: #e7e7e7;\\n\\n  --scalar-color-green: #74dfc4;\\n  --scalar-color-red: #d887f5;\\n  --scalar-color-yellow: #ffe261;\\n  --scalar-color-blue: #40b4c4;\\n  --scalar-color-orange: #ff52bf;\\n  --scalar-color-purple: #91889b;\\n\\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\\n}\\n/* Radius */\\n:root {\\n  --scalar-radius: 2px;\\n  --scalar-radius-lg: 3px;\\n  --scalar-radius-xl: 4px;\\n}\\n/* P3 color support */\\n@supports (color: color(display-p3 1 1 1)) {\\n  .light-mode {\\n    --scalar-color-accent: color(display-p3 0.25098 0.705882 0.768627 / 1.0);\\n    --scalar-color-green: color(display-p3 0.454902 0.87451 0.768627 / 1.0);\\n    --scalar-color-red: color(display-p3 0.847059 0.529412 0.960784 / 1.0);\\n    --scalar-color-yellow: color(display-p3 1.0 0.886275 0.380392 / 1.0);\\n    --scalar-color-blue: color(display-p3 0.25098 0.705882 0.768627 / 1.0);\\n    --scalar-color-orange: color(display-p3 1.0 0.321569 0.74902 / 1.0);\\n    --scalar-color-purple: color(display-p3 0.568627 0.533333 0.607843 / 1.0);\\n  }\\n  .dark-mode {\\n    --scalar-color-accent: color(display-p3 0.929412 0.470588 0.760784 / 1.0);\\n    --scalar-color-green: color(display-p3 0.454902 0.87451 0.768627 / 1.0);\\n    --scalar-color-red: color(display-p3 0.847059 0.529412 0.960784 / 1.0);\\n    --scalar-color-yellow: color(display-p3 1.0 0.886275 0.380392 / 1.0);\\n    --scalar-color-blue: color(display-p3 0.25098 0.705882 0.768627 / 1.0);\\n    --scalar-color-orange: color(display-p3 1.0 0.321569 0.74902 / 1.0);\\n    --scalar-color-purple: color(display-p3 0.568627 0.533333 0.607843 / 1.0);\\n  }\\n}\\n\";\nexport {\n  laserwaveTheme as default\n};\n", "const purpleTheme = \"/* basic theme */\\n.light-mode {\\n  --scalar-background-1: #fff;\\n  --scalar-background-2: #f5f6f8;\\n  --scalar-background-3: #eceef1;\\n\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n\\n  --scalar-color-accent: #5469d4;\\n  --scalar-background-accent: #5469d41f;\\n\\n  --scalar-border-color: rgba(215, 215, 206, 0.68);\\n}\\n.dark-mode {\\n  --scalar-background-1: #15171c;\\n  --scalar-background-2: #1c1e24;\\n  --scalar-background-3: #22252b;\\n\\n  --scalar-color-1: #fafafa;\\n  --scalar-color-2: #c9ced8;\\n  --scalar-color-3: #8c99ad;\\n\\n  --scalar-color-accent: #5469d4;\\n  --scalar-background-accent: #5469d41f;\\n\\n  --scalar-border-color: #3f4145;\\n}\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-3);\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n\\n  --scalar-sidebar-search-background: var(--scalar-background-1);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n}\\n\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #17803d;\\n  --scalar-color-red: #e10909;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #1763a6;\\n  --scalar-color-orange: #e25b09;\\n  --scalar-color-purple: #5c3993;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: #30a159;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #eec644;\\n  --scalar-color-blue: #2b7abf;\\n  --scalar-color-orange: #f07528;\\n  --scalar-color-purple: #7a59b1;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n.light-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 70%);\\n}\\n.dark-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 50%);\\n}\\n\";\nexport {\n  purpleTheme as default\n};\n", "const saturnTheme = \"/* basic theme */\\n.light-mode {\\n  --scalar-background-1: #f3f3ee;\\n  --scalar-background-2: #e8e8e3;\\n  --scalar-background-3: #e4e4df;\\n  --scalar-border-color: rgba(215, 215, 206, 0.85);\\n\\n  --scalar-color-1: #2a2f45;\\n  --scalar-color-2: #757575;\\n  --scalar-color-3: #8e8e8e;\\n\\n  --scalar-color-accent: #1763a6;\\n  --scalar-background-accent: #1f648e1f;\\n}\\n.dark-mode {\\n  --scalar-background-1: #09090b;\\n  --scalar-background-2: #18181b;\\n  --scalar-background-3: #2c2c30;\\n  --scalar-border-color: rgba(255, 255, 255, 0.17);\\n\\n  --scalar-color-1: #fafafa;\\n  --scalar-color-2: rgb(161, 161, 170);\\n  --scalar-color-3: rgba(255, 255, 255, 0.533);\\n\\n  --scalar-color-accent: #4eb3ec;\\n  --scalar-background-accent: #8ab4f81f;\\n}\\n/* Document Sidebar */\\n.light-mode .t-doc__sidebar,\\n.dark-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n\\n  --scalar-sidebar-item-active-background: var(--scalar-background-3);\\n  --scalar-sidebar-color-active: var(--scalar-color-1);\\n\\n  --scalar-sidebar-search-background: var(--scalar-background-1);\\n  --scalar-sidebar-search-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-search-color: var(--scalar-color-3);\\n}\\n\\n/* advanced */\\n.light-mode {\\n  --scalar-color-green: #17803d;\\n  --scalar-color-red: #e10909;\\n  --scalar-color-yellow: #edbe20;\\n  --scalar-color-blue: #1763a6;\\n  --scalar-color-orange: #e25b09;\\n  --scalar-color-purple: #5c3993;\\n\\n  --scalar-button-1: rgba(0, 0, 0, 1);\\n  --scalar-button-1-hover: rgba(0, 0, 0, 0.8);\\n  --scalar-button-1-color: rgba(255, 255, 255, 0.9);\\n}\\n.dark-mode {\\n  --scalar-color-green: #30a159;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #eec644;\\n  --scalar-color-blue: #2b7abf;\\n  --scalar-color-orange: #f07528;\\n  --scalar-color-purple: #7a59b1;\\n\\n  --scalar-button-1: rgba(255, 255, 255, 1);\\n  --scalar-button-1-hover: rgba(255, 255, 255, 0.9);\\n  --scalar-button-1-color: black;\\n}\\n.dark-mode h2.t-editor__heading,\\n.dark-mode .t-editor__page-title h1,\\n.dark-mode h1.section-header:not(::selection),\\n.dark-mode .markdown h1,\\n.dark-mode .markdown h2,\\n.dark-mode .markdown h3,\\n.dark-mode .markdown h4,\\n.dark-mode .markdown h5,\\n.dark-mode .markdown h6 {\\n  -webkit-text-fill-color: transparent;\\n  background-image: linear-gradient(to right bottom, rgb(255, 255, 255) 30%, rgba(255, 255, 255, 0.38));\\n  -webkit-background-clip: text;\\n  background-clip: text;\\n}\\n.light-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 70%);\\n}\\n.dark-mode *::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 50%);\\n}\\n\";\nexport {\n  saturnTheme as default\n};\n", "const solarizedTheme = \".light-mode {\\n  color-scheme: light;\\n  --scalar-color-1: #584c27;\\n  --scalar-color-2: #616161;\\n  --scalar-color-3: #a89f84;\\n  --scalar-color-accent: #b58900;\\n  --scalar-background-1: #fdf6e3;\\n  --scalar-background-2: #eee8d5;\\n  --scalar-background-3: #ddd6c1;\\n  --scalar-background-accent: #b589001f;\\n\\n  --scalar-border-color: #ded8c8;\\n  --scalar-scrollbar-color: rgba(0, 0, 0, 0.18);\\n  --scalar-scrollbar-color-active: rgba(0, 0, 0, 0.36);\\n  --scalar-lifted-brightness: 1;\\n  --scalar-backdrop-brightness: 1;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.11);\\n  --scalar-shadow-2: rgba(0, 0, 0, 0.08) 0px 13px 20px 0px, rgba(0, 0, 0, 0.08) 0px 3px 8px 0px, #eeeeed 0px 0 0 1px;\\n\\n  --scalar-button-1: rgb(49 53 56);\\n  --scalar-button-1-color: #fff;\\n  --scalar-button-1-hover: rgb(28 31 33);\\n\\n  --scalar-color-red: #b91c1c;\\n  --scalar-color-orange: #a16207;\\n  --scalar-color-green: #047857;\\n  --scalar-color-blue: #1d4ed8;\\n  --scalar-color-orange: #c2410c;\\n  --scalar-color-purple: #6d28d9;\\n}\\n\\n.dark-mode {\\n  color-scheme: dark;\\n  --scalar-color-1: #fff;\\n  --scalar-color-2: #cccccc;\\n  --scalar-color-3: #6d8890;\\n  --scalar-color-accent: #007acc;\\n  --scalar-background-1: #00212b;\\n  --scalar-background-2: #012b36;\\n  --scalar-background-3: #004052;\\n  --scalar-background-accent: #015a6f;\\n\\n  --scalar-border-color: #2f4851;\\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\\n  --scalar-lifted-brightness: 1.45;\\n  --scalar-backdrop-brightness: 0.5;\\n\\n  --scalar-shadow-1: 0 1px 3px 0 rgb(0, 0, 0, 0.1);\\n  --scalar-shadow-2: rgba(15, 15, 15, 0.2) 0px 3px 6px, rgba(15, 15, 15, 0.4) 0px 9px 24px, 0 0 0 1px\\n    rgba(255, 255, 255, 0.1);\\n\\n  --scalar-button-1: #f6f6f6;\\n  --scalar-button-1-color: #000;\\n  --scalar-button-1-hover: #e7e7e7;\\n\\n  --scalar-color-green: #00b648;\\n  --scalar-color-red: #dc1b19;\\n  --scalar-color-yellow: #ffc90d;\\n  --scalar-color-blue: #4eb3ec;\\n  --scalar-color-orange: #ff8d4d;\\n  --scalar-color-purple: #b191f9;\\n}\\n\\n/* Sidebar */\\n.light-mode .t-doc__sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\\n  --scalar-sidebar-search-background: var(--scalar-background-2);\\n  --scalar-sidebar-search-border-color: var(--scalar-sidebar-search-background);\\n  --scalar-sidebar-search--color: var(--scalar-color-3);\\n}\\n\\n.dark-mode .sidebar {\\n  --scalar-sidebar-background-1: var(--scalar-background-1);\\n  --scalar-sidebar-item-hover-color: currentColor;\\n  --scalar-sidebar-item-hover-background: var(--scalar-background-2);\\n  --scalar-sidebar-item-active-background: var(--scalar-background-accent);\\n  --scalar-sidebar-border-color: var(--scalar-border-color);\\n  --scalar-sidebar-color-1: var(--scalar-color-1);\\n  --scalar-sidebar-color-2: var(--scalar-color-2);\\n  --scalar-sidebar-color-active: var(--scalar-sidebar-color-1);\\n  --scalar-sidebar-search-background: var(--scalar-background-2);\\n  --scalar-sidebar-search-border-color: var(--scalar-sidebar-search-background);\\n  --scalar-sidebar-search--color: var(--scalar-color-3);\\n}\\n*::selection {\\n  background-color: color-mix(in srgb, var(--scalar-color-accent), transparent 70%);\\n}\\n\";\nexport {\n  solarizedTheme as default\n};\n", "function hasObtrusiveScrollbars() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  const parent = document.createElement(\"div\");\n  parent.setAttribute(\"style\", \"width:30px;height:30px;overflow-y:scroll;\");\n  parent.classList.add(\"scrollbar-test\");\n  const child = document.createElement(\"div\");\n  child.setAttribute(\"style\", \"width:100%;height:40px\");\n  parent.appendChild(child);\n  document.body.appendChild(parent);\n  const firstChild = parent.firstChild;\n  const scrollbarWidth = 30 - firstChild.clientWidth;\n  document.body.removeChild(parent);\n  return !!scrollbarWidth;\n}\nexport {\n  hasObtrusiveScrollbars\n};\n", "import defaultFonts from \"./fonts/fonts.css2.js\";\nimport alternateTheme from \"./presets/alternate.css.js\";\nimport bluePlanetTheme from \"./presets/bluePlanet.css.js\";\nimport deepSpaceTheme from \"./presets/deepSpace.css.js\";\nimport defaultTheme from \"./presets/default.css.js\";\nimport elysiajsTheme from \"./presets/elysiajs.css.js\";\nimport fastifyTheme from \"./presets/fastify.css.js\";\nimport keplerTheme from \"./presets/kepler.css.js\";\nimport marsTheme from \"./presets/mars.css.js\";\nimport moonTheme from \"./presets/moon.css.js\";\nimport laserwaveTheme from \"./presets/laserwave.css.js\";\nimport purpleTheme from \"./presets/purple.css.js\";\nimport saturnTheme from \"./presets/saturn.css.js\";\nimport solarizedTheme from \"./presets/solarized.css.js\";\nimport customThemeStarter from \"./presets/custom-theme-starter.css.js\";\nimport { hasObtrusiveScrollbars } from \"./utilities/has-obtrusive-scrollbars.js\";\nimport { nanoid } from \"nanoid\";\nconst themeIds = [\n  \"alternate\",\n  \"default\",\n  \"moon\",\n  \"purple\",\n  \"solarized\",\n  \"bluePlanet\",\n  \"deepSpace\",\n  \"saturn\",\n  \"kepler\",\n  \"elysiajs\",\n  \"fastify\",\n  \"mars\",\n  \"laserwave\",\n  \"none\"\n];\nconst themeLabels = {\n  default: \"Default\",\n  alternate: \"Alternate\",\n  moon: \"Moon\",\n  purple: \"Purple\",\n  solarized: \"Solarized\",\n  elysiajs: \"Elysia.js\",\n  fastify: \"Fastify\",\n  bluePlanet: \"Blue Planet\",\n  saturn: \"Saturn\",\n  kepler: \"Kepler-11e\",\n  mars: \"Mars\",\n  deepSpace: \"Deep Space\",\n  laserwave: \"Laserwave\",\n  none: \"\"\n};\nconst presets = {\n  default: {\n    uid: \"qTQR9jSM8E-LihpyZzPOi\",\n    name: \"Default\",\n    description: \"Default Scalar theme\",\n    theme: defaultTheme,\n    slug: \"default\"\n  },\n  alternate: {\n    uid: \"2skUDSH4S8HYFF9yXysr-\",\n    name: \"Alternate\",\n    description: \"Alternate Scalar theme\",\n    theme: alternateTheme,\n    slug: \"alternate\"\n  },\n  moon: {\n    uid: \"DG9ZUNp5lJhDeX_kPX4Bl\",\n    name: \"Moon\",\n    description: \"Lunar styles\",\n    theme: moonTheme,\n    slug: \"moon\"\n  },\n  purple: {\n    uid: \"pE_1ysxcZ-y2LM1GGNBUv\",\n    name: \"Purple\",\n    description: \"Purple Scalar theme\",\n    theme: purpleTheme,\n    slug: \"purple\"\n  },\n  solarized: {\n    uid: \"BdGVG1vf-4nYl3wJKyj8l\",\n    name: \"Solarized\",\n    description: \"Solarized Scalar theme\",\n    theme: solarizedTheme,\n    slug: \"solarized\"\n  },\n  bluePlanet: {\n    uid: \"X12IfAvl7ue-42V2lW40S\",\n    name: \"Blue Planet\",\n    description: \"Blue Planet Scalar theme\",\n    theme: bluePlanetTheme,\n    slug: \"blue-planet\"\n  },\n  deepSpace: {\n    uid: \"K8b38NWQiicq4-zXGXKdI\",\n    name: \"Deep Space\",\n    description: \"Deep Space Scalar theme\",\n    theme: deepSpaceTheme,\n    slug: \"deep-space\"\n  },\n  saturn: {\n    uid: \"1jyAjmbIZQG-RUU4Ugk9o\",\n    name: \"Saturn\",\n    description: \"Saturn Scalar theme\",\n    theme: saturnTheme,\n    slug: \"saturn\"\n  },\n  kepler: {\n    uid: \"jZ6dnWbtqQ0Hz3s9jLPH0\",\n    name: \"Kepler-11e\",\n    description: \"Kepler-11e Scalar theme\",\n    theme: keplerTheme,\n    slug: \"kepler-11e\"\n  },\n  mars: {\n    uid: \"YY4LQgwiXix55-TmMz9qd\",\n    name: \"Mars\",\n    description: \"Mars Scalar theme\",\n    theme: marsTheme,\n    slug: \"mars\"\n  },\n  laserwave: {\n    uid: \"c5fZEi-K-hP-xXf885dkf\",\n    name: \"Laserwave\",\n    description: \"Laserwave Scalar theme\",\n    theme: laserwaveTheme,\n    slug: \"laserwave\"\n  },\n  elysiajs: {\n    uid: \"nEVZkRmCylPkT0o9YJa7y\",\n    name: \"Elysia.js\",\n    description: \"Elysia.js theme\",\n    theme: elysiajsTheme,\n    slug: \"elysiajs\"\n  },\n  fastify: {\n    uid: \"nTZcdcM2_yHFZFxTQe9Kk\",\n    name: \"Fastify\",\n    description: \"Fastify theme\",\n    theme: fastifyTheme,\n    slug: \"fastify\"\n  }\n};\nconst themePresets = Object.values(presets);\nconst getStarterTheme = (name) => ({\n  name,\n  slug: name.normalize(\"NFC\").toLowerCase().trim().replace(/[^\\p{L}\\p{M}\\p{N}\\s-]/gu, \"\").replace(/[\\s-]+/g, \"-\").replace(/^-+|-+$/g, \"\").slice(0, 255),\n  description: \"\",\n  uid: nanoid(),\n  theme: customThemeStarter\n});\nconst getThemeStyles = (themeId, opts) => {\n  var _a;\n  const { fonts = true, layer = \"scalar-theme\" } = opts ?? {};\n  const styles = [\n    ((_a = presets[themeId || \"default\"]) == null ? void 0 : _a.theme) ?? defaultTheme,\n    fonts ? defaultFonts : \"\"\n  ].join(\"\");\n  if (layer) {\n    return `@layer ${layer} {\n${styles}}`;\n  }\n  return styles;\n};\nexport {\n  alternateTheme,\n  bluePlanetTheme,\n  deepSpaceTheme,\n  defaultFonts,\n  defaultTheme,\n  elysiajsTheme,\n  fastifyTheme,\n  getStarterTheme,\n  getThemeStyles,\n  hasObtrusiveScrollbars,\n  keplerTheme,\n  laserwaveTheme,\n  marsTheme,\n  moonTheme,\n  presets,\n  purpleTheme,\n  saturnTheme,\n  solarizedTheme,\n  themeIds,\n  themeLabels,\n  themePresets\n};\n", "/**\n * Array of all of the events that we support\n */\nexport const HOTKEY_EVENT_NAMES = [\n  'addTopNav',\n  'closeModal',\n  'closeTopNav',\n  'createNew',\n  'executeRequest',\n  'focusAddressBar',\n  'focusRequestSearch',\n  'jumpToLastTab',\n  'jumpToTab',\n  'navigateSearchResultsDown',\n  'navigateSearchResultsUp',\n  'navigateTopNavLeft',\n  'navigateTopNavRight',\n  'openCommandPalette',\n  'selectSearchResult',\n  'toggleSidebar',\n] as const\nexport type HotkeyEventName = (typeof HOTKEY_EVENT_NAMES)[number]\n\n/**\n * Array of all of the hotkeys that we support\n *\n * Space is a special case because its actually ' ' but we name it space here and will handle it separately\n * If you need more\n * @see https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n */\nexport const KEYDOWN_KEYS = [\n  'Space',\n  'Backspace',\n  'Tab',\n  'Enter',\n  'Escape',\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowUp',\n  'End',\n  'Home',\n  'PageDown',\n  'PageUp',\n  'Delete',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '*',\n  '+',\n  '-',\n  '.',\n  '/',\n  'F1',\n  'F2',\n  'F3',\n  'F4',\n  'F5',\n  'F6',\n  'F7',\n  'F8',\n  'F9',\n  'F10',\n  'F11',\n  'F12',\n  ';',\n  '=',\n  ',',\n  '-',\n  '.',\n  '/',\n  '`',\n  '[',\n  '\\\\',\n  ']',\n  '',\n] as const\nexport type KeydownKey = (typeof KEYDOWN_KEYS)[number]\n", "import { themeIds } from '@scalar/themes'\nimport { z } from 'zod'\n\nimport { type ENTITY_BRANDS, nanoidSchema } from '@scalar/types/utils'\nimport { HOTKEY_EVENT_NAMES, KEYDOWN_KEYS } from '../hotkeys/hotkeys'\n\nconst modifier = z\n  .enum(['Meta', 'Control', 'Shift', 'Alt', 'default'] as const)\n  .optional()\n  .default('default')\nconst modifiers = z.array(modifier).optional().default(['default'])\n\nexport type HotKeyModifiers = z.infer<typeof modifiers>\n\nconst hotKeys = z.record(\n  z.enum(KEYDOWN_KEYS),\n  z.object({\n    modifiers: modifiers.optional(),\n    event: z.enum(HOTKEY_EVENT_NAMES),\n  }),\n)\nexport type HotKeyConfig = z.infer<typeof hotKeys>\n\nconst hotKeyConfigSchema = z\n  .object({\n    modifiers,\n    hotKeys: hotKeys.optional(),\n  })\n  .optional()\n\nexport const workspaceSchema = z.object({\n  uid: nanoidSchema.brand<ENTITY_BRANDS['WORKSPACE']>(),\n  name: z.string().default('Default Workspace'),\n  /** Workspace description */\n  description: z.string().default('Basic Scalar Workspace'),\n  /** List of all collection uids in a given workspace */\n  collections: z.array(z.string().brand<ENTITY_BRANDS['COLLECTION']>()).default([]),\n  /** List of all environment uids in a given workspace, TODO: why is this a record? */\n  environments: z.record(z.string()).default({}),\n  /** Customize hotkeys */\n  hotKeyConfig: hotKeyConfigSchema,\n  /** Active Environment ID to use for requests  */\n  activeEnvironmentId: z.string().optional().default('default'),\n  /** List of all cookie uids in a given workspace */\n  cookies: z.array(z.string().brand<ENTITY_BRANDS['COOKIE']>()).default([]),\n  /** Workspace level proxy for all requests to be sent through */\n  proxyUrl: z.string().optional(),\n  /** Workspace level theme, we might move this to user level later */\n  themeId: z.enum(themeIds).optional().default('default').catch('default'),\n  /** Currently selected snippet client */\n  selectedHttpClient: z\n    .object({\n      targetKey: z.string(),\n      clientKey: z.string(),\n    })\n    .optional()\n    .default({\n      targetKey: 'shell',\n      clientKey: 'curl',\n    }),\n})\n\n/** The base scalar workspace */\nexport type Workspace = z.infer<typeof workspaceSchema>\nexport type WorkspacePayload = z.input<typeof workspaceSchema>\n", "import { requestExampleSchema as m, collectionSchema as l } from \"@scalar/oas-utils/entities/spec\";\nimport { workspaceSchema as u } from \"@scalar/oas-utils/entities/workspace\";\nimport { LS_KEYS as f } from \"@scalar/helpers/object/local-storage\";\nimport { mutationFactory as k } from \"@scalar/object-utils/mutator-record\";\nimport { reactive as d } from \"vue\";\nimport { createInitialRequest as h } from \"./requests.js\";\nfunction D(o) {\n  const e = d({}), r = k(e, d({}), o && f.WORKSPACE);\n  return {\n    workspaces: e,\n    workspaceMutators: r\n  };\n}\nfunction F({\n  workspaces: o,\n  workspaceMutators: e,\n  collectionMutators: r,\n  requestMutators: i,\n  requestExampleMutators: p\n}) {\n  return {\n    addWorkspace: (a = {}) => {\n      const { request: t } = h(), c = m.parse({\n        name: \"Example\",\n        requestUid: t.uid\n      });\n      t.examples.push(c.uid);\n      const s = l.parse({\n        info: {\n          title: \"Drafts\"\n        },\n        children: [t.uid],\n        requests: [t.uid]\n      }), n = u.parse({\n        ...a,\n        collections: [s.uid]\n      });\n      return p.add(c), i.add(t), r.add(s), e.add(n), n;\n    },\n    deleteWorkspace: (a) => {\n      if (Object.keys(o).length <= 1) {\n        console.warn(\"The last workspace cannot be deleted.\");\n        return;\n      }\n      e.delete(a);\n    }\n  };\n}\nexport {\n  D as createStoreWorkspaces,\n  F as extendedWorkspaceDataFactory\n};\n", "import { createStoreCollections as L, extendedCollectionDataFactory as R } from \"./collections.js\";\nimport { createStoreCookies as ee } from \"./cookies.js\";\nimport { createStoreEnvironments as te, extendedEnvironmentDataFactory as re } from \"./environment.js\";\nimport { createStoreEvents as oe } from \"./events.js\";\nimport { importSpecFileFactory as se } from \"./import-spec.js\";\nimport { createStoreRequestExamples as de, extendedExampleDataFactory as ae } from \"./request-example.js\";\nimport { createStoreRequests as ne, extendedRequestDataFactory as ce } from \"./requests.js\";\nimport { createStoreSecuritySchemes as ie, extendedSecurityDataFactory as me } from \"./security-schemes.js\";\nimport { createStoreServers as le, extendedServerDataFactory as pe } from \"./servers.js\";\nimport { createStoreTags as ue, extendedTagDataFactory as ve } from \"./tags.js\";\nimport { createStoreWorkspaces as Se, extendedWorkspaceDataFactory as fe } from \"./workspace.js\";\nimport { useModal as ye } from \"@scalar/components\";\nimport { inject as Ee, reactive as Me, ref as xe, toRaw as r } from \"vue\";\nconst ge = ({\n  useLocalStorage: e = !0,\n  showSidebar: C = !0,\n  proxyUrl: a,\n  theme: y,\n  hideClientButton: D = !1,\n  _integration: A\n}) => {\n  const { collections: n, collectionMutators: c } = L(e), { tags: i, tagMutators: m } = ue(e), { requests: l, requestMutators: p } = ne(e), { requestExamples: u, requestExampleMutators: v } = de(e), { cookies: E, cookieMutators: b } = ee(e), { environments: M, environmentMutators: x } = te(e), { servers: q, serverMutators: S } = le(e), { securitySchemes: w, securitySchemeMutators: f } = ie(e), { workspaces: d, workspaceMutators: o } = Se(e), t = {\n    collections: n,\n    collectionMutators: c,\n    tags: i,\n    tagMutators: m,\n    requests: l,\n    requestMutators: p,\n    requestExamples: u,\n    requestExampleMutators: v,\n    environmentMutators: x,\n    serverMutators: S,\n    securitySchemeMutators: f,\n    workspaces: d,\n    workspaceMutators: o\n  }, { addTag: k, deleteTag: T } = ve(t), { addRequest: I, deleteRequest: O, findRequestParents: g } = ce(t, k), { deleteEnvironment: j } = re(t), { addServer: P, deleteServer: B } = pe(t), { addCollection: H, deleteCollection: K } = R(t), { addRequestExample: Y, deleteRequestExample: _ } = ae(t), { addWorkspace: z, deleteWorkspace: G } = fe(t), { addSecurityScheme: J, deleteSecurityScheme: N } = me(t), { addCollectionEnvironment: h, removeCollectionEnvironment: F } = R(t), Q = Me([]), { importSpecFile: U, importSpecFromUrl: V } = se(t), W = xe((e ? localStorage == null ? void 0 : localStorage.getItem(\"sidebarWidth\") : void 0) || \"280px\"), X = (s) => {\n    W.value = s, e && (localStorage == null || localStorage.setItem(\"sidebarWidth\", s));\n  }, Z = ye();\n  Object.values(d).forEach(({ uid: s }) => {\n    a && o.edit(s, \"proxyUrl\", a), y && o.edit(s, \"themeId\", y);\n  }), typeof window < \"u\" && (window.dataDump = () => ({\n    collections: r(n),\n    cookies: r(E),\n    environments: r(M),\n    requestExamples: r(u),\n    requests: r(l),\n    securitySchemes: r(w),\n    servers: r(q),\n    tags: r(i),\n    workspaces: r(d)\n  }));\n  const $ = oe();\n  return {\n    // ---------------------------------------------------------------------------\n    // STATE\n    workspaces: d,\n    collections: n,\n    tags: i,\n    cookies: E,\n    environments: M,\n    requestExamples: u,\n    requests: l,\n    servers: q,\n    securitySchemes: w,\n    modalState: Z,\n    events: $,\n    sidebarWidth: W,\n    setSidebarWidth: X,\n    proxyUrl: a,\n    // ---------------------------------------------------------------------------\n    // CONFIGURATION \"PROPS\"\n    // TODO: move these to their own store\n    hideClientButton: D,\n    showSidebar: C,\n    integration: A,\n    // ---------------------------------------------------------------------------\n    // METHODS\n    importSpecFile: U,\n    importSpecFromUrl: V,\n    cookieMutators: b,\n    collectionMutators: {\n      ...c,\n      rawAdd: c.add,\n      add: H,\n      delete: K,\n      addEnvironment: h,\n      removeEnvironment: F\n    },\n    environmentMutators: {\n      ...x,\n      delete: j\n    },\n    requestMutators: {\n      ...p,\n      rawAdd: p.add,\n      add: I,\n      delete: O\n    },\n    findRequestParents: g,\n    requestExampleMutators: {\n      ...v,\n      rawAdd: v.add,\n      add: Y,\n      delete: _\n    },\n    requestHistory: Q,\n    securitySchemeMutators: {\n      ...f,\n      rawAdd: f.add,\n      add: J,\n      delete: N\n    },\n    serverMutators: {\n      ...S,\n      rawAdd: S.add,\n      add: P,\n      delete: B\n    },\n    tagMutators: {\n      ...m,\n      rawAdd: m.add,\n      add: k,\n      delete: T\n    },\n    workspaceMutators: {\n      ...o,\n      rawAdd: o.add,\n      add: z,\n      delete: G\n    },\n    addCollectionEnvironment: h,\n    removeCollectionEnvironment: F\n  };\n}, qe = Symbol(), je = () => {\n  const e = Ee(qe);\n  if (!e)\n    throw new Error(\"Workspace store not provided\");\n  return e;\n};\nexport {\n  qe as WORKSPACE_SYMBOL,\n  ge as createWorkspaceStore,\n  je as useWorkspace\n};\n", "var a = /* @__PURE__ */ ((e) => (e.Request = \"request\", e.Examples = \"examples\", e.Cookies = \"cookies\", e.Collection = \"collection\", e.Schema = \"schema\", e.Environment = \"environment\", e.Servers = \"servers\", e.Workspace = \"workspace\", e.Settings = \"settings\", e))(a || {});\nconst o = \"activeWorkspace\";\nfunction s(e) {\n  const t = e.params.workspace;\n  t && localStorage.setItem(o, `${t}`);\n}\nfunction n() {\n  const e = localStorage.getItem(o);\n  return e ? {\n    name: \"request.root\",\n    params: {\n      workspace: e\n    }\n  } : {\n    name: \"workspace.default\"\n  };\n}\nconst r = [\n  {\n    name: \"request.root\",\n    path: \"\",\n    component: () => import(\"./views/Request/RequestRoot.vue.js\"),\n    redirect: (e) => ({\n      name: \"request\",\n      params: { ...e.params, request: \"default\" }\n    }),\n    children: [\n      {\n        name: \"request\",\n        path: \"request/:request\",\n        component: () => import(\"./views/Request/Request.vue.js\")\n      },\n      {\n        name: \"request.examples\",\n        path: \"request/:request/examples/:examples\",\n        component: () => import(\"./views/Request/Request.vue.js\")\n      },\n      {\n        name: \"collection\",\n        path: \"collection/:collection\",\n        component: () => import(\"./views/Collection/Collection.vue.js\"),\n        redirect: () => ({\n          name: \"collection.overview\"\n        }),\n        children: [\n          {\n            name: \"collection.overview\",\n            path: \"overview\",\n            component: () => import(\"./views/Collection/CollectionOverview.vue.js\")\n          },\n          {\n            name: \"collection.servers\",\n            path: \"servers\",\n            component: () => import(\"./views/Collection/CollectionServers.vue.js\"),\n            children: [\n              {\n                name: \"collection.servers.edit\",\n                path: \":servers\",\n                component: () => import(\"./views/Collection/CollectionServers.vue.js\")\n              }\n            ]\n          },\n          {\n            name: \"collection.environment\",\n            path: \"environment\",\n            component: () => import(\"./views/Collection/CollectionEnvironment.vue.js\")\n          },\n          {\n            name: \"collection.authentication\",\n            path: \"authentication\",\n            component: () => import(\"./views/Collection/CollectionAuthentication.vue.js\")\n          },\n          {\n            name: \"collection.cookies\",\n            path: \"cookies\",\n            component: () => import(\"./views/Collection/CollectionCookies.vue.js\")\n          },\n          {\n            name: \"collection.scripts\",\n            path: \"scripts\",\n            component: () => import(\"./views/Collection/CollectionScripts.vue.js\")\n          },\n          {\n            name: \"collection.sync\",\n            path: \"sync\",\n            component: () => import(\"./views/Collection/CollectionSync.vue.js\")\n          },\n          {\n            name: \"collection.settings\",\n            path: \"settings\",\n            component: () => import(\"./views/Collection/CollectionSettings.vue.js\")\n          }\n        ]\n      }\n    ]\n  }\n], c = [\n  {\n    name: \"root\",\n    path: \"/\",\n    redirect: n\n  },\n  {\n    name: \"workspace.default\",\n    path: \"/workspace\",\n    redirect: {\n      name: \"workspace\",\n      params: {\n        workspace: \"default\"\n      }\n    }\n  },\n  {\n    name: \"workspace\",\n    path: \"/workspace/:workspace\",\n    redirect: {\n      name: \"request.root\"\n    },\n    children: r\n  }\n], m = [\n  {\n    name: \"root\",\n    path: \"/\",\n    redirect: n\n  },\n  {\n    name: \"workspace.default\",\n    path: \"/workspace\",\n    redirect: {\n      name: \"request.root\",\n      params: {\n        workspace: \"default\"\n      }\n    }\n  },\n  {\n    name: \"workspace\",\n    path: \"/workspace/:workspace\",\n    redirect: {\n      name: \"request.root\"\n    },\n    children: [\n      ...r,\n      {\n        name: \"environment.default\",\n        path: \"environment\",\n        redirect: (e) => ({\n          name: \"environment\",\n          params: { ...e.params, environment: \"default\" }\n        })\n      },\n      {\n        name: \"environment\",\n        path: \"environment/:environment\",\n        component: () => import(\"./views/Environment/Environment.vue.js\")\n      },\n      {\n        name: \"environment.collection\",\n        path: \"environment/:collection/:environment\",\n        component: () => import(\"./views/Environment/Environment.vue.js\"),\n        props: !0\n      },\n      {\n        name: \"cookies.default\",\n        path: \"cookies\",\n        redirect: (e) => ({\n          name: \"cookies\",\n          params: { ...e.params, cookies: \"default\" }\n        })\n      },\n      {\n        name: \"cookies\",\n        path: \"cookies/:cookies\",\n        component: () => import(\"./views/Cookies/Cookies.vue.js\")\n      },\n      {\n        name: \"servers.default\",\n        path: \"servers\",\n        redirect: (e) => ({\n          name: \"servers\",\n          params: {\n            ...e.params,\n            collection: \"default\",\n            servers: \"default\"\n          }\n        })\n      },\n      {\n        name: \"settings.default\",\n        path: \"settings\",\n        redirect: (e) => ({\n          name: \"settings\",\n          params: { ...e.params, settings: \"general\" }\n        })\n      },\n      {\n        name: \"settings\",\n        path: \"settings/:settings\",\n        component: () => import(\"./views/Settings/Settings.vue.js\")\n      }\n    ]\n  }\n];\nexport {\n  a as PathId,\n  c as modalRoutes,\n  n as redirectToActiveWorkspace,\n  m as routes,\n  s as saveActiveWorkspace\n};\n", "import { REGEX as l, isDefined as a } from \"@scalar/oas-utils/helpers\";\nfunction i(c, o) {\n  const n = c.split(\".\").reduce((s, r) => s == null ? void 0 : s[r], o);\n  return typeof n == \"string\" ? n : JSON.stringify(n);\n}\nfunction p(c, o) {\n  let t = c;\n  const n = /* @__PURE__ */ new Set();\n  return t = t.replace(l.VARIABLES, (s, r) => {\n    const e = r.trim();\n    n.add(e);\n    const u = i(e, o);\n    return a(u) && u !== \"\" ? u : `{{${e}}}`;\n  }), t = t.replace(l.PATH, (s, r) => {\n    const e = r.trim();\n    if (n.has(e))\n      return `{${e}}`;\n    const u = i(e, o);\n    return a(u) && u !== \"\" ? u : `{${e}}`;\n  }), t = t.replace(/:\\b[\\w.]+\\b/g, (s) => {\n    const r = s.slice(1);\n    if (n.has(r))\n      return s;\n    const e = i(r, o);\n    return a(e) && e !== \"\" ? e : s;\n  }), t;\n}\nfunction y(c) {\n  function o(t, n) {\n    const s = Object.keys(t), r = [];\n    return s.forEach((e) => {\n      const u = n ? `${n}.${e}` : e;\n      typeof t[e] == \"object\" ? r.push(...o(t[e], u)) : r.push([u, String(t[e])]);\n    }), r;\n  }\n  return o(c);\n}\nexport {\n  y as flattenEnvVars,\n  i as getDotPathValue,\n  p as replaceTemplateVariables\n};\n", "import { PathId as e } from \"../routes.js\";\nfunction n(t) {\n  return () => {\n    const a = {\n      [e.Collection]: \"default\",\n      [e.Environment]: \"default\",\n      [e.Request]: \"default\",\n      [e.Examples]: \"default\",\n      [e.Schema]: \"default\",\n      [e.Cookies]: \"default\",\n      [e.Servers]: \"default\",\n      [e.Workspace]: \"default\",\n      [e.Settings]: \"default\"\n    }, u = t == null ? void 0 : t.currentRoute.value;\n    return u && Object.keys(a).forEach((f) => {\n      u.params[f] && (a[f] = u.params[f]);\n    }), a;\n  };\n}\nexport {\n  n as getRouterParams\n};\n", "import { flattenEnvVars as C } from \"../libs/string-template.js\";\nimport { environmentSchema as k } from \"@scalar/oas-utils/entities/environment\";\nimport { isDefined as D } from \"@scalar/oas-utils/helpers\";\nimport { inject as J, computed as i } from \"vue\";\nimport { getRouterParams as M } from \"./router-params.js\";\nimport { PathId as m } from \"../routes.js\";\nconst Y = ({\n  collections: l,\n  requestExamples: O,\n  requests: E,\n  router: N,\n  servers: p,\n  workspaces: I\n}) => {\n  const s = i(M(N)), r = i(\n    () => I[s.value[m.Workspace]] ?? Object.values(I)[0]\n  ), d = i(\n    () => {\n      var e;\n      return ((e = r.value) == null ? void 0 : e.collections.map((t) => l[t]).filter(D).sort((t, n) => {\n        var v, o;\n        return ((v = t.info) == null ? void 0 : v.title) === \"Drafts\" ? 1 : ((o = n.info) == null ? void 0 : o.title) === \"Drafts\" ? -1 : 0;\n      })) ?? [];\n    }\n  ), h = i(\n    () => {\n      var e;\n      return (e = d.value) == null ? void 0 : e.flatMap((t) => t.servers.map((n) => p[n]));\n    }\n  ), U = i(\n    () => {\n      var e;\n      return ((e = d.value) == null ? void 0 : e.flatMap((t) => t.requests)) ?? [];\n    }\n  ), F = i(() => {\n    var t, n, v, o, u, a, c, b, y;\n    if (!((t = r.value) != null && t.activeEnvironmentId))\n      return k.parse({\n        uid: \"default\",\n        color: \"#FFFFFF\",\n        name: \"No Environment\",\n        value: JSON.stringify((n = r.value) == null ? void 0 : n.environments, null, 2)\n      });\n    const e = d.value.find(\n      (j) => {\n        var g, x;\n        return (x = j[\"x-scalar-environments\"]) == null ? void 0 : x[((g = r.value) == null ? void 0 : g.activeEnvironmentId) ?? \"\"];\n      }\n    );\n    return e && ((v = r.value) != null && v.activeEnvironmentId) ? k.parse({\n      uid: r.value.activeEnvironmentId,\n      name: r.value.activeEnvironmentId,\n      value: JSON.stringify(\n        (a = (u = e[\"x-scalar-environments\"]) == null ? void 0 : u[(o = r.value) == null ? void 0 : o.activeEnvironmentId]) == null ? void 0 : a.variables,\n        null,\n        2\n      ),\n      color: ((y = (b = e[\"x-scalar-environments\"]) == null ? void 0 : b[(c = r.value) == null ? void 0 : c.activeEnvironmentId]) == null ? void 0 : y.color) || \"#FFFFFF\",\n      isDefault: !1\n    }) : k.parse({\n      uid: \"default\",\n      color: \"#FFFFFF\",\n      name: \"No Environment\",\n      value: JSON.stringify(r.value.environments, null, 2)\n    });\n  }), f = i(() => {\n    var n;\n    const e = s.value[m.Request], t = l[s.value.collection] || l[((n = r.value) == null ? void 0 : n.collections[0]) ?? \"\"];\n    return E[e] || E[(t == null ? void 0 : t.requests[0]) ?? \"\"] || Object.values(E)[0];\n  }), q = i(() => {\n    var t;\n    const e = s.value[m.Examples] === \"default\" ? ((t = f.value) == null ? void 0 : t.examples[0]) || \"\" : s.value[m.Examples];\n    return O[e];\n  }), S = i(() => {\n    var v, o, u;\n    const e = l[s.value[m.Collection]];\n    if (e)\n      return e;\n    const t = (v = f.value) == null ? void 0 : v.uid;\n    if (t)\n      return Object.values(l).find((a) => {\n        var c;\n        return (c = a.requests) == null ? void 0 : c.includes(t);\n      });\n    const n = ((o = r.value) == null ? void 0 : o.collections[0]) ?? ((u = l[0]) == null ? void 0 : u.uid) ?? \"\";\n    return l[n];\n  }), A = i(() => {\n    var e, t;\n    if ((e = f.value) != null && e.selectedServerUid) {\n      const n = p[f.value.selectedServerUid];\n      if (n)\n        return n;\n    }\n    if ((t = S.value) != null && t.selectedServerUid) {\n      const n = p[S.value.selectedServerUid];\n      if (n)\n        return n;\n    }\n  }), R = i(\n    () => {\n      var e;\n      return s.value[m.Cookies] === \"default\" ? ((e = r.value) == null ? void 0 : e.cookies[0]) ?? \"default\" : s.value[m.Cookies];\n    }\n  ), W = i(() => {\n    var u;\n    const e = ((u = r.value) == null ? void 0 : u.environments) ?? {}, t = F.value.uid ? JSON.parse(F.value.value) : {}, n = C(e).map(([a, c]) => ({\n      key: a,\n      value: c,\n      source: \"global\"\n    })), v = C(t).map(([a, c]) => ({\n      key: a,\n      value: c,\n      source: \"collection\"\n    })), o = /* @__PURE__ */ new Map();\n    return v.forEach((a) => {\n      o.set(a.key, a);\n    }), n.forEach((a) => {\n      o.has(a.key) || o.set(a.key, a);\n    }), Array.from(o.values());\n  });\n  return {\n    activeCollection: S,\n    activeCookieId: R,\n    activeExample: q,\n    activeRequest: f,\n    activeRouterParams: s,\n    activeEnvironment: F,\n    activeServer: A,\n    activeWorkspace: r,\n    activeWorkspaceCollections: d,\n    activeWorkspaceServers: h,\n    activeEnvVariables: W,\n    activeWorkspaceRequests: U\n  };\n}, P = Symbol(), z = () => {\n  const l = J(P);\n  if (!l)\n    throw new Error(\"Active entities store not provided\");\n  return l;\n};\nexport {\n  P as ACTIVE_ENTITIES_SYMBOL,\n  Y as createActiveEntitiesStore,\n  z as useActiveEntities\n};\n"],
  "mappings": "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yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,YAAY;UACV,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,iBAAiB;UACf,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,WAAW;UACT,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,mBAAmB;UACjB,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,SAAS;UACP,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;QACA,aAAa;UACX,QAAQ;UACR,qBAAqB;YACnB,yBAAyB;cACvB,SAAS;gBACP;kBACE,QAAQ;gBACV;gBACA;kBACE,QAAQ;gBACV;cACF;YACF;UACF;QACF;MACF;MACA,qBAAqB;QACnB,OAAO,CAAC;MACV;MACA,wBAAwB;IAC1B;IACA,UAAU;MACR,QAAQ;MACR,cAAc;QACZ,SAAS;UACP,QAAQ;QACV;QACA,cAAc;UACZ,QAAQ;UACR,WAAW;UACX,oBAAoB;QACtB;QACA,WAAW;UACT,QAAQ;QACV;QACA,oBAAoB;UAClB,QAAQ;UACR,WAAW;QACb;QACA,WAAW;UACT,QAAQ;QACV;QACA,oBAAoB;UAClB,QAAQ;UACR,WAAW;QACb;QACA,aAAa;UACX,QAAQ;UACR,WAAW;QACb;QACA,aAAa;UACX,QAAQ;UACR,WAAW;UACX,WAAW;QACb;QACA,WAAW;UACT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AAK;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,WAAW;AAAA,IACT,KAAK;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,UAAU;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,SAAS;AAAA,IACP,KAAK;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF;AACA,IAAM,eAAe,OAAO,OAAO,OAAO;AAQ1C,IAAM,iBAAiB,CAAC,SAAS,SAAS;AACxC,MAAI;AACJ,QAAM,EAAE,QAAQ,MAAM,QAAQ,eAAe,IAAI,QAAQ,CAAC;AAC1D,QAAM,SAAS;AAAA,MACX,KAAK,QAAQ,WAAW,SAAS,MAAM,OAAO,SAAS,GAAG,UAAU;AAAA,IACtE,QAAQ,eAAe;AAAA,EACzB,EAAE,KAAK,EAAE;AACT,MAAI,OAAO;AACT,WAAO,UAAU,KAAK;AAAA,EACxB,MAAM;AAAA,EACN;AACA,SAAO;AACT;;;AC/JO,IAAM,qBAAqB;EAChC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAUO,IAAM,eAAe;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;E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",
  "names": ["s", "c", "_", "i", "a", "stringify", "UsedValueState", "s", "c", "n", "i", "c", "y", "unescapeJsonPointer", "escapeJsonPointer", "f", "p", "Type", "i", "DataType", "t", "i", "p", "i", "validate", "_a", "a", "i", "keys", "traverse", "i", "traverse", "normalize", "p", "_", "ref", "t", "ref", "validate", "ref", "resolve", "s2", "p", "c", "i", "s", "normalize", "parse", "resolve", "relative", "s", "k", "i", "o", "s", "v", "ref", "p", "k", "t", "i", "v", "i", "t", "i", "v", "i", "i", "i", "p", "p", "p", "i", "i", "DiscrError", "i", "ref", "v", "validate", "s2", "a2", "v", "addFormats", "f", "v", "validate", "ref", "v", "validate", "p", "i", "require_applicator", "require_unevaluated", "require_core", "require_validation", "Ajv2020", "v", "m", "pointer", "p", "get", "set", "object", "t", "o", "r", "c", "XScalarStability", "o", "keys", "_a", "_", "v", "k", "isObject", "a", "_", "example", "_a", "p", "h", "keys", "_", "y", "k", "i", "a", "parse", "stringify", "v", "value", "stringify", "s", "i", "a", "v", "d", "c", "h", "o", "t", "n", "r", "f", "m", "s", "r", "o", "n", "t", "t", "f", "n", "o", "r", "i", "c", "r", "schema_default", "schema_default", "schema_default", "isJson", "t", "resolve", "dereference", "_", "authorizationUrl", "tokenUrl", "i", "p", "normalize", "f", "cache", "p", "getNestedValue", "path", "i", "ref", "traverse", "cache", "document", "dereference", "k", "_a", "_b", "_c", "_d", "_e", "s", "v", "t", "securityRequirements", "keys", "preferredSecurityNames", "r", "i", "selectedSecuritySchemeUids", "c", "s", "m", "p", "d", "f", "h", "n", "t", "a", "i", "c", "r", "o", "T", "o", "t", "m", "p", "a", "r", "s", "d", "i", "p", "f", "q", "c", "n", "m", "R", "r", "t", "s", "h", "a", "o", "O", "i", "d", "i", "k", "s", "y", "t", "r", "m", "d", "a", "c", "s", "r", "v", "f", "d", "t", "d", "a", "s", "c", "m", "t", "n", "r", "f", "i", "h", "o", "r", "F", "i", "p", "a", "t", "c", "s", "n", "a", "y", "D", "n", "c", "i", "m", "p", "v", "T", "s", "q", "f", "d", "o", "t", "k", "O", "g", "P", "Y", "_", "z", "F", "h", "Q", "W", "r", "a", "n", "r", "c", "o", "n", "s", "r", "t", "n", "t", "a", "f", "Y", "O", "p", "s", "n", "r", "a", "d", "t", "v", "o", "h", "F", "c", "y", "g", "f", "q", "R", "W", "z"]
}
